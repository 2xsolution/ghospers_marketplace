[{"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\index.js":"1","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\App.js":"2","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\reportWebVitals.js":"3","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\mint\\Mint.js":"4","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\Contact\\Contact.js":"5","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\ConnectWallet\\ConnectWallet.js":"6","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\Home\\Home.js":"7","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\NFTDetail\\NFTdetail.js":"8","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\components\\Header.js":"9","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\components\\MultiRangeInput.js":"10","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\core\\web3.js":"11","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\utils\\Utils.js":"12","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\components\\loader\\Loader.js":"13","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\profile\\Profile.js":"14","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\mint\\IPFSUtils.js":"15","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\profile\\updateModal\\UpdateModal.js":"16","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\components\\accordian\\Accordian.js":"17","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\components\\accordian\\AccordianData.js":"18","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\mint\\addPropertyModal.js\\AddPropertyModal.js":"19","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\index.js":"20","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\App.js":"21","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\reportWebVitals.js":"22","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\NFTDetail\\NFTdetail.js":"23","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\mint\\Mint.js":"24","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\Home\\Home.js":"25","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\profile\\Profile.js":"26","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\Contact\\Contact.js":"27","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\ConnectWallet\\ConnectWallet.js":"28","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\mint\\IPFSUtils.js":"29","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\utils\\Utils.js":"30","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\components\\Header.js":"31","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\mint\\addPropertyModal.js\\AddPropertyModal.js":"32","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\components\\MultiRangeInput.js":"33","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\components\\loader\\Loader.js":"34","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\components\\accordian\\Accordian.js":"35","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\profile\\updateModal\\UpdateModal.js":"36","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\core\\web3.js":"37"},{"size":603,"mtime":1648115103756,"results":"38","hashOfConfig":"39"},{"size":1283,"mtime":1648298273159,"results":"40","hashOfConfig":"39"},{"size":375,"mtime":1648115103768,"results":"41","hashOfConfig":"39"},{"size":10137,"mtime":1648579874531,"results":"42","hashOfConfig":"39"},{"size":1378,"mtime":1648115103760,"results":"43","hashOfConfig":"39"},{"size":2200,"mtime":1648115103758,"results":"44","hashOfConfig":"39"},{"size":15616,"mtime":1648579972178,"results":"45","hashOfConfig":"39"},{"size":7032,"mtime":1648579874644,"results":"46","hashOfConfig":"39"},{"size":2470,"mtime":1648579874510,"results":"47","hashOfConfig":"39"},{"size":2694,"mtime":1648115103748,"results":"48","hashOfConfig":"39"},{"size":7436,"mtime":1648579874526,"results":"49","hashOfConfig":"39"},{"size":177,"mtime":1648578452876,"results":"50","hashOfConfig":"39"},{"size":238,"mtime":1648133365107,"results":"51","hashOfConfig":"39"},{"size":12284,"mtime":1648579874615,"results":"52","hashOfConfig":"39"},{"size":2034,"mtime":1648210876491,"results":"53","hashOfConfig":"39"},{"size":3636,"mtime":1648579874542,"results":"54","hashOfConfig":"39"},{"size":3460,"mtime":1648579874512,"results":"55","hashOfConfig":"39"},{"size":2113,"mtime":1648453158027,"results":"56","hashOfConfig":"39"},{"size":3047,"mtime":1648579874540,"results":"57","hashOfConfig":"39"},{"size":747,"mtime":1648590110696,"results":"58","hashOfConfig":"59"},{"size":1283,"mtime":1648590094732,"results":"60","hashOfConfig":"59"},{"size":375,"mtime":1647857396230,"results":"61","hashOfConfig":"59"},{"size":7032,"mtime":1648586476848,"results":"62","hashOfConfig":"59"},{"size":10629,"mtime":1648591168854,"results":"63","hashOfConfig":"59"},{"size":15624,"mtime":1648586476839,"results":"64","hashOfConfig":"59"},{"size":12284,"mtime":1648589179687,"results":"65","hashOfConfig":"59"},{"size":1378,"mtime":1647857396228,"results":"66","hashOfConfig":"59"},{"size":2200,"mtime":1647857396227,"results":"67","hashOfConfig":"59"},{"size":2034,"mtime":1647894973122,"results":"68","hashOfConfig":"59"},{"size":177,"mtime":1648307589933,"results":"69","hashOfConfig":"59"},{"size":2470,"mtime":1648549049943,"results":"70","hashOfConfig":"59"},{"size":3047,"mtime":1648549049947,"results":"71","hashOfConfig":"59"},{"size":2694,"mtime":1647857396225,"results":"72","hashOfConfig":"59"},{"size":238,"mtime":1648149926008,"results":"73","hashOfConfig":"59"},{"size":3460,"mtime":1648551409946,"results":"74","hashOfConfig":"59"},{"size":3636,"mtime":1648551409949,"results":"75","hashOfConfig":"59"},{"size":8116,"mtime":1648591047543,"results":"76","hashOfConfig":"59"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},"17edddb",{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"79"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"79"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10z5on5",{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"124"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"124"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"124"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"124"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"124"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"124"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\index.js",[],["160","161"],"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\App.js",[],"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\reportWebVitals.js",[],"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\mint\\Mint.js",["162","163","164","165","166","167","168"],"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\Contact\\Contact.js",[],"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\ConnectWallet\\ConnectWallet.js",[],"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\Home\\Home.js",["169","170","171","172","173","174","175","176","177","178"],"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\NFTDetail\\NFTdetail.js",["179","180","181","182"],"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\components\\Header.js",[],"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\components\\MultiRangeInput.js",[],"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\core\\web3.js",[],"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\utils\\Utils.js",[],"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\components\\loader\\Loader.js",[],"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\profile\\Profile.js",["183","184","185","186","187","188","189","190","191","192","193","194","195"],"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\mint\\IPFSUtils.js",["196"],"import { create, urlSource } from 'ipfs-http-client'\r\nimport axios from 'axios';\r\n//import IPFS from 'nano-ipfs-store'\r\nlet all = require('it-all')\r\n\r\nlet client = create('https://ipfs.infura.io:5001/api/v0');\r\n\r\nconst uploadFileToIPFS = async (files) => {\r\n    console.log(\"enter uploadFileToIPFS\", files);\r\n    let lists = [];\r\n    try {\r\n        for (let i = 0; i < files.length; i++) {\r\n            const added = await client.add(files[i])\r\n            const url = `https://ipfs.infura.io/ipfs/${added.path}`\r\n            console.log(\"[GD], FileName = \", files[i].name, \", Hash: \", added.path)\r\n            lists.push(url)\r\n        }\r\n        return lists\r\n    } catch (err) {\r\n        console.log(\"Error uploading file: \", err)\r\n        return []\r\n    }\r\n}\r\n\r\nconst uploadFolderToIPFS = async (files) => {\r\n    try {\r\n        /*let fileObjectsArray = Array.from(files).map((file) => {\r\n            return {\r\n                path: file.name,\r\n                content: file\r\n            }\r\n        })*/\r\n        const results = await all(\r\n            client.addAll(files, { wrapWithDirectory: true })\r\n        )\r\n        const length = results.length\r\n        const filesHash = results[length - 1].cid._baseCache.get('z')\r\n        const filesUrl = 'https://ipfs.infura.io/ipfs/' + filesHash\r\n        return filesUrl\r\n    } catch (err) {\r\n        console.log(\"[GD], Error uploading file: \", err)\r\n        return \"\"\r\n    }\r\n}\r\n\r\nconst uploadTextToIPFS = async (data) => {\r\n    try {\r\n        let doc = JSON.stringify(data)\r\n        const added = await client.add(doc)\r\n        const filesUrl = 'https://ipfs.infura.io/ipfs/' + added.path;\r\n        return filesUrl\r\n    } catch (err) {\r\n        //console.log(\"Error: \", err)\r\n        return null\r\n    }\r\n}\r\n\r\nconst loadFromIPFS = async (url) => {\r\n    let res = await axios.get(`https://ipfs.infura.io/ipfs/${url}`)\r\n    return res;\r\n}\r\n\r\n\r\nconst IPFSUtils = {\r\n    uploadFileToIPFS,\r\n    uploadFolderToIPFS,\r\n    uploadTextToIPFS,\r\n    loadFromIPFS\r\n}\r\n\r\n\r\nexport default IPFSUtils;","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\profile\\updateModal\\UpdateModal.js",[],"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\components\\accordian\\Accordian.js",["197","198","199","200"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./accordian.css\";\r\nfunction Accordian({ title, content, setSingleSelectedProperty }) {\r\n  const [contentArray, setContentArray] = useState(content);\r\n  const [searchInput, setsearchInput] = useState(\"\");\r\n  const [resultsArray, setResultsArray] = useState(contentArray);\r\n  const [showContent, setShowContent] = useState(false);\r\n  const [selectedProperties, setSelectedProperties] = useState({\r\n    type: \"\",\r\n    values: [],\r\n  });\r\n\r\n  const onChange = (e) => {\r\n    setsearchInput(e.target.value);\r\n    if (e.target.value == \"\") {\r\n      setResultsArray(contentArray);\r\n    } else {\r\n      var resultArray = contentArray.filter((text) =>\r\n        text.includes(searchInput.toLowerCase())\r\n      );\r\n      setResultsArray(resultArray);\r\n    }\r\n  };\r\n\r\n  const alreadyPresent = (data) => {\r\n    return selectedProperties && selectedProperties.values.includes(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(selectedProperties);\r\n    setSingleSelectedProperty(selectedProperties);\r\n  }, [selectedProperties]);\r\n\r\n  return (\r\n    <div className=\"accordian-div\">\r\n      <div className=\"accordian-header\">\r\n        <h4>{title}</h4>\r\n        {showContent ? (\r\n          <i\r\n            class=\"fa-solid fa-caret-up\"\r\n            onClick={() => setShowContent(false)}\r\n          ></i>\r\n        ) : (\r\n          <i\r\n            class=\"fa-solid fa-caret-down\"\r\n            onClick={() => setShowContent(true)}\r\n          ></i>\r\n        )}\r\n      </div>\r\n      <div className=\"accordian-content\">\r\n        {showContent && (\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"select-search-input\"\r\n              placeholder=\"Search\"\r\n              value={searchInput}\r\n              onChange={onChange}\r\n            />\r\n            <ul>\r\n              <div className=\"checkbox\">\r\n                {resultsArray &&\r\n                  resultsArray.map((data, index) => {\r\n                    return (\r\n                      <label className=\"checkbox-wrap\" key={index}>\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={\r\n                            selectedProperties &&\r\n                            selectedProperties.values.includes(data)\r\n                          }\r\n                          onChange={() => {\r\n                            if (alreadyPresent(data)) {\r\n                              var remainingValues =\r\n                                selectedProperties.values.filter(\r\n                                  (x) => x != data\r\n                                );\r\n                              setSelectedProperties({\r\n                                type: title,\r\n                                values: remainingValues,\r\n                              });\r\n                            } else {\r\n                              setSelectedProperties((prev) => ({\r\n                                type: title,\r\n                                values: [...prev.values, data],\r\n                              }));\r\n                            }\r\n                          }}\r\n                        />\r\n                        <span className=\"checkmark\"></span>\r\n                        {data}\r\n                      </label>\r\n                    );\r\n                  })}\r\n              </div>\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Accordian;\r\n","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\components\\accordian\\AccordianData.js",[],"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\mint\\addPropertyModal.js\\AddPropertyModal.js",["201","202"],"D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\index.js",[],"D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\App.js",[],"D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\reportWebVitals.js",[],["203","204"],"D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\NFTDetail\\NFTdetail.js",["205","206","207","208"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Header from \"../../components/Header\";\r\nimport NFTimg from \"../../assets/img/nftimg.png\";\r\nimport coinIcon from \"../../assets/img/coinicon.png\";\r\nimport Icon from \"../../assets/img/icon_stat.png\";\r\nimport SwordIcon from \"../../assets/img/sword.png\";\r\nimport \"./nftdetail.css\";\r\nimport axios from \"axios\";\r\nimport { BASEURL } from \"../../utils/Utils\";\r\nimport {\r\n  loadWeb3,\r\n  connectWallet,\r\n  buyNFTWithBNB,\r\n  buyNFTWithBUSD,\r\n  buyNFTWithGHSP,\r\n} from \"../../core/web3\";\r\n\r\nconst NFTdetail = ({ setShowModal }) => {\r\n  console.log(useParams());\r\n  const [nftDetail, setNftDetail] = useState(null);\r\n  const [walletAddress, setWalletAddress] = useState(\"\");\r\n  const [selectedTabIndex, setSelectedTabIndex] = useState(0);\r\n  useEffect(() => {\r\n    const initWeb3 = async () => {\r\n      await loadWeb3();\r\n      let addr = await connectWallet();\r\n      setWalletAddress(addr.address);\r\n    };\r\n\r\n    initWeb3();\r\n  }, []);\r\n\r\n  const { nftId, tokenId } = useParams();\r\n  console.log(nftId);\r\n  console.log(tokenId);\r\n  useEffect(() => {\r\n    console.log(nftId);\r\n    loadNftById(nftId);\r\n  }, [nftId]);\r\n\r\n  const loadNftById = async (id) => {\r\n    axios\r\n      .get(`${BASEURL}/nft/${id}`)\r\n      .then((response) => {\r\n        console.log(\"detail data\", response.data.data);\r\n        setNftDetail(response.data.data);\r\n      })\r\n      .catch((e) => console.log(e));\r\n  };\r\n\r\n  const buyNFT = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (tokenId) {\r\n      const saleTokenType = 2; // GHSP, BUSD, BNB\r\n      if (saleTokenType===0) {\r\n        await buyNFTWithGHSP(tokenId);\r\n      } else if (saleTokenType===1) {\r\n        await buyNFTWithBUSD(tokenId);\r\n      } else {\r\n        await buyNFTWithBNB(tokenId, 0.01);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header setShowModal={setShowModal} />\r\n      <section className=\"nft\">\r\n        <div className=\"container\">\r\n          <div className=\"home-btn\">\r\n            <Link to=\"/\">Back to home</Link>\r\n          </div>\r\n          <div className=\"nft-detail-container\">\r\n            <div className=\"nft-img\">\r\n              <img\r\n                src={nftDetail && `${BASEURL}/uploads/${nftDetail.imageUrl}`}\r\n                alt=\"nft_image\"\r\n              />\r\n            </div>\r\n            <div className=\"nft-detail\">\r\n              <div className=\"nft-titles\">\r\n                <div className=\"title\">\r\n                  <h1>{nftDetail && nftDetail.title} </h1>\r\n                  <p>{nftDetail && nftDetail.description} </p>\r\n                </div>\r\n                <div className=\"title-right\">\r\n                  <div className=\"head\">\r\n                    <p>Rarity</p>\r\n                    <span>{nftDetail?.type}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <p className=\"view-owner\"> View Owner</p>\r\n\r\n              <div className=\"nft-data\">\r\n                <ul className=\"tags\">\r\n                  <li>\r\n                    <p\r\n                      onClick={() => setSelectedTabIndex(0)}\r\n                      className={\r\n                        selectedTabIndex === 0 ? \"active-tag\" : \"inactive-tag\"\r\n                      }\r\n                    >\r\n                      P2E Info\r\n                    </p>\r\n                  </li>\r\n                  <li>\r\n                    <p\r\n                      onClick={() => setSelectedTabIndex(1)}\r\n                      className={\r\n                        selectedTabIndex === 1 ? \"active-tag\" : \"inactive-tag\"\r\n                      }\r\n                    >\r\n                      Traits\r\n                    </p>\r\n                  </li>\r\n                </ul>\r\n\r\n                {/* <div className=\"nft-reward\">\r\n                  <div className=\"icon\">\r\n                    <img src={coinIcon} alt=\"coinIcon\" />\r\n                  </div>\r\n                  <div className=\"rewards\">\r\n                    <p>Basic Battle Rewards:</p>\r\n                    <div className=\"reward-data\">\r\n                      <div className=\"reward\">\r\n                        <span>Win:</span>\r\n                        <span>+6</span>\r\n                      </div>\r\n                      <div className=\"reward\">\r\n                        <span>Draw:</span>\r\n                        <span>+2</span>\r\n                      </div>\r\n                      <div className=\"reward\">\r\n                        <span>Lose:</span>\r\n                        <span>+1</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div> */}\r\n                {selectedTabIndex === 1 ? (\r\n                  <div className=\"detail-card-flex\">\r\n                    {nftDetail &&\r\n                      nftDetail.properties.map((property) => {\r\n                        return (\r\n                          <div className=\"detail-card\">\r\n                            <p className=\"type\">{property.type}</p>\r\n                            <p className=\"value\">{property.value}</p>\r\n                            <p className=\"percentage\">48% have this trait</p>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                  </div>\r\n                ) : (\r\n                  <>\r\n                    <div className=\"nft-stats\">\r\n                      <div className=\"stat\">\r\n                        {/* <img src={Icon} alt=\"icon\" /> */}\r\n                        <p>Win Bonus</p>\r\n                      </div>\r\n                      <p>6.695</p>\r\n                    </div>\r\n                    <div className=\"nft-stats\">\r\n                      <div className=\"stat\">\r\n                        {/* <img src={SwordIcon} alt=\"icon\" /> */}\r\n                        <p>GHSP Battles</p>\r\n                      </div>\r\n                      <p>#/Infinite</p>\r\n                    </div>\r\n                    <div className=\"nft-stats\">\r\n                      <div className=\"stat\">\r\n                        {/* <img src={SwordIcon} alt=\"icon\" /> */}\r\n                        <p>Daily GHSP Battles</p>\r\n                      </div>\r\n                      <p>#/Infinite</p>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n              <div className=\"nft-price\">\r\n                <h1>1,800 {nftDetail?.currency?.toUpperCase()}</h1>\r\n                <p>{nftDetail && nftDetail.price} USD</p>\r\n              </div>\r\n              <div className=\"buy-btn\">\r\n                <a href=\"/\" onClick={buyNFT}>\r\n                  BUY NOW\r\n                </a>\r\n              </div>\r\n              {nftDetail && walletAddress===nftDetail.walletAddress && (\r\n                <div className=\"buy-btn\">\r\n                  <a href=\"/\" onClick={buyNFT}>\r\n                    SELL\r\n                  </a>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NFTdetail;\r\n","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\mint\\Mint.js",["209","210","211","212","213","214","215"],"D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\Home\\Home.js",["216","217","218","219","220","221","222","223","224"],"import React, { useEffect, useState } from \"react\";\r\nimport Header from \"../../components/Header\";\r\nimport MultiRangeInput from \"../../components/MultiRangeInput\";\r\n// import Card1 from \"../../assets/img/card1.png\";\r\n// import Card2 from \"../../assets/img/card2.png\";\r\nimport LeftIcon from \"../../assets/img/lefticon.png\";\r\nimport RightIcon from \"../../assets/img/righticon.png\";\r\nimport axios from \"axios\";\r\nimport \"./home.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n// import { Data } from \"../../components/accordian/AccordianData\";\r\nimport {\r\n  loadWeb3,\r\n  connectWallet,\r\n  // putTokenOnSale,\r\n  getTokenIds,\r\n  getSaleItems,\r\n} from \"../../core/web3\";\r\nimport { BASEURL } from \"../../utils/Utils\";\r\nimport Loader from \"../../components/loader/Loader\";\r\nimport Accordian from \"../../components/accordian/Accordian\";\r\n\r\nconst Home = ({ setShowModal }) => {\r\n  const [sidebar, setSidebar] = useState(false);\r\n  const openSidebar = (e) => {\r\n    console.log(\"sidebar\");\r\n    e.preventDefault();\r\n    setSidebar((prev) => !prev);\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [typeArray] = useState([\"common\", \"rare\", \"epic\", \"legendary\"]);\r\n\r\n  const [traitsArray] = useState([\"tank\", \"marksman\", \"assassin\"]);\r\n\r\n  const loadNfts = async (e) => {\r\n    console.log(selectedProperties);\r\n\r\n    setIsLoading(true);\r\n\r\n    axios\r\n      .post(BASEURL + \"/nft/all/\", {\r\n        min,\r\n        max,\r\n        page,\r\n        size,\r\n        minlevel,\r\n        currency,\r\n        properties: selectedProperties,\r\n        maxlevel,\r\n        type: selectedType,\r\n        traits:\r\n          selectedTraits && selectedTraits.length > 0 ? selectedTraits : null,\r\n      })\r\n      .then((response) => {\r\n        setTotalRecords(response.data.data[1].totalRecords);\r\n        setNftsArray(response.data.data[0]);\r\n\r\n        setIsLoading(false);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  const buyNft = async (e, nftId) => {\r\n    e.stopPropagation();\r\n    axios\r\n      .put(`${BASEURL}/nft/${nftId}`, {\r\n        walletAddress,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((e) => console.log(e));\r\n  };\r\n\r\n  // const [sampleNFTTokenID, setSampleNFTTokenID] = useState(null);\r\n  const [setTokenIds] = useState([1, 2, 3, 5]);\r\n  const [saleItems, setSaleItems] = useState([]);\r\n  const [nftsArray, setNftsArray] = useState(null);\r\n  const [page, setPage] = useState(1);\r\n  const [size, setSize] = useState(6);\r\n  const [totalRecords, setTotalRecords] = useState(null);\r\n  //   filters\r\n  const [min, setMin] = useState(null);\r\n  const [minlevel, setMinlevel] = useState(0);\r\n  const [maxlevel, setMaxlevel] = useState(100);\r\n  // const [traits, setTraits] = useState(null);\r\n  const [selectedType, setSelectedType] = useState(null);\r\n  const [selectedTraits, setSelectedTraits] = useState([]);\r\n  const [max, setMax] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [currency, setCurrency] = useState(null);\r\n  const [walletAddress, setWalletAddress] = useState(\"xyz\");\r\n  const [properties, setProperties] = useState(null);\r\n  const [selectedProperties, setSelectedProperties] = useState([]);\r\n  const [singleSelectedProperty, setSingleSelectedProperty] = useState(null);\r\n\r\n  useEffect(() => {\r\n    console.log(singleSelectedProperty);\r\n    if (\r\n      singleSelectedProperty &&\r\n      singleSelectedProperty.values &&\r\n      singleSelectedProperty.type\r\n    ) {\r\n      var index = selectedProperties.findIndex(\r\n        (x) => x.type === singleSelectedProperty.type\r\n      );\r\n      if (index !== -1) {\r\n        setSelectedProperties((prev) =>\r\n          Object.values({\r\n            ...prev,\r\n            [index]: {\r\n              ...prev[index],\r\n              values: [...singleSelectedProperty.values],\r\n            },\r\n          })\r\n        );\r\n      } else {\r\n        setSelectedProperties((prev) => [...prev, singleSelectedProperty]);\r\n      }\r\n      console.log(selectedProperties);\r\n    }\r\n  }, [singleSelectedProperty]);\r\n\r\n  const updateTokenIds = async () => {\r\n    let res = await getTokenIds();\r\n    setTokenIds(res);\r\n    console.log(\"======= getTokenIds ========== \", res);\r\n\r\n    res = await getSaleItems(res);\r\n    setSaleItems(res);\r\n  };\r\n\r\n  const loadProperties = () => {\r\n    axios\r\n      .get(BASEURL + \"/property/all\")\r\n      .then((response) => {\r\n        console.log(response.data.data);\r\n        setProperties(response.data.data);\r\n      })\r\n      .catch((e) => console.log(e));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const initWeb3 = async () => {\r\n      await loadWeb3();\r\n      let res = await connectWallet();\r\n      setWalletAddress(res.address);\r\n    };\r\n    loadProperties();\r\n\r\n    initWeb3();\r\n\r\n    // updateTokenIds();\r\n  }, []);\r\n\r\n  const mintNFT = () => {\r\n    console.log(\"mint nft called\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadNfts();\r\n    // updateTokenIds();\r\n  }, [\r\n    min,\r\n    max,\r\n    page,\r\n    size,\r\n    minlevel,\r\n    selectedProperties,\r\n    currency,\r\n    selectedType,\r\n    maxlevel,\r\n    selectedTraits,\r\n    selectedProperties,\r\n  ]);\r\n\r\n  const clearAll = (e) => {\r\n    e.preventDefault();\r\n    setSelectedTraits([]);\r\n    setSelectedType(null);\r\n    setMinlevel(0);\r\n    setMax(null);\r\n    setMin(null);\r\n    setCurrency(null);\r\n    setMaxlevel(100);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header setShowModal={setShowModal} />\r\n      <section className=\"root\">\r\n        <div className=\"fitermob\">\r\n          <a href=\"/\" className=\"filter-btn\" onClick={openSidebar}>\r\n            Filter\r\n          </a>\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className={sidebar ? \"sidebar sidebar-active\" : \"sidebar\"}>\r\n            <div className=\"filter\">\r\n              <h4>FILTERS</h4>\r\n              <a href=\"/\" onClick={clearAll}>\r\n                CLEAR ALL\r\n              </a>\r\n            </div>\r\n            {/* <div className=\"hero\">\r\n              <h4>GHOSPHERS</h4>\r\n              <p>No Ghosper selected</p>\r\n              <a onClick={loadNfts}>Choose Ghospers</a>\r\n            </div> */}\r\n            <div className=\"hero\">\r\n              <h4>GHOSPHERS</h4>\r\n              <div className=\"checkbox\">\r\n                {typeArray.map((t) => {\r\n                  return (\r\n                    <label key={t} className=\"checkbox-wrap\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={selectedType === t}\r\n                        onChange={() => {\r\n                          if (selectedType === t) {\r\n                            setSelectedType(null);\r\n                          } else setSelectedType(t);\r\n                        }}\r\n                      />\r\n                      <span className=\"checkmark\"></span>\r\n                      {t}\r\n                    </label>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n            <div className=\"hero\">\r\n              <h4>PRICE</h4>\r\n              <div className=\"price\">\r\n                <div className=\"price-inpt\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Min\"\r\n                    onChange={(e) => setMin(e.target.value)}\r\n                  />\r\n                </div>\r\n                <span></span>\r\n                <div className=\"price-inpt\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Max\"\r\n                    onChange={(e) => setMax(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"hero\">\r\n              <h4>Currency</h4>\r\n              <div className=\"levels\">\r\n                <select\r\n                  onChange={(e) => setCurrency(e.target.value)}\r\n                  value={currency}\r\n                >\r\n                  <option selected value=\"ghsp\">\r\n                    GHSP\r\n                  </option>\r\n                  <option value=\"bnb\">BNB</option>\r\n                  <option value=\"busd\">BUSD</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"hero\">\r\n              <h4>LEVEL</h4>\r\n              <div className=\"levels\">\r\n                <MultiRangeInput\r\n                  min={0}\r\n                  max={100}\r\n                  onChange={({ min, max }) => {\r\n                    setMinlevel(min);\r\n                    setMaxlevel(max);\r\n                    console.log(`min = ${min}, max = ${max}`);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"hero\">\r\n              <h4>TRAITS</h4>\r\n              <div className=\"checkbox\">\r\n                {traitsArray &&\r\n                  traitsArray.map((trait, index) => {\r\n                    return (\r\n                      <label className=\"checkbox-wrap\" key={index}>\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={\r\n                            selectedTraits && selectedTraits.includes(trait)\r\n                          }\r\n                          onChange={() => {\r\n                            if (\r\n                              selectedTraits &&\r\n                              selectedTraits.includes(trait)\r\n                            ) {\r\n                              var remaningTraits =\r\n                                selectedTraits &&\r\n                                selectedTraits.filter((t) => t !== trait);\r\n                              setSelectedTraits(remaningTraits);\r\n                            } else {\r\n                              setSelectedTraits((prev) => [...prev, trait]);\r\n                            }\r\n                          }}\r\n                        />\r\n                        <span className=\"checkmark\"></span>\r\n                        {trait}\r\n                      </label>\r\n                    );\r\n                  })}\r\n              </div>\r\n            </div>\r\n            {properties &&\r\n              properties.map((data) => {\r\n                return (\r\n                  <div className=\"hero\">\r\n                    <Accordian\r\n                      setSingleSelectedProperty={setSingleSelectedProperty}\r\n                      title={data.type}\r\n                      content={data.values}\r\n                    />\r\n                  </div>\r\n                );\r\n              })}\r\n\r\n            {/* <div className=\"hero skin\">\r\n\t\t\t\t\t\t\t<h4>SKINS</h4>\r\n\t\t\t\t\t\t\t<p>No skin selected</p>\r\n\t\t\t\t\t\t\t<a href=\"/\">Choose Skin</a>\r\n\t\t\t\t\t\t</div> */}\r\n          </div>\r\n          <div style={{ marginLeft: \"60px\", width: \"100%\" }}>\r\n            <div style={{ display: \"flex\", marginBottom: \"20px\" }}>\r\n              <div className=\"nav-btn\">\r\n                <a href=\"/mint\">Mint</a>\r\n              </div>\r\n            </div>\r\n            <div className=\"nft-collections\">\r\n              {isLoading ? (\r\n                <Loader />\r\n              ) : (\r\n                <>\r\n                  {nftsArray && nftsArray.length > 0 ? (\r\n                    nftsArray.map((elem, i) => {\r\n                      return (\r\n                        <div\r\n                          className=\"card\"\r\n                          key={i}\r\n                          onClick={() => {\r\n                            navigate(\r\n                              `/trending/${elem._id}/tokenid/${elem.tokenId}`\r\n                            );\r\n                          }}\r\n                        >\r\n                          <div className=\"card-img\">\r\n                            <img\r\n                              src={`${BASEURL}/uploads/${elem.imageUrl}`}\r\n                              alt=\"Card1\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"card-title\">\r\n                            <h4>\r\n                              {elem.title}{\" \"}\r\n                              {saleItems[i] && saleItems[i].onSale == true\r\n                                ? \"OnSale\"\r\n                                : \"\"}\r\n                            </h4>\r\n                            {/* <span>{elem.description}</span> */}\r\n                            <button\r\n                              className=\"custom-btn\"\r\n                              onClick={(e) =>\r\n                                // navigate(\r\n                                //   `/trending/${elem._id}/tokenid/${elem.tokenId}`\r\n                                // )\r\n                                {\r\n                                  buyNft(e, elem._id);\r\n                                }\r\n                              }\r\n                            >\r\n                              BUY\r\n                            </button>\r\n                          </div>\r\n                          <div className=\"card-price\">\r\n                            {/* <div>\r\n                          <span>gTHC</span>\r\n                          <p>21/219</p>\r\n                        </div> */}\r\n                            <div>\r\n                              <span>Price</span>\r\n                              <p>900 {elem.currency?.toUpperCase()}</p>\r\n                              <small>${elem.price} USD</small>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })\r\n                  ) : (\r\n                    <div\r\n                      style={{\r\n                        width: \"100%\",\r\n                        marginTop: \"20px\",\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                    >\r\n                      <h2>No Data Found!</h2>\r\n                    </div>\r\n                  )}\r\n\r\n                  {nftsArray && nftsArray.length > 0 && !isLoading && (\r\n                    <div className=\"pagination-wrap\">\r\n                      <div className=\"pagination\">\r\n                        <div\r\n                          className=\"icon\"\r\n                          onClick={() => {\r\n                            if (page != 1) {\r\n                              setPage(page - 1);\r\n                            }\r\n                          }}\r\n                        >\r\n                          <a>\r\n                            <img src={LeftIcon} alt=\"\" />\r\n                          </a>\r\n                        </div>\r\n                        <div className=\"number\">\r\n                          <span>\r\n                            {page * size > totalRecords\r\n                              ? totalRecords\r\n                              : size * page}\r\n                          </span>\r\n                          of {totalRecords && totalRecords}\r\n                        </div>\r\n                        <div\r\n                          className=\"icon\"\r\n                          onClick={() => {\r\n                            if (page * size < totalRecords) {\r\n                              console.log(\"inside\");\r\n                              setPage(page + 1);\r\n                            }\r\n                          }}\r\n                        >\r\n                          <a>\r\n                            <img src={RightIcon} alt=\"\" />\r\n                          </a>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\profile\\Profile.js",["225","226","227","228","229","230","231","232","233","234","235","236","237"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport MultiRangeInput from \"../../components/MultiRangeInput\";\r\nimport { BASEURL } from \"../../utils/Utils\";\r\nimport LeftIcon from \"../../assets/img/lefticon.png\";\r\nimport RightIcon from \"../../assets/img/righticon.png\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./profile.css\";\r\nimport ProfileImg from \"../../assets/img/card1.png\";\r\nimport UpdateModal from \"./updateModal/UpdateModal\";\r\nimport Loader from \"../../components/loader/Loader\";\r\nfunction Profile() {\r\n  const navigate = useNavigate();\r\n\r\n  const [typeArray, setTypeArray] = useState([\r\n    \"common\",\r\n    \"rare\",\r\n    \"epic\",\r\n    \"legendary\",\r\n  ]);\r\n\r\n  const [traitsArray, setTraitsArray] = useState([\r\n    \"tank\",\r\n    \"marksman\",\r\n    \"assassin\",\r\n  ]);\r\n\r\n  const loadNfts = async (e) => {\r\n    setIsLoading(true);\r\n\r\n    axios\r\n      .post(BASEURL + \"/nft/all/\", {\r\n        min,\r\n        max,\r\n        walletAddress,\r\n        currency,\r\n        minlevel,\r\n        maxlevel,\r\n        type: selectedType,\r\n        traits:\r\n          selectedTraits && selectedTraits.length > 0 ? selectedTraits : null,\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setTotalRecords(response.data.data[1].totalRecords);\r\n        setNftsArray(response.data.data[0]);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  const [sidebar, setSidebar] = useState(false);\r\n  const openSidebar = (e) => {\r\n    console.log(\"sidebar\");\r\n    e.preventDefault();\r\n    setSidebar((prev) => !prev);\r\n  };\r\n  const onClickItem = async (tokenID) => {\r\n    setSampleNFTTokenID(tokenID);\r\n  };\r\n\r\n  const clearAll = (e) => {\r\n    e.preventDefault();\r\n    setSelectedTraits([]);\r\n    setSelectedType(null);\r\n    setMinlevel(0);\r\n    setMax(null);\r\n    setMin(null);\r\n    setMaxlevel(100);\r\n  };\r\n\r\n  const [sampleNFTTokenID, setSampleNFTTokenID] = useState(null);\r\n  const [tokenIds, setTokenIds] = useState([1, 2, 3, 5]);\r\n  const [saleItems, setSaleItems] = useState([]);\r\n  const [nftsArray, setNftsArray] = useState(null);\r\n  const [page, setPage] = useState(1);\r\n  const [size, setSize] = useState(6);\r\n  const [totalRecords, setTotalRecords] = useState(null);\r\n  //   filters\r\n  const [min, setMin] = useState(null);\r\n  const [minlevel, setMinlevel] = useState(0);\r\n  const [maxlevel, setMaxlevel] = useState(100);\r\n  const [traits, setTraits] = useState(null);\r\n  const [currency, setCurrency] = useState(null);\r\n\r\n  const [selectedType, setSelectedType] = useState(null);\r\n  const [selectedTraits, setSelectedTraits] = useState([]);\r\n  const [max, setMax] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [walletAddress, setWalletAddress] = useState(\"xyz\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  useEffect(() => {\r\n    loadNfts();\r\n    // updateTokenIds();\r\n  }, []);\r\n\r\n  const sellNft = async (e, nftId) => {\r\n    e.stopPropagation();\r\n    axios\r\n      .put(`${BASEURL}/nft/sell/${nftId}`, {\r\n        walletAddress,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((e) => console.log(e));\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile-content\">\r\n      <div className=\"profile-back-filter\">\r\n        <button\r\n          className=\"custom-btn back-btn\"\r\n          onClick={() => {\r\n            navigate(\"/\");\r\n          }}\r\n        >\r\n          Back to home\r\n        </button>\r\n        <div className=\"fitermob profile-filters\">\r\n          <a href=\"/\" className=\"filter-btn\" onClick={openSidebar}>\r\n            Filters\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div className=\"profile-flex\">\r\n        <div className=\"profile-div\">\r\n          <div className=\"red-div\">\r\n            <img src={ProfileImg} alt=\"\" />\r\n          </div>\r\n          <button className=\"custom-btn\" onClick={() => setShowModal(true)}>\r\n            Edit Profile\r\n          </button>\r\n          <h2>Johny</h2>\r\n          <p>Loremipsumdolor</p>{\" \"}\r\n          <div className=\"profile-about\">\r\n            <p>About me</p>\r\n            <p>\r\n              Lorem ipsum dolor, sit amet consectetur adipisicing elit. Vero\r\n              quaerat id eos doloribus incidunt nemo similique, obcaecati\r\n              repellat nisi rerum maiores culpa quasi. Explicabo, facilis.\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className=\"profile-nft-div\"\r\n          style={{ marginLeft: \"60px\", width: \"100%\" }}\r\n        >\r\n          <div className=\"nft-collections\">\r\n            {isLoading ? (\r\n              <Loader />\r\n            ) : (\r\n              nftsArray &&\r\n              nftsArray.map((elem, i) => {\r\n                return (\r\n                  <div\r\n                    className=\"card\"\r\n                    key={i}\r\n                    onClick={() => {\r\n                      onClickItem(i);\r\n                      navigate(`/trending/${elem._id}`);\r\n                    }}\r\n                  >\r\n                    <div className=\"card-img\">\r\n                      <img\r\n                        src={`${BASEURL}/uploads/${elem.imageUrl}`}\r\n                        alt=\"Card1\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"card-title\">\r\n                      <h4>\r\n                        {elem.title}\r\n                        {Number(sampleNFTTokenID)===Number(i) ? (\r\n                          <span>&#10003;</span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}{\" \"}\r\n                        {saleItems[i] && saleItems[i].onSale===true\r\n                          ? \"OnSale\"\r\n                          : \"\"}\r\n                      </h4>\r\n                      {/* <span>{elem.description}</span> */}\r\n                      <button\r\n                        className=\"custom-btn\"\r\n                        onClick={(e) => sellNft(e, elem._id)}\r\n                      >\r\n                        SELL\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"card-price\">\r\n                      {/* <div>\r\n                          <span>gTHC</span>\r\n                          <p>21/219</p>\r\n                        </div> */}\r\n                      <div>\r\n                        <span>Price</span>\r\n                        <p>900 {elem.currency?.toUpperCase()}</p>\r\n                        <small>${elem.price} USD</small>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })\r\n            )}\r\n\r\n            {nftsArray && nftsArray.length > 0 && !isLoading ? (\r\n              <div className=\"pagination-wrap\">\r\n                <div className=\"pagination\">\r\n                  <div className=\"icon\">\r\n                    <a href=\"/\">\r\n                      <img src={LeftIcon} alt=\"\" />\r\n                    </a>\r\n                  </div>\r\n                  <div className=\"number\">\r\n                    <span>{size > totalRecords ? totalRecords : size}</span>\r\n                    of {totalRecords && totalRecords}\r\n                  </div>\r\n                  <div className=\"icon\">\r\n                    <a href=\"/\">\r\n                      <img src={RightIcon} alt=\"\" />\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div\r\n                style={{\r\n                  width: \"100%\",\r\n                  marginTop: \"20px\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <h2>No Data Found!</h2>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className={sidebar ? \"sidebar sidebar-active\" : \"sidebar\"}>\r\n          <div className=\"filter\">\r\n            <h4>FILTERS</h4>\r\n            <a href=\"/\" onClick={clearAll}>\r\n              CLEAR ALL\r\n            </a>\r\n          </div>\r\n          <div className=\"hero\">\r\n            <h4>GHOSPHERS</h4>\r\n            <p>No Ghosper selected</p>\r\n            <a onClick={loadNfts}>Choose Ghospers</a>\r\n          </div>\r\n          <div className=\"hero\">\r\n            <h4>GHOSPHERS</h4>\r\n            <div className=\"checkbox\">\r\n              {typeArray.map((t) => {\r\n                return (\r\n                  <label key={t} className=\"checkbox-wrap\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={selectedType===t}\r\n                      onChange={() => {\r\n                        if (selectedType===t) {\r\n                          setSelectedType(null);\r\n                        } else setSelectedType(t);\r\n                      }}\r\n                    />\r\n                    <span className=\"checkmark\"></span>\r\n                    {t}\r\n                  </label>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n          <div className=\"hero\">\r\n            <h4>PRICE</h4>\r\n            <div className=\"price\">\r\n              <div className=\"price-inpt\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Min\"\r\n                  onChange={(e) => setMin(e.target.value)}\r\n                />\r\n              </div>\r\n              <span></span>\r\n              <div className=\"price-inpt\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Max\"\r\n                  onChange={(e) => setMax(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"hero\">\r\n            <h4>Currency</h4>\r\n            <div className=\"levels\">\r\n              <select\r\n                onChange={(e) => setCurrency(e.target.value)}\r\n                value={currency}\r\n              >\r\n                <option selected value=\"ghsp\">\r\n                  GHSP\r\n                </option>\r\n                <option value=\"bnb\">BNB</option>\r\n                <option value=\"busd\">BUSD</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"hero\">\r\n            <h4>LEVEL</h4>\r\n            <div className=\"levels\">\r\n              <MultiRangeInput\r\n                min={0}\r\n                max={100}\r\n                onChange={({ min, max }) => {\r\n                  setMinlevel(min);\r\n                  setMaxlevel(max);\r\n                  console.log(`min = ${min}, max = ${max}`);\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"hero\">\r\n            <h4>TRAITS</h4>\r\n            <div className=\"checkbox\">\r\n              {traitsArray &&\r\n                traitsArray.map((trait, index) => {\r\n                  return (\r\n                    <label className=\"checkbox-wrap\" key={index}>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={\r\n                          selectedTraits && selectedTraits.includes(trait)\r\n                        }\r\n                        onChange={() => {\r\n                          if (\r\n                            selectedTraits &&\r\n                            selectedTraits.includes(trait)\r\n                          ) {\r\n                            var remaningTraits =\r\n                              selectedTraits &&\r\n                              selectedTraits.filter((t) => t !== trait);\r\n                            setSelectedTraits(remaningTraits);\r\n                          } else {\r\n                            setSelectedTraits((prev) => [...prev, trait]);\r\n                          }\r\n                        }}\r\n                      />\r\n                      <span className=\"checkmark\"></span>\r\n                      {trait}\r\n                    </label>\r\n                  );\r\n                })}\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"hero skin\">\r\n\t\t\t\t\t\t\t<h4>SKINS</h4>\r\n\t\t\t\t\t\t\t<p>No skin selected</p>\r\n\t\t\t\t\t\t\t<a href=\"/\">Choose Skin</a>\r\n\t\t\t\t\t\t</div> */}\r\n        </div>\r\n      </div>\r\n      <UpdateModal showModal={showModal} setShowModal={setShowModal} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\Contact\\Contact.js",[],"D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\ConnectWallet\\ConnectWallet.js",[],"D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\mint\\IPFSUtils.js",["238"],"D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\utils\\Utils.js",[],"D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\components\\Header.js",[],"D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\mint\\addPropertyModal.js\\AddPropertyModal.js",["239","240"],"import React, { Component, useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { BASEURL } from \"../../../utils/Utils\";\r\nimport \"./addPropertyModal.css\";\r\nModal.setAppElement(\"#root\");\r\n\r\nfunction AddPropertyModal({ setShowModal, showModal, setProperties }) {\r\n  console.log(showModal);\r\n  function closeModal() {\r\n    setShowModal(false);\r\n  }\r\n\r\n  const [rows, setRows] = useState([\r\n    {\r\n      type: \"\",\r\n      value: \"\",\r\n    },\r\n  ]);\r\n\r\n  const onChange = (e, index) => {\r\n    setRows((prev) =>\r\n      Object.values({\r\n        ...prev,\r\n        [index]: { ...prev[index], [e.target.name]: e.target.value },\r\n      })\r\n    );\r\n  };\r\n\r\n  const removeRow = (index) => {\r\n    if (rows.length !== 1) {\r\n      var rowsTemp = [...rows];\r\n      rowsTemp.splice(index, 1);\r\n      setRows(rowsTemp);\r\n    }\r\n  };\r\n\r\n  const AddRows = () => {\r\n    setProperties(rows);\r\n    setShowModal(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"scrollable-modal\">\r\n      <Modal\r\n        isOpen={showModal}\r\n        // onAfterOpen={afterOpenModal}\r\n        onRequestClose={closeModal}\r\n        // style={customStyles}\r\n        // className=\"scrollable-modal\"\r\n        contentLabel=\"Example Modal\"\r\n      >\r\n        <div className=\"properties-modal-content\">\r\n          <h2>Add Properties </h2>\r\n          <div className=\"property-rows\">\r\n            {rows &&\r\n              rows.map((row, index) => {\r\n                return (\r\n                  <div key={index} className=\"inputs-div\">\r\n                    <div>\r\n                      <label htmlFor=\"\">Type</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"type\"\r\n                        onChange={(e) => onChange(e, index)}\r\n                        className=\"mint-input\"\r\n                        placeholder=\"Hair\"\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <label htmlFor=\"\">Value</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"value\"\r\n                        onChange={(e) => onChange(e, index)}\r\n                        className=\"mint-input\"\r\n                        placeholder=\"Blonde\"\r\n                      />\r\n                    </div>\r\n                    <button\r\n                      onClick={() => removeRow(index)}\r\n                      className=\"remove-btn\"\r\n                    >\r\n                      Remove\r\n                    </button>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n          <button\r\n            className=\"add-btn\"\r\n            onClick={() => {\r\n              setRows((prev) => [\r\n                ...prev,\r\n                {\r\n                  type: \"\",\r\n                  value: \"\",\r\n                },\r\n              ]);\r\n            }}\r\n          >\r\n            Add\r\n          </button>\r\n\r\n          <button onClick={AddRows}>Save</button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddPropertyModal;\r\n","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\components\\MultiRangeInput.js",[],"D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\components\\loader\\Loader.js",[],"D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\components\\accordian\\Accordian.js",["241"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./accordian.css\";\r\nfunction Accordian({ title, content, setSingleSelectedProperty }) {\r\n  const [contentArray] = useState(content);\r\n  const [searchInput, setsearchInput] = useState(\"\");\r\n  const [resultsArray, setResultsArray] = useState(contentArray);\r\n  const [showContent, setShowContent] = useState(false);\r\n  const [selectedProperties, setSelectedProperties] = useState({\r\n    type: \"\",\r\n    values: [],\r\n  });\r\n\r\n  const onChange = (e) => {\r\n    setsearchInput(e.target.value);\r\n    if (e.target.value===\"\") {\r\n      setResultsArray(contentArray);\r\n    } else {\r\n      var resultArray = contentArray.filter((text) =>\r\n        text.includes(searchInput.toLowerCase())\r\n      );\r\n      setResultsArray(resultArray);\r\n    }\r\n  };\r\n\r\n  const alreadyPresent = (data) => {\r\n    return selectedProperties && selectedProperties.values.includes(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(selectedProperties);\r\n    setSingleSelectedProperty(selectedProperties);\r\n  }, [selectedProperties]);\r\n\r\n  return (\r\n    <div className=\"accordian-div\">\r\n      <div className=\"accordian-header\">\r\n        <h4>{title}</h4>\r\n        {showContent ? (\r\n          <i\r\n            class=\"fa-solid fa-caret-up\"\r\n            onClick={() => setShowContent(false)}\r\n          ></i>\r\n        ) : (\r\n          <i\r\n            class=\"fa-solid fa-caret-down\"\r\n            onClick={() => setShowContent(true)}\r\n          ></i>\r\n        )}\r\n      </div>\r\n      <div className=\"accordian-content\">\r\n        {showContent && (\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"select-search-input\"\r\n              placeholder=\"Search\"\r\n              value={searchInput}\r\n              onChange={onChange}\r\n            />\r\n            <ul>\r\n              <div className=\"checkbox\">\r\n                {resultsArray &&\r\n                  resultsArray.map((data, index) => {\r\n                    return (\r\n                      <label className=\"checkbox-wrap\" key={index}>\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={\r\n                            selectedProperties &&\r\n                            selectedProperties.values.includes(data)\r\n                          }\r\n                          onChange={() => {\r\n                            if (alreadyPresent(data)) {\r\n                              var remainingValues =\r\n                                selectedProperties.values.filter(\r\n                                  (x) => x !== data\r\n                                );\r\n                              setSelectedProperties({\r\n                                type: title,\r\n                                values: remainingValues,\r\n                              });\r\n                            } else {\r\n                              setSelectedProperties((prev) => ({\r\n                                type: title,\r\n                                values: [...prev.values, data],\r\n                              }));\r\n                            }\r\n                          }}\r\n                        />\r\n                        <span className=\"checkmark\"></span>\r\n                        {data}\r\n                      </label>\r\n                    );\r\n                  })}\r\n              </div>\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Accordian;\r\n","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\profile\\updateModal\\UpdateModal.js",[],"D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\core\\web3.js",["242","243"],{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","severity":1,"message":"249","line":12,"column":3,"nodeType":"250","messageId":"251","endLine":12,"endColumn":19},{"ruleId":"248","severity":1,"message":"252","line":26,"column":10,"nodeType":"250","messageId":"251","endLine":26,"endColumn":17},{"ruleId":"248","severity":1,"message":"253","line":26,"column":19,"nodeType":"250","messageId":"251","endLine":26,"endColumn":29},{"ruleId":"248","severity":1,"message":"254","line":29,"column":16,"nodeType":"250","messageId":"251","endLine":29,"endColumn":23},{"ruleId":"248","severity":1,"message":"255","line":37,"column":23,"nodeType":"250","messageId":"251","endLine":37,"endColumn":37},{"ruleId":"248","severity":1,"message":"256","line":43,"column":21,"nodeType":"250","messageId":"251","endLine":43,"endColumn":33},{"ruleId":"248","severity":1,"message":"257","line":166,"column":9,"nodeType":"250","messageId":"251","endLine":166,"endColumn":16},{"ruleId":"248","severity":1,"message":"258","line":85,"column":16,"nodeType":"250","messageId":"251","endLine":85,"endColumn":23},{"ruleId":"259","severity":1,"message":"260","line":127,"column":6,"nodeType":"261","endLine":127,"endColumn":30,"suggestions":"262"},{"ruleId":"248","severity":1,"message":"263","line":129,"column":9,"nodeType":"250","messageId":"251","endLine":129,"endColumn":23},{"ruleId":"248","severity":1,"message":"257","line":161,"column":9,"nodeType":"250","messageId":"251","endLine":161,"endColumn":16},{"ruleId":"259","severity":1,"message":"264","line":168,"column":6,"nodeType":"261","endLine":180,"endColumn":4,"suggestions":"265"},{"ruleId":"266","severity":1,"message":"267","line":213,"column":15,"nodeType":"268","endLine":213,"endColumn":37},{"ruleId":"269","severity":1,"message":"270","line":370,"column":68,"nodeType":"271","messageId":"272","endLine":370,"endColumn":70},{"ruleId":"269","severity":1,"message":"273","line":423,"column":38,"nodeType":"271","messageId":"272","endLine":423,"endColumn":40},{"ruleId":"266","severity":1,"message":"267","line":428,"column":27,"nodeType":"268","endLine":428,"endColumn":30},{"ruleId":"266","severity":1,"message":"267","line":449,"column":27,"nodeType":"268","endLine":449,"endColumn":30},{"ruleId":"248","severity":1,"message":"274","line":4,"column":8,"nodeType":"250","messageId":"251","endLine":4,"endColumn":14},{"ruleId":"248","severity":1,"message":"275","line":5,"column":8,"nodeType":"250","messageId":"251","endLine":5,"endColumn":16},{"ruleId":"248","severity":1,"message":"276","line":6,"column":8,"nodeType":"250","messageId":"251","endLine":6,"endColumn":12},{"ruleId":"248","severity":1,"message":"277","line":7,"column":8,"nodeType":"250","messageId":"251","endLine":7,"endColumn":17},{"ruleId":"248","severity":1,"message":"256","line":15,"column":21,"nodeType":"250","messageId":"251","endLine":15,"endColumn":33},{"ruleId":"248","severity":1,"message":"255","line":22,"column":23,"nodeType":"250","messageId":"251","endLine":22,"endColumn":37},{"ruleId":"248","severity":1,"message":"278","line":76,"column":10,"nodeType":"250","messageId":"251","endLine":76,"endColumn":18},{"ruleId":"248","severity":1,"message":"279","line":76,"column":20,"nodeType":"250","messageId":"251","endLine":76,"endColumn":31},{"ruleId":"248","severity":1,"message":"280","line":77,"column":21,"nodeType":"250","messageId":"251","endLine":77,"endColumn":33},{"ruleId":"248","severity":1,"message":"281","line":79,"column":10,"nodeType":"250","messageId":"251","endLine":79,"endColumn":14},{"ruleId":"248","severity":1,"message":"282","line":79,"column":16,"nodeType":"250","messageId":"251","endLine":79,"endColumn":23},{"ruleId":"248","severity":1,"message":"258","line":80,"column":16,"nodeType":"250","messageId":"251","endLine":80,"endColumn":23},{"ruleId":"248","severity":1,"message":"283","line":86,"column":10,"nodeType":"250","messageId":"251","endLine":86,"endColumn":16},{"ruleId":"248","severity":1,"message":"284","line":86,"column":18,"nodeType":"250","messageId":"251","endLine":86,"endColumn":27},{"ruleId":"248","severity":1,"message":"285","line":93,"column":25,"nodeType":"250","messageId":"251","endLine":93,"endColumn":41},{"ruleId":"259","severity":1,"message":"264","line":98,"column":6,"nodeType":"261","endLine":98,"endColumn":8,"suggestions":"286"},{"ruleId":"266","severity":1,"message":"267","line":254,"column":13,"nodeType":"268","endLine":254,"endColumn":35},{"ruleId":"248","severity":1,"message":"287","line":1,"column":18,"nodeType":"250","messageId":"251","endLine":1,"endColumn":27},{"ruleId":"248","severity":1,"message":"288","line":4,"column":24,"nodeType":"250","messageId":"251","endLine":4,"endColumn":39},{"ruleId":"269","severity":1,"message":"270","line":15,"column":24,"nodeType":"271","messageId":"272","endLine":15,"endColumn":26},{"ruleId":"259","severity":1,"message":"289","line":32,"column":6,"nodeType":"261","endLine":32,"endColumn":26,"suggestions":"290"},{"ruleId":"269","severity":1,"message":"273","line":76,"column":44,"nodeType":"271","messageId":"272","endLine":76,"endColumn":46},{"ruleId":"248","severity":1,"message":"291","line":1,"column":17,"nodeType":"250","messageId":"251","endLine":1,"endColumn":26},{"ruleId":"248","severity":1,"message":"292","line":3,"column":10,"nodeType":"250","messageId":"251","endLine":3,"endColumn":17},{"ruleId":"244","replacedBy":"293"},{"ruleId":"246","replacedBy":"294"},{"ruleId":"248","severity":1,"message":"274","line":4,"column":8,"nodeType":"250","messageId":"251","endLine":4,"endColumn":14},{"ruleId":"248","severity":1,"message":"275","line":5,"column":8,"nodeType":"250","messageId":"251","endLine":5,"endColumn":16},{"ruleId":"248","severity":1,"message":"276","line":6,"column":8,"nodeType":"250","messageId":"251","endLine":6,"endColumn":12},{"ruleId":"248","severity":1,"message":"277","line":7,"column":8,"nodeType":"250","messageId":"251","endLine":7,"endColumn":17},{"ruleId":"248","severity":1,"message":"249","line":12,"column":3,"nodeType":"250","messageId":"251","endLine":12,"endColumn":19},{"ruleId":"248","severity":1,"message":"252","line":27,"column":10,"nodeType":"250","messageId":"251","endLine":27,"endColumn":17},{"ruleId":"248","severity":1,"message":"253","line":27,"column":19,"nodeType":"250","messageId":"251","endLine":27,"endColumn":29},{"ruleId":"248","severity":1,"message":"254","line":30,"column":16,"nodeType":"250","messageId":"251","endLine":30,"endColumn":23},{"ruleId":"248","severity":1,"message":"255","line":38,"column":23,"nodeType":"250","messageId":"251","endLine":38,"endColumn":37},{"ruleId":"248","severity":1,"message":"256","line":44,"column":21,"nodeType":"250","messageId":"251","endLine":44,"endColumn":33},{"ruleId":"248","severity":1,"message":"257","line":174,"column":9,"nodeType":"250","messageId":"251","endLine":174,"endColumn":16},{"ruleId":"248","severity":1,"message":"258","line":85,"column":16,"nodeType":"250","messageId":"251","endLine":85,"endColumn":23},{"ruleId":"259","severity":1,"message":"260","line":127,"column":6,"nodeType":"261","endLine":127,"endColumn":30,"suggestions":"295"},{"ruleId":"248","severity":1,"message":"263","line":129,"column":9,"nodeType":"250","messageId":"251","endLine":129,"endColumn":23},{"ruleId":"248","severity":1,"message":"257","line":161,"column":9,"nodeType":"250","messageId":"251","endLine":161,"endColumn":16},{"ruleId":"259","severity":1,"message":"264","line":168,"column":6,"nodeType":"261","endLine":180,"endColumn":4,"suggestions":"296"},{"ruleId":"269","severity":1,"message":"270","line":370,"column":68,"nodeType":"271","messageId":"272","endLine":370,"endColumn":70},{"ruleId":"269","severity":1,"message":"273","line":423,"column":38,"nodeType":"271","messageId":"272","endLine":423,"endColumn":40},{"ruleId":"266","severity":1,"message":"267","line":428,"column":27,"nodeType":"268","endLine":428,"endColumn":30},{"ruleId":"266","severity":1,"message":"267","line":449,"column":27,"nodeType":"268","endLine":449,"endColumn":30},{"ruleId":"248","severity":1,"message":"256","line":15,"column":21,"nodeType":"250","messageId":"251","endLine":15,"endColumn":33},{"ruleId":"248","severity":1,"message":"255","line":22,"column":23,"nodeType":"250","messageId":"251","endLine":22,"endColumn":37},{"ruleId":"248","severity":1,"message":"278","line":76,"column":10,"nodeType":"250","messageId":"251","endLine":76,"endColumn":18},{"ruleId":"248","severity":1,"message":"279","line":76,"column":20,"nodeType":"250","messageId":"251","endLine":76,"endColumn":31},{"ruleId":"248","severity":1,"message":"280","line":77,"column":21,"nodeType":"250","messageId":"251","endLine":77,"endColumn":33},{"ruleId":"248","severity":1,"message":"281","line":79,"column":10,"nodeType":"250","messageId":"251","endLine":79,"endColumn":14},{"ruleId":"248","severity":1,"message":"282","line":79,"column":16,"nodeType":"250","messageId":"251","endLine":79,"endColumn":23},{"ruleId":"248","severity":1,"message":"258","line":80,"column":16,"nodeType":"250","messageId":"251","endLine":80,"endColumn":23},{"ruleId":"248","severity":1,"message":"283","line":86,"column":10,"nodeType":"250","messageId":"251","endLine":86,"endColumn":16},{"ruleId":"248","severity":1,"message":"284","line":86,"column":18,"nodeType":"250","messageId":"251","endLine":86,"endColumn":27},{"ruleId":"248","severity":1,"message":"285","line":93,"column":25,"nodeType":"250","messageId":"251","endLine":93,"endColumn":41},{"ruleId":"259","severity":1,"message":"264","line":98,"column":6,"nodeType":"261","endLine":98,"endColumn":8,"suggestions":"297"},{"ruleId":"266","severity":1,"message":"267","line":254,"column":13,"nodeType":"268","endLine":254,"endColumn":35},{"ruleId":"248","severity":1,"message":"287","line":1,"column":18,"nodeType":"250","messageId":"251","endLine":1,"endColumn":27},{"ruleId":"248","severity":1,"message":"291","line":1,"column":17,"nodeType":"250","messageId":"251","endLine":1,"endColumn":26},{"ruleId":"248","severity":1,"message":"292","line":3,"column":10,"nodeType":"250","messageId":"251","endLine":3,"endColumn":17},{"ruleId":"259","severity":1,"message":"289","line":32,"column":6,"nodeType":"261","endLine":32,"endColumn":26,"suggestions":"298"},{"ruleId":"269","severity":1,"message":"273","line":23,"column":17,"nodeType":"271","messageId":"272","endLine":23,"endColumn":19},{"ruleId":"269","severity":1,"message":"270","line":58,"column":40,"nodeType":"271","messageId":"272","endLine":58,"endColumn":42},"no-native-reassign",["299"],"no-negated-in-lhs",["300"],"no-unused-vars","'getCurrentWallet' is defined but never used.","Identifier","unusedVar","'tokenId' is assigned a value but never used.","'setTokenId' is assigned a value but never used.","'setIpfs' is assigned a value but never used.","'setTraitsArray' is assigned a value but never used.","'setTypeArray' is assigned a value but never used.","'mintNFT' is assigned a value but never used.","'setSize' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectedProperties'. Either include it or remove the dependency array.","ArrayExpression",["301"],"'updateTokenIds' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadNfts'. Either include it or remove the dependency array.",["302"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'NFTimg' is defined but never used.","'coinIcon' is defined but never used.","'Icon' is defined but never used.","'SwordIcon' is defined but never used.","'tokenIds' is assigned a value but never used.","'setTokenIds' is assigned a value but never used.","'setSaleItems' is assigned a value but never used.","'page' is assigned a value but never used.","'setPage' is assigned a value but never used.","'traits' is assigned a value but never used.","'setTraits' is assigned a value but never used.","'setWalletAddress' is assigned a value but never used.",["303"],"'urlSource' is defined but never used.","'setContentArray' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setSingleSelectedProperty'. Either include it or remove the dependency array. If 'setSingleSelectedProperty' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["304"],"'Component' is defined but never used.","'BASEURL' is defined but never used.",["299"],["300"],["305"],["306"],["307"],["308"],"no-global-assign","no-unsafe-negation",{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},{"desc":"309","fix":"317"},{"desc":"311","fix":"318"},{"desc":"313","fix":"319"},{"desc":"315","fix":"320"},"Update the dependencies array to be: [selectedProperties, singleSelectedProperty]",{"range":"321","text":"322"},"Update the dependencies array to be: [min, max, page, size, minlevel, selectedProperties, currency, selectedType, maxlevel, selectedTraits, loadNfts]",{"range":"323","text":"324"},"Update the dependencies array to be: [loadNfts]",{"range":"325","text":"326"},"Update the dependencies array to be: [selectedProperties, setSingleSelectedProperty]",{"range":"327","text":"328"},{"range":"329","text":"322"},{"range":"330","text":"324"},{"range":"331","text":"326"},{"range":"332","text":"328"},[4056,4080],"[selectedProperties, singleSelectedProperty]",[4960,5143],"[min, max, page, size, minlevel, selectedProperties, currency, selectedType, maxlevel, selectedTraits, loadNfts]",[2977,2979],"[loadNfts]",[1054,1074],"[selectedProperties, setSingleSelectedProperty]",[4056,4080],[4960,5143],[2977,2979],[1036,1056]]
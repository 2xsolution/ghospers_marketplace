[{"D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\index.js":"1","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\App.js":"2","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\reportWebVitals.js":"3","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\ConnectWallet\\ConnectWallet.js":"4","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\Contact\\Contact.js":"5","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\mint\\Mint.js":"6","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\NFTDetail\\NFTdetail.js":"7","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\Home\\Home.js":"8","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\components\\Header.js":"9","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\components\\MultiRangeInput.js":"10","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\core\\web3.js":"11","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\mint\\IPFSUtils.js":"12","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\profile\\Profile.js":"13","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\utils\\Utils.js":"14","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\components\\loader\\Loader.js":"15"},{"size":603,"mtime":1647857396226,"results":"16","hashOfConfig":"17"},{"size":1266,"mtime":1648149926007,"results":"18","hashOfConfig":"17"},{"size":375,"mtime":1647857396230,"results":"19","hashOfConfig":"17"},{"size":2200,"mtime":1647857396227,"results":"20","hashOfConfig":"17"},{"size":1378,"mtime":1647857396228,"results":"21","hashOfConfig":"17"},{"size":3204,"mtime":1648185179094,"results":"22","hashOfConfig":"17"},{"size":5646,"mtime":1648182370876,"results":"23","hashOfConfig":"17"},{"size":16281,"mtime":1648182095646,"results":"24","hashOfConfig":"17"},{"size":2176,"mtime":1648183447060,"results":"25","hashOfConfig":"17"},{"size":2694,"mtime":1647857396225,"results":"26","hashOfConfig":"17"},{"size":7295,"mtime":1648183578948,"results":"27","hashOfConfig":"17"},{"size":2034,"mtime":1647894973122,"results":"28","hashOfConfig":"17"},{"size":9240,"mtime":1648149926011,"results":"29","hashOfConfig":"17"},{"size":64,"mtime":1648149926011,"results":"30","hashOfConfig":"17"},{"size":238,"mtime":1648149926008,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"10z5on5",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\index.js",[],["65","66"],"D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\App.js",[],"D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\reportWebVitals.js",[],"D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\ConnectWallet\\ConnectWallet.js",[],"D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\Contact\\Contact.js",[],"D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\mint\\Mint.js",["67","68","69"],"D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\NFTDetail\\NFTdetail.js",["70","71","72"],"D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\Home\\Home.js",["73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94"],"D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\components\\Header.js",["95","96"],"D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\components\\MultiRangeInput.js",[],"D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\core\\web3.js",["97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114"],"D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\mint\\IPFSUtils.js",["115"],"import { create, urlSource } from 'ipfs-http-client'\r\nimport axios from 'axios';\r\n//import IPFS from 'nano-ipfs-store'\r\nlet all = require('it-all')\r\n\r\nlet client = create('https://ipfs.infura.io:5001/api/v0');\r\n\r\nconst uploadFileToIPFS = async (files) => {\r\n    console.log(\"enter uploadFileToIPFS\", files);\r\n    let lists = [];\r\n    try {\r\n        for (let i = 0; i < files.length; i++) {\r\n            const added = await client.add(files[i])\r\n            const url = `https://ipfs.infura.io/ipfs/${added.path}`\r\n            console.log(\"[GD], FileName = \", files[i].name, \", Hash: \", added.path)\r\n            lists.push(url)\r\n        }\r\n        return lists\r\n    } catch (err) {\r\n        console.log(\"Error uploading file: \", err)\r\n        return []\r\n    }\r\n}\r\n\r\nconst uploadFolderToIPFS = async (files) => {\r\n    try {\r\n        /*let fileObjectsArray = Array.from(files).map((file) => {\r\n            return {\r\n                path: file.name,\r\n                content: file\r\n            }\r\n        })*/\r\n        const results = await all(\r\n            client.addAll(files, { wrapWithDirectory: true })\r\n        )\r\n        const length = results.length\r\n        const filesHash = results[length - 1].cid._baseCache.get('z')\r\n        const filesUrl = 'https://ipfs.infura.io/ipfs/' + filesHash\r\n        return filesUrl\r\n    } catch (err) {\r\n        console.log(\"[GD], Error uploading file: \", err)\r\n        return \"\"\r\n    }\r\n}\r\n\r\nconst uploadTextToIPFS = async (data) => {\r\n    try {\r\n        let doc = JSON.stringify(data)\r\n        const added = await client.add(doc)\r\n        const filesUrl = 'https://ipfs.infura.io/ipfs/' + added.path;\r\n        return filesUrl\r\n    } catch (err) {\r\n        //console.log(\"Error: \", err)\r\n        return null\r\n    }\r\n}\r\n\r\nconst loadFromIPFS = async (url) => {\r\n    let res = await axios.get(`https://ipfs.infura.io/ipfs/${url}`)\r\n    return res;\r\n}\r\n\r\n\r\nconst IPFSUtils = {\r\n    uploadFileToIPFS,\r\n    uploadFolderToIPFS,\r\n    uploadTextToIPFS,\r\n    loadFromIPFS\r\n}\r\n\r\n\r\nexport default IPFSUtils;","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\profile\\Profile.js",["116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport MultiRangeInput from \"../../components/MultiRangeInput\";\r\nimport { BASEURL } from \"../../utils/Utils\";\r\nimport LeftIcon from \"../../assets/img/lefticon.png\";\r\nimport RightIcon from \"../../assets/img/righticon.png\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./profile.css\";\r\nimport ProfileImg from \"../../assets/img/card1.png\";\r\nfunction Profile() {\r\n  const navigate = useNavigate();\r\n\r\n  const [typeArray, setTypeArray] = useState([\r\n    \"common\",\r\n    \"rare\",\r\n    \"epic\",\r\n    \"legendary\",\r\n  ]);\r\n\r\n  const [traitsArray, setTraitsArray] = useState([\r\n    \"tank\",\r\n    \"marksman\",\r\n    \"assassin\",\r\n  ]);\r\n\r\n  const loadNfts = async (e) => {\r\n    setIsLoading(true);\r\n\r\n    axios\r\n      .post(BASEURL + \"/nft/all/\", {\r\n        min,\r\n        max,\r\n        walletAddress,\r\n        minlevel,\r\n        maxlevel,\r\n        type: selectedType,\r\n        traits:\r\n          selectedTraits && selectedTraits.length > 0 ? selectedTraits : null,\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setTotalRecords(response.data.data[1].totalRecords);\r\n        setNftsArray(response.data.data[0]);\r\n      })\r\n      .catch((e) => console.log(e));\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const [sidebar, setSidebar] = useState(false);\r\n  const openSidebar = (e) => {\r\n    console.log(\"sidebar\");\r\n    e.preventDefault();\r\n    setSidebar((prev) => !prev);\r\n  };\r\n  const onClickItem = async (tokenID) => {\r\n    setSampleNFTTokenID(tokenID);\r\n  };\r\n\r\n  const clearAll = (e) => {\r\n    e.preventDefault();\r\n    setSelectedTraits([]);\r\n    setSelectedType(null);\r\n    setMinlevel(0);\r\n    setMax(null);\r\n    setMin(null);\r\n    setMaxlevel(100);\r\n  };\r\n\r\n  const [sampleNFTTokenID, setSampleNFTTokenID] = useState(null);\r\n  const [tokenIds, setTokenIds] = useState([1, 2, 3, 5]);\r\n  const [saleItems, setSaleItems] = useState([]);\r\n  const [nftsArray, setNftsArray] = useState(null);\r\n  const [page, setPage] = useState(1);\r\n  const [size, setSize] = useState(5);\r\n  const [totalRecords, setTotalRecords] = useState(null);\r\n  //   filters\r\n  const [min, setMin] = useState(null);\r\n  const [minlevel, setMinlevel] = useState(0);\r\n  const [maxlevel, setMaxlevel] = useState(100);\r\n  const [traits, setTraits] = useState(null);\r\n  const [selectedType, setSelectedType] = useState(null);\r\n  const [selectedTraits, setSelectedTraits] = useState([]);\r\n  const [max, setMax] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [walletAddress, setWalletAddress] = useState(\"abcd\");\r\n\r\n  useEffect(() => {\r\n    loadNfts();\r\n    // updateTokenIds();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"profile-flex\">\r\n      <div className=\"profile-div\">\r\n        <div className=\"red-div\">\r\n          <img src={ProfileImg} alt=\"\" />\r\n        </div>\r\n        <h2>Johny</h2>\r\n        <p>Loremipsumdolor</p>{\" \"}\r\n        <div className=\"profile-about\">\r\n          <p>About me</p>\r\n          <p>\r\n            Lorem ipsum dolor, sit amet consectetur adipisicing elit. Vero\r\n            quaerat id eos doloribus incidunt nemo similique, obcaecati repellat\r\n            nisi rerum maiores culpa quasi. Explicabo, facilis.\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"profile-nft-div\" style={{ marginLeft: \"60px\" }}>\r\n        <div className=\"nft-collections\">\r\n          {nftsArray &&\r\n            nftsArray.map((elem, i) => {\r\n              return (\r\n                <div\r\n                  className=\"card\"\r\n                  key={i}\r\n                  onClick={() => {\r\n                    onClickItem(i);\r\n                    navigate(`/trending/${elem._id}`);\r\n                  }}\r\n                >\r\n                  <div className=\"card-img\">\r\n                    <img\r\n                      src={`${BASEURL}/uploads/${elem.imageUrl}`}\r\n                      alt=\"Card1\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"card-title\">\r\n                    <h4>\r\n                      {elem.title}\r\n                      {Number(sampleNFTTokenID) == Number(i) ? (\r\n                        <span>&#10003;</span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}{\" \"}\r\n                      {saleItems[i] && saleItems[i].onSale == true\r\n                        ? \"OnSale\"\r\n                        : \"\"}\r\n                    </h4>\r\n                    {/* <span>{elem.description}</span> */}\r\n                    {/* <button className=\"custom-btn\">BUY</button> */}\r\n                  </div>\r\n                  <div className=\"card-price\">\r\n                    {/* <div>\r\n                          <span>gTHC</span>\r\n                          <p>21/219</p>\r\n                        </div> */}\r\n                    <div>\r\n                      <span>Price</span>\r\n                      <p>900 THC</p>\r\n                      <small>${elem.price} USD</small>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n\r\n          <div className=\"pagination-wrap\">\r\n            <div className=\"pagination\">\r\n              <div className=\"icon\">\r\n                <a href=\"/\">\r\n                  <img src={LeftIcon} alt=\"\" />\r\n                </a>\r\n              </div>\r\n              <div className=\"number\">\r\n                <span>{size > totalRecords ? totalRecords : size}</span>\r\n                of {totalRecords && totalRecords}\r\n              </div>\r\n              <div className=\"icon\">\r\n                <a href=\"/\">\r\n                  <img src={RightIcon} alt=\"\" />\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={sidebar ? \"sidebar sidebar-active\" : \"sidebar\"}>\r\n        <div className=\"filter\">\r\n          <h4>FILTERS</h4>\r\n          <a href=\"/\" onClick={clearAll}>\r\n            CLEAR ALL\r\n          </a>\r\n        </div>\r\n        <div className=\"hero\">\r\n          <h4>GHOSPHERS</h4>\r\n          <p>No Ghosper selected</p>\r\n          <a onClick={loadNfts}>Choose Ghospers</a>\r\n        </div>\r\n        <div className=\"hero\">\r\n          <h4>GHOSPHERS</h4>\r\n          <div className=\"checkbox\">\r\n            {typeArray.map((t) => {\r\n              return (\r\n                <label key={t} className=\"checkbox-wrap\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={selectedType == t}\r\n                    onChange={() => {\r\n                      if (selectedType == t) {\r\n                        setSelectedType(null);\r\n                      } else setSelectedType(t);\r\n                    }}\r\n                  />\r\n                  <span className=\"checkmark\"></span>\r\n                  {t}\r\n                </label>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"hero\">\r\n          <h4>PRICE</h4>\r\n          <div className=\"price\">\r\n            <div className=\"price-inpt\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Min\"\r\n                onChange={(e) => setMin(e.target.value)}\r\n              />\r\n            </div>\r\n            <span></span>\r\n            <div className=\"price-inpt\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Max\"\r\n                onChange={(e) => setMax(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"hero\">\r\n          <h4>LEVEL</h4>\r\n          <div className=\"levels\">\r\n            <MultiRangeInput\r\n              min={0}\r\n              max={100}\r\n              onChange={({ min, max }) => {\r\n                setMinlevel(min);\r\n                setMaxlevel(max);\r\n                console.log(`min = ${min}, max = ${max}`);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"hero\">\r\n          <h4>TRAITS</h4>\r\n          <div className=\"checkbox\">\r\n            {traitsArray &&\r\n              traitsArray.map((trait) => {\r\n                return (\r\n                  <label className=\"checkbox-wrap\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={selectedTraits && selectedTraits.includes(trait)}\r\n                      onChange={() => {\r\n                        if (selectedTraits && selectedTraits.includes(trait)) {\r\n                          var remaningTraits =\r\n                            selectedTraits &&\r\n                            selectedTraits.filter((t) => t !== trait);\r\n                          setSelectedTraits(remaningTraits);\r\n                        } else {\r\n                          setSelectedTraits((prev) => [...prev, trait]);\r\n                        }\r\n                      }}\r\n                    />\r\n                    <span className=\"checkmark\"></span>\r\n                    {trait}\r\n                  </label>\r\n                );\r\n              })}\r\n          </div>\r\n        </div>\r\n        {/* <div className=\"hero skin\">\r\n\t\t\t\t\t\t\t<h4>SKINS</h4>\r\n\t\t\t\t\t\t\t<p>No skin selected</p>\r\n\t\t\t\t\t\t\t<a href=\"/\">Choose Skin</a>\r\n\t\t\t\t\t\t</div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\utils\\Utils.js",[],"D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\components\\loader\\Loader.js",[],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":14,"column":10,"nodeType":"141","messageId":"142","endLine":14,"endColumn":14},{"ruleId":"139","severity":1,"message":"143","line":22,"column":17,"nodeType":"141","messageId":"142","endLine":22,"endColumn":25},{"ruleId":"139","severity":1,"message":"144","line":54,"column":9,"nodeType":"141","messageId":"142","endLine":54,"endColumn":16},{"ruleId":"139","severity":1,"message":"145","line":4,"column":8,"nodeType":"141","messageId":"142","endLine":4,"endColumn":14},{"ruleId":"146","severity":1,"message":"147","line":42,"column":25,"nodeType":"148","messageId":"149","endLine":42,"endColumn":27},{"ruleId":"146","severity":1,"message":"147","line":44,"column":32,"nodeType":"148","messageId":"149","endLine":44,"endColumn":34},{"ruleId":"139","severity":1,"message":"150","line":4,"column":8,"nodeType":"141","messageId":"142","endLine":4,"endColumn":13},{"ruleId":"139","severity":1,"message":"151","line":5,"column":8,"nodeType":"141","messageId":"142","endLine":5,"endColumn":13},{"ruleId":"139","severity":1,"message":"152","line":15,"column":3,"nodeType":"141","messageId":"142","endLine":15,"endColumn":12},{"ruleId":"139","severity":1,"message":"153","line":36,"column":21,"nodeType":"141","messageId":"142","endLine":36,"endColumn":33},{"ruleId":"139","severity":1,"message":"154","line":43,"column":23,"nodeType":"141","messageId":"142","endLine":43,"endColumn":37},{"ruleId":"139","severity":1,"message":"155","line":96,"column":10,"nodeType":"141","messageId":"142","endLine":96,"endColumn":18},{"ruleId":"139","severity":1,"message":"156","line":100,"column":16,"nodeType":"141","messageId":"142","endLine":100,"endColumn":23},{"ruleId":"139","severity":1,"message":"157","line":106,"column":10,"nodeType":"141","messageId":"142","endLine":106,"endColumn":16},{"ruleId":"139","severity":1,"message":"158","line":106,"column":18,"nodeType":"141","messageId":"142","endLine":106,"endColumn":27},{"ruleId":"139","severity":1,"message":"159","line":111,"column":9,"nodeType":"141","messageId":"142","endLine":111,"endColumn":15},{"ruleId":"146","severity":1,"message":"147","line":116,"column":25,"nodeType":"148","messageId":"149","endLine":116,"endColumn":27},{"ruleId":"146","severity":1,"message":"147","line":118,"column":32,"nodeType":"148","messageId":"149","endLine":118,"endColumn":34},{"ruleId":"139","severity":1,"message":"160","line":148,"column":9,"nodeType":"141","messageId":"142","endLine":148,"endColumn":23},{"ruleId":"161","severity":1,"message":"162","line":166,"column":6,"nodeType":"163","endLine":166,"endColumn":12,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":203,"column":15,"nodeType":"167","endLine":203,"endColumn":37},{"ruleId":"146","severity":1,"message":"147","line":213,"column":47,"nodeType":"148","messageId":"149","endLine":213,"endColumn":49},{"ruleId":"146","severity":1,"message":"147","line":215,"column":44,"nodeType":"148","messageId":"149","endLine":215,"endColumn":46},{"ruleId":"146","severity":1,"message":"147","line":339,"column":53,"nodeType":"148","messageId":"149","endLine":339,"endColumn":55},{"ruleId":"146","severity":1,"message":"147","line":344,"column":64,"nodeType":"148","messageId":"149","endLine":344,"endColumn":66},{"ruleId":"146","severity":1,"message":"168","line":490,"column":32,"nodeType":"148","messageId":"149","endLine":490,"endColumn":34},{"ruleId":"165","severity":1,"message":"166","line":495,"column":21,"nodeType":"167","endLine":495,"endColumn":24},{"ruleId":"165","severity":1,"message":"166","line":514,"column":21,"nodeType":"167","endLine":514,"endColumn":24},{"ruleId":"146","severity":1,"message":"168","line":17,"column":17,"nodeType":"148","messageId":"149","endLine":17,"endColumn":19},{"ruleId":"146","severity":1,"message":"147","line":77,"column":19,"nodeType":"148","messageId":"149","endLine":77,"endColumn":21},{"ruleId":"139","severity":1,"message":"169","line":16,"column":5,"nodeType":"141","messageId":"142","endLine":16,"endColumn":19},{"ruleId":"139","severity":1,"message":"170","line":17,"column":5,"nodeType":"141","messageId":"142","endLine":17,"endColumn":18},{"ruleId":"146","severity":1,"message":"147","line":106,"column":24,"nodeType":"148","messageId":"149","endLine":106,"endColumn":26},{"ruleId":"139","severity":1,"message":"171","line":113,"column":13,"nodeType":"141","messageId":"142","endLine":113,"endColumn":15},{"ruleId":"146","severity":1,"message":"147","line":124,"column":24,"nodeType":"148","messageId":"149","endLine":124,"endColumn":26},{"ruleId":"139","severity":1,"message":"171","line":129,"column":13,"nodeType":"141","messageId":"142","endLine":129,"endColumn":15},{"ruleId":"146","severity":1,"message":"147","line":140,"column":24,"nodeType":"148","messageId":"149","endLine":140,"endColumn":26},{"ruleId":"139","severity":1,"message":"171","line":145,"column":13,"nodeType":"141","messageId":"142","endLine":145,"endColumn":15},{"ruleId":"146","severity":1,"message":"147","line":156,"column":24,"nodeType":"148","messageId":"149","endLine":156,"endColumn":26},{"ruleId":"139","severity":1,"message":"171","line":161,"column":13,"nodeType":"141","messageId":"142","endLine":161,"endColumn":15},{"ruleId":"146","severity":1,"message":"147","line":172,"column":24,"nodeType":"148","messageId":"149","endLine":172,"endColumn":26},{"ruleId":"139","severity":1,"message":"171","line":180,"column":13,"nodeType":"141","messageId":"142","endLine":180,"endColumn":15},{"ruleId":"146","severity":1,"message":"147","line":204,"column":24,"nodeType":"148","messageId":"149","endLine":204,"endColumn":26},{"ruleId":"172","severity":1,"message":"173","line":219,"column":5,"nodeType":"174","messageId":"175","endLine":219,"endColumn":14},{"ruleId":"146","severity":1,"message":"147","line":225,"column":24,"nodeType":"148","messageId":"149","endLine":225,"endColumn":26},{"ruleId":"139","severity":1,"message":"171","line":230,"column":13,"nodeType":"141","messageId":"142","endLine":230,"endColumn":15},{"ruleId":"146","severity":1,"message":"147","line":241,"column":24,"nodeType":"148","messageId":"149","endLine":241,"endColumn":26},{"ruleId":"172","severity":1,"message":"173","line":253,"column":5,"nodeType":"174","messageId":"175","endLine":253,"endColumn":15},{"ruleId":"139","severity":1,"message":"176","line":1,"column":18,"nodeType":"141","messageId":"142","endLine":1,"endColumn":27},{"ruleId":"139","severity":1,"message":"153","line":13,"column":21,"nodeType":"141","messageId":"142","endLine":13,"endColumn":33},{"ruleId":"139","severity":1,"message":"154","line":20,"column":23,"nodeType":"141","messageId":"142","endLine":20,"endColumn":37},{"ruleId":"139","severity":1,"message":"177","line":50,"column":9,"nodeType":"141","messageId":"142","endLine":50,"endColumn":20},{"ruleId":"139","severity":1,"message":"155","line":70,"column":10,"nodeType":"141","messageId":"142","endLine":70,"endColumn":18},{"ruleId":"139","severity":1,"message":"178","line":70,"column":20,"nodeType":"141","messageId":"142","endLine":70,"endColumn":31},{"ruleId":"139","severity":1,"message":"179","line":71,"column":21,"nodeType":"141","messageId":"142","endLine":71,"endColumn":33},{"ruleId":"139","severity":1,"message":"180","line":73,"column":10,"nodeType":"141","messageId":"142","endLine":73,"endColumn":14},{"ruleId":"139","severity":1,"message":"181","line":73,"column":16,"nodeType":"141","messageId":"142","endLine":73,"endColumn":23},{"ruleId":"139","severity":1,"message":"156","line":74,"column":16,"nodeType":"141","messageId":"142","endLine":74,"endColumn":23},{"ruleId":"139","severity":1,"message":"157","line":80,"column":10,"nodeType":"141","messageId":"142","endLine":80,"endColumn":16},{"ruleId":"139","severity":1,"message":"158","line":80,"column":18,"nodeType":"141","messageId":"142","endLine":80,"endColumn":27},{"ruleId":"139","severity":1,"message":"182","line":84,"column":10,"nodeType":"141","messageId":"142","endLine":84,"endColumn":19},{"ruleId":"139","severity":1,"message":"183","line":85,"column":25,"nodeType":"141","messageId":"142","endLine":85,"endColumn":41},{"ruleId":"161","severity":1,"message":"162","line":90,"column":6,"nodeType":"163","endLine":90,"endColumn":8,"suggestions":"184"},{"ruleId":"146","severity":1,"message":"147","line":131,"column":49,"nodeType":"148","messageId":"149","endLine":131,"endColumn":51},{"ruleId":"146","severity":1,"message":"147","line":136,"column":60,"nodeType":"148","messageId":"149","endLine":136,"endColumn":62},{"ruleId":"165","severity":1,"message":"166","line":188,"column":11,"nodeType":"167","endLine":188,"endColumn":33},{"ruleId":"146","severity":1,"message":"147","line":198,"column":43,"nodeType":"148","messageId":"149","endLine":198,"endColumn":45},{"ruleId":"146","severity":1,"message":"147","line":200,"column":40,"nodeType":"148","messageId":"149","endLine":200,"endColumn":42},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],"no-unused-vars","'file' is assigned a value but never used.","Identifier","unusedVar","'setImage' is assigned a value but never used.","'mintNFT' is assigned a value but never used.","'NFTimg' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Card1' is defined but never used.","'Card2' is defined but never used.","'createNFT' is defined but never used.","'setTypeArray' is assigned a value but never used.","'setTraitsArray' is assigned a value but never used.","'tokenIds' is assigned a value but never used.","'setSize' is assigned a value but never used.","'traits' is assigned a value but never used.","'setTraits' is assigned a value but never used.","'buyNFT' is assigned a value but never used.","'updateTokenIds' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadNfts'. Either include it or remove the dependency array.","ArrayExpression",["187"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","Expected '!==' and instead saw '!='.","'ghosp_contract' is assigned a value but never used.","'busd_contract' is assigned a value but never used.","'tx' is assigned a value but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'urlSource' is defined but never used.","'openSidebar' is assigned a value but never used.","'setTokenIds' is assigned a value but never used.","'setSaleItems' is assigned a value but never used.","'page' is assigned a value but never used.","'setPage' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setWalletAddress' is assigned a value but never used.",["188"],"no-global-assign","no-unsafe-negation",{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},"Update the dependencies array to be: [loadNfts, page]",{"range":"193","text":"194"},"Update the dependencies array to be: [loadNfts]",{"range":"195","text":"196"},[4620,4626],"[loadNfts, page]",[2691,2693],"[loadNfts]"]
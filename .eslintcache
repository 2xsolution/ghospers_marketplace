[{"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\index.js":"1","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\App.js":"2","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\reportWebVitals.js":"3","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\mint\\Mint.js":"4","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\Contact\\Contact.js":"5","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\ConnectWallet\\ConnectWallet.js":"6","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\Home\\Home.js":"7","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\NFTDetail\\NFTdetail.js":"8","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\components\\Header.js":"9","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\components\\MultiRangeInput.js":"10","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\core\\web3.js":"11","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\utils\\Utils.js":"12","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\components\\loader\\Loader.js":"13","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\profile\\Profile.js":"14"},{"size":603,"mtime":1648115103756,"results":"15","hashOfConfig":"16"},{"size":1266,"mtime":1648142564386,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1648115103768,"results":"18","hashOfConfig":"16"},{"size":7218,"mtime":1648230690615,"results":"19","hashOfConfig":"16"},{"size":1378,"mtime":1648115103760,"results":"20","hashOfConfig":"16"},{"size":2200,"mtime":1648115103758,"results":"21","hashOfConfig":"16"},{"size":16911,"mtime":1648230797383,"results":"22","hashOfConfig":"16"},{"size":5646,"mtime":1648210876490,"results":"23","hashOfConfig":"16"},{"size":2176,"mtime":1648210876484,"results":"24","hashOfConfig":"16"},{"size":2694,"mtime":1648115103748,"results":"25","hashOfConfig":"16"},{"size":7295,"mtime":1648210876488,"results":"26","hashOfConfig":"16"},{"size":116,"mtime":1648230161132,"results":"27","hashOfConfig":"16"},{"size":238,"mtime":1648133365107,"results":"28","hashOfConfig":"16"},{"size":11307,"mtime":1648231300130,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"17edddb",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\index.js",[],["63","64"],"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\App.js",[],"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\reportWebVitals.js",[],"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\mint\\Mint.js",["65","66","67","68","69","70","71"],"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\Contact\\Contact.js",[],"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\ConnectWallet\\ConnectWallet.js",[],"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\Home\\Home.js",["72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93"],"import React, { useEffect, useState } from \"react\";\r\nimport Header from \"../../components/Header\";\r\nimport MultiRangeInput from \"../../components/MultiRangeInput\";\r\nimport Card1 from \"../../assets/img/card1.png\";\r\nimport Card2 from \"../../assets/img/card2.png\";\r\nimport LeftIcon from \"../../assets/img/lefticon.png\";\r\nimport RightIcon from \"../../assets/img/righticon.png\";\r\nimport axios from \"axios\";\r\nimport \"./home.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport {\r\n  loadWeb3,\r\n  connectWallet,\r\n  createNFT,\r\n  buyNFTWithBNB,\r\n  buyNFTWithBUSD,\r\n  buyNFTWithGHSP,\r\n  putTokenOnSale,\r\n  getTokenIds,\r\n  getSaleItems,\r\n} from \"../../core/web3\";\r\nimport { BASEURL } from \"../../utils/Utils\";\r\nimport Loader from \"../../components/loader/Loader\";\r\n\r\nconst Home = ({ setShowModal }) => {\r\n  const [sidebar, setSidebar] = useState(false);\r\n  const openSidebar = (e) => {\r\n    console.log(\"sidebar\");\r\n    e.preventDefault();\r\n    setSidebar((prev) => !prev);\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [typeArray, setTypeArray] = useState([\r\n    \"common\",\r\n    \"rare\",\r\n    \"epic\",\r\n    \"legendary\",\r\n  ]);\r\n\r\n  const [traitsArray, setTraitsArray] = useState([\r\n    \"tank\",\r\n    \"marksman\",\r\n    \"assassin\",\r\n  ]);\r\n\r\n  const loadNfts = async (e) => {\r\n    // e.preventDefault();\r\n    setIsLoading(true);\r\n    // var query = \"?\";\r\n    // if (min) {\r\n    //   query = `${query}min=${min}&`;\r\n    // }\r\n    // if (max) {\r\n    //   query = `${query}max=${max}&`;\r\n    // }\r\n    // if (minlevel) {\r\n    //   query = `${query}minlevel=${minlevel}&`;\r\n    // }\r\n    // if (maxlevel) {\r\n    //   query = `${query}maxlevel=${maxlevel}&`;\r\n    // }\r\n    // if (selectedType) {\r\n    //   query = `${query}type=${selectedType}&`;\r\n    // }\r\n    // console.log(selectedTraits);\r\n    // if (selectedTraits && selectedTraits.length > 0) {\r\n    //   query = `${query}traits=${selectedTraits}&`;\r\n    // }\r\n\r\n    // console.log(query);\r\n    axios\r\n      .post(BASEURL + \"/nft/all/\", {\r\n        min,\r\n        max,\r\n        page,\r\n        size,\r\n        minlevel,\r\n        currency,\r\n        maxlevel,\r\n        type: selectedType,\r\n        traits:\r\n          selectedTraits && selectedTraits.length > 0 ? selectedTraits : null,\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setTotalRecords(response.data.data[1].totalRecords);\r\n        setNftsArray(response.data.data[0]);\r\n      })\r\n      .catch((e) => console.log(e));\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const [sampleNFTTokenID, setSampleNFTTokenID] = useState(null);\r\n  const [tokenIds, setTokenIds] = useState([1, 2, 3, 5]);\r\n  const [saleItems, setSaleItems] = useState([]);\r\n  const [nftsArray, setNftsArray] = useState(null);\r\n  const [page, setPage] = useState(1);\r\n  const [size, setSize] = useState(5);\r\n  const [totalRecords, setTotalRecords] = useState(null);\r\n  //   filters\r\n  const [min, setMin] = useState(null);\r\n  const [minlevel, setMinlevel] = useState(0);\r\n  const [maxlevel, setMaxlevel] = useState(100);\r\n  const [traits, setTraits] = useState(null);\r\n  const [selectedType, setSelectedType] = useState(null);\r\n  const [selectedTraits, setSelectedTraits] = useState([]);\r\n  const [max, setMax] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [currency, setCurrency] = useState(null);\r\n  const buyNFT = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (sampleNFTTokenID) {\r\n      const saleTokenType = 2; // GHSP, BUSD, BNB\r\n      if (saleTokenType == 0) {\r\n        buyNFTWithGHSP(sampleNFTTokenID);\r\n      } else if (saleTokenType == 1) {\r\n        buyNFTWithBUSD(sampleNFTTokenID);\r\n      } else {\r\n        buyNFTWithBNB(sampleNFTTokenID, 0.1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const sellNFT = async (event) => {\r\n    event.preventDefault();\r\n\r\n    console.log(\"selling token ID : \", sampleNFTTokenID);\r\n\r\n    const saleTokenType = 2; // GHSP, BUSD, BNB\r\n\r\n    if (sampleNFTTokenID) {\r\n      putTokenOnSale(sampleNFTTokenID, 0.1, saleTokenType);\r\n    }\r\n  };\r\n\r\n  const mintNFT = async (event) => {\r\n    // event.preventDefault();\r\n    // const tokenID = await createNFT(\"\");\r\n    // console.log('minted token ID : ', tokenID);\r\n    // if (tokenID) {\r\n    // \tsetSampleNFTTokenID(tokenID);\r\n    // \tupdateTokenIds();\r\n    // }\r\n  };\r\n\r\n  const updateTokenIds = async () => {\r\n    let res = await getTokenIds();\r\n    setTokenIds(res);\r\n    console.log(\"======= getTokenIds ========== \", res);\r\n\r\n    res = await getSaleItems(res);\r\n    setSaleItems(res);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadWeb3();\r\n    connectWallet();\r\n\r\n    // updateTokenIds();\r\n  }, []);\r\n  useEffect(() => {\r\n    loadNfts();\r\n    // updateTokenIds();\r\n  }, [page]);\r\n\r\n  const clearAll = (e) => {\r\n    e.preventDefault();\r\n    setSelectedTraits([]);\r\n    setSelectedType(null);\r\n    setMinlevel(0);\r\n    setMax(null);\r\n    setMin(null);\r\n    setCurrency(null);\r\n    setMaxlevel(100);\r\n  };\r\n\r\n  const onClickItem = async (tokenID) => {\r\n    setSampleNFTTokenID(tokenID);\r\n  };\r\n\r\n  if (isLoading) return <Loader />;\r\n  return (\r\n    <>\r\n      <Header setShowModal={setShowModal} />\r\n      <section className=\"root\">\r\n        <div className=\"fitermob\">\r\n          <a href=\"/\" className=\"filter-btn\" onClick={openSidebar}>\r\n            Filter\r\n          </a>\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className={sidebar ? \"sidebar sidebar-active\" : \"sidebar\"}>\r\n            <div className=\"filter\">\r\n              <h4>FILTERS</h4>\r\n              <a href=\"/\" onClick={clearAll}>\r\n                CLEAR ALL\r\n              </a>\r\n            </div>\r\n            <div className=\"hero\">\r\n              <h4>GHOSPHERS</h4>\r\n              <p>No Ghosper selected</p>\r\n              <a onClick={loadNfts}>Choose Ghospers</a>\r\n            </div>\r\n            <div className=\"hero\">\r\n              <h4>GHOSPHERS</h4>\r\n              <div className=\"checkbox\">\r\n                {typeArray.map((t) => {\r\n                  return (\r\n                    <label key={t} className=\"checkbox-wrap\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={selectedType == t}\r\n                        onChange={() => {\r\n                          if (selectedType == t) {\r\n                            setSelectedType(null);\r\n                          } else setSelectedType(t);\r\n                        }}\r\n                      />\r\n                      <span className=\"checkmark\"></span>\r\n                      {t}\r\n                    </label>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n            <div className=\"hero\">\r\n              <h4>PRICE</h4>\r\n              <div className=\"price\">\r\n                <div className=\"price-inpt\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Min\"\r\n                    onChange={(e) => setMin(e.target.value)}\r\n                  />\r\n                </div>\r\n                <span></span>\r\n                <div className=\"price-inpt\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Max\"\r\n                    onChange={(e) => setMax(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"hero\">\r\n              <h4>Currency</h4>\r\n              <div className=\"levels\">\r\n                <select\r\n                  onChange={(e) => setCurrency(e.target.value)}\r\n                  value={currency}\r\n                >\r\n                  <option selected value=\"ghsp\">\r\n                    GHSP\r\n                  </option>\r\n                  <option value=\"bnb\">BNB</option>\r\n                  <option value=\"busd\">BUSD</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"hero\">\r\n              <h4>LEVEL</h4>\r\n              <div className=\"levels\">\r\n                <MultiRangeInput\r\n                  min={0}\r\n                  max={100}\r\n                  onChange={({ min, max }) => {\r\n                    setMinlevel(min);\r\n                    setMaxlevel(max);\r\n                    console.log(`min = ${min}, max = ${max}`);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"hero\">\r\n              <h4>TRAITS</h4>\r\n              <div className=\"checkbox\">\r\n                {traitsArray &&\r\n                  traitsArray.map((trait) => {\r\n                    return (\r\n                      <label className=\"checkbox-wrap\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={\r\n                            selectedTraits && selectedTraits.includes(trait)\r\n                          }\r\n                          onChange={() => {\r\n                            if (\r\n                              selectedTraits &&\r\n                              selectedTraits.includes(trait)\r\n                            ) {\r\n                              var remaningTraits =\r\n                                selectedTraits &&\r\n                                selectedTraits.filter((t) => t !== trait);\r\n                              setSelectedTraits(remaningTraits);\r\n                            } else {\r\n                              setSelectedTraits((prev) => [...prev, trait]);\r\n                            }\r\n                          }}\r\n                        />\r\n                        <span className=\"checkmark\"></span>\r\n                        {trait}\r\n                      </label>\r\n                    );\r\n                  })}\r\n              </div>\r\n            </div>\r\n            {/* <div className=\"hero skin\">\r\n\t\t\t\t\t\t\t<h4>SKINS</h4>\r\n\t\t\t\t\t\t\t<p>No skin selected</p>\r\n\t\t\t\t\t\t\t<a href=\"/\">Choose Skin</a>\r\n\t\t\t\t\t\t</div> */}\r\n          </div>\r\n          <div style={{ marginLeft: \"60px\" }}>\r\n            <div style={{ display: \"flex\", marginBottom: \"20px\" }}>\r\n              {/* <div className=\"nav-btn\">\r\n                <a href=\"/\" onClick={buyNFT}>\r\n                  Buy\r\n                </a>\r\n              </div> */}\r\n              <div className=\"nav-btn\">\r\n                <a href=\"/\" onClick={sellNFT}>\r\n                  Sell\r\n                </a>\r\n              </div>\r\n              <div className=\"nav-btn\">\r\n                <a href=\"/mint\" onClick={mintNFT}>\r\n                  Mint\r\n                </a>\r\n              </div>\r\n            </div>\r\n            <div className=\"nft-collections\">\r\n              {nftsArray &&\r\n                nftsArray.map((elem, i) => {\r\n                  return (\r\n                    <div\r\n                      className=\"card\"\r\n                      key={i}\r\n                      onClick={() => {\r\n                        onClickItem(i);\r\n                        navigate(`/trending/${elem._id}`);\r\n                      }}\r\n                    >\r\n                      <div className=\"card-img\">\r\n                        <img\r\n                          src={`${BASEURL}/uploads/${elem.imageUrl}`}\r\n                          alt=\"Card1\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"card-title\">\r\n                        <h4>\r\n                          {elem.title}\r\n                          {Number(sampleNFTTokenID) == Number(i) ? (\r\n                            <span>&#10003;</span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}{\" \"}\r\n                          {saleItems[i] && saleItems[i].onSale == true\r\n                            ? \"OnSale\"\r\n                            : \"\"}\r\n                        </h4>\r\n                        {/* <span>{elem.description}</span> */}\r\n                        <button className=\"custom-btn\">BUY</button>\r\n                      </div>\r\n                      <div className=\"card-price\">\r\n                        {/* <div>\r\n                          <span>gTHC</span>\r\n                          <p>21/219</p>\r\n                        </div> */}\r\n                        <div>\r\n                          <span>Price</span>\r\n                          <p>900 THC</p>\r\n                          <small>${elem.price} USD</small>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              {/* <div className=\"card\">\r\n\t\t\t\t\t\t\t\t<div className=\"card-img\">\r\n\t\t\t\t\t\t\t\t\t<img src={Card1} alt=\"Card1\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-title\">\r\n\t\t\t\t\t\t\t\t\t<h4>CULIEN</h4>\r\n\t\t\t\t\t\t\t\t\t<span>The Baby</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-price\">\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<span>gTHC</span>\r\n\t\t\t\t\t\t\t\t\t\t<p>21/219</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<span>Price</span>\r\n\t\t\t\t\t\t\t\t\t\t<p>900 THC</p>\r\n\t\t\t\t\t\t\t\t\t\t<small>$19 USD</small>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t<div className=\"card-img bg-blue\">\r\n\t\t\t\t\t\t\t\t\t<img src={Card2} alt=\"Card2\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-title\">\r\n\t\t\t\t\t\t\t\t\t<h4>Lorem ipsum sit</h4>\r\n\t\t\t\t\t\t\t\t\t<span>The Baby</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-price\">\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<span>gTHC</span>\r\n\t\t\t\t\t\t\t\t\t\t<p>21/219</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<span>Price</span>\r\n\t\t\t\t\t\t\t\t\t\t<p>900 THC</p>\r\n\t\t\t\t\t\t\t\t\t\t<small>$19 USD</small>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t<div className=\"card-img bg-red\">\r\n\t\t\t\t\t\t\t\t\t<img src={Card1} alt=\"Card3\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-title\">\r\n\t\t\t\t\t\t\t\t\t<h4>Lorem ipsum sit</h4>\r\n\t\t\t\t\t\t\t\t\t<span>The Baby</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-price\">\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<span>gTHC</span>\r\n\t\t\t\t\t\t\t\t\t\t<p>21/219</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<span>Price</span>\r\n\t\t\t\t\t\t\t\t\t\t<p>900 THC</p>\r\n\t\t\t\t\t\t\t\t\t\t<small>$19 USD</small>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t<div className=\"card-img bg-blue\">\r\n\t\t\t\t\t\t\t\t\t<img src={Card2} alt=\"Card3\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-title\">\r\n\t\t\t\t\t\t\t\t\t<h4>Lorem ipsum sit</h4>\r\n\t\t\t\t\t\t\t\t\t<span>The Baby</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-price\">\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<span>gTHC</span>\r\n\t\t\t\t\t\t\t\t\t\t<p>21/219</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<span>Price</span>\r\n\t\t\t\t\t\t\t\t\t\t<p>900 THC</p>\r\n\t\t\t\t\t\t\t\t\t\t<small>$19 USD</small>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t<div className=\"card-img bg-red\">\r\n\t\t\t\t\t\t\t\t\t<img src={Card1} alt=\"Card3\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-title\">\r\n\t\t\t\t\t\t\t\t\t<h4>Lorem ipsum sit</h4>\r\n\t\t\t\t\t\t\t\t\t<span>The Baby</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-price\">\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<span>gTHC</span>\r\n\t\t\t\t\t\t\t\t\t\t<p>21/219</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<span>Price</span>\r\n\t\t\t\t\t\t\t\t\t\t<p>900 THC</p>\r\n\t\t\t\t\t\t\t\t\t\t<small>$19 USD</small>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t<div className=\"card-img bg-blue\">\r\n\t\t\t\t\t\t\t\t\t<img src={Card2} alt=\"Card3\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-title\">\r\n\t\t\t\t\t\t\t\t\t<h4>Lorem ipsum sit</h4>\r\n\t\t\t\t\t\t\t\t\t<span>The Baby</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-price\">\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<span>gTHC</span>\r\n\t\t\t\t\t\t\t\t\t\t<p>21/219</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<span>Price</span>\r\n\t\t\t\t\t\t\t\t\t\t<p>900 THC</p>\r\n\t\t\t\t\t\t\t\t\t\t<small>$19 USD</small>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div> */}\r\n              <div className=\"pagination-wrap\">\r\n                <div className=\"pagination\">\r\n                  <div\r\n                    className=\"icon\"\r\n                    onClick={() => {\r\n                      if (page != 1) {\r\n                        setPage(page - 1);\r\n                      }\r\n                    }}\r\n                  >\r\n                    <a>\r\n                      <img src={LeftIcon} alt=\"\" />\r\n                    </a>\r\n                  </div>\r\n                  <div className=\"number\">\r\n                    <span>\r\n                      {page * size > totalRecords ? totalRecords : size}\r\n                    </span>\r\n                    of {totalRecords && totalRecords}\r\n                  </div>\r\n                  <div\r\n                    className=\"icon\"\r\n                    onClick={() => {\r\n                      if (page * size < totalRecords) {\r\n                        console.log(\"inside\");\r\n                        setPage(page + 1);\r\n                      }\r\n                    }}\r\n                  >\r\n                    <a>\r\n                      <img src={RightIcon} alt=\"\" />\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\NFTDetail\\NFTdetail.js",["94","95","96"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Header from \"../../components/Header\";\r\nimport NFTimg from \"../../assets/img/nftimg.png\";\r\nimport coinIcon from \"../../assets/img/coinicon.png\";\r\nimport Icon from \"../../assets/img/icon_stat.png\";\r\nimport SwordIcon from \"../../assets/img/sword.png\";\r\nimport \"./nftdetail.css\";\r\nimport axios from \"axios\";\r\nimport { BASEURL } from \"../../utils/Utils\";\r\nimport {\r\n  buyNFTWithBNB,\r\n  buyNFTWithBUSD,\r\n  buyNFTWithGHSP,\r\n} from \"../../core/web3\";\r\n\r\n\r\nconst NFTdetail = ({ setShowModal }) => {\r\n  const [nftDetail, setNftDetail] = useState(null);\r\n\r\n  const { nftId } = useParams();\r\n  useEffect(() => {\r\n    console.log(nftId);\r\n    loadNftById(nftId);\r\n  }, [nftId]);\r\n\r\n  const loadNftById = async (id) => {\r\n    axios\r\n      .get(`${BASEURL}/nft/${id}`)\r\n      .then((response) => {\r\n        console.log(response.data.data);\r\n        setNftDetail(response.data.data);\r\n      })\r\n      .catch((e) => console.log(e));\r\n  };\r\n  \r\n  const buyNFT = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (nftId) {\r\n      const saleTokenType = 2; // GHSP, BUSD, BNB\r\n      if (saleTokenType == 0) {\r\n        buyNFTWithGHSP(nftId);\r\n      } else if (saleTokenType == 1) {\r\n        buyNFTWithBUSD(nftId);\r\n      } else {\r\n        buyNFTWithBNB(nftId, 0.1);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header setShowModal={setShowModal} />\r\n      <section className=\"nft\">\r\n        <div className=\"container\">\r\n          <div className=\"home-btn\">\r\n            <Link to=\"/\">Back to home</Link>\r\n          </div>\r\n          <div className=\"nft-detail-container\">\r\n            <div className=\"nft-img\">\r\n              <img\r\n                src={nftDetail && `${BASEURL}/uploads/${nftDetail.imageUrl}`}\r\n                alt=\"nft_image\"\r\n              />\r\n            </div>\r\n            <div className=\"nft-detail\">\r\n              <div className=\"nft-titles\">\r\n                <div className=\"title\">\r\n                  <h1>{nftDetail && nftDetail.title} </h1>\r\n                  <p>{nftDetail && nftDetail.description} </p>\r\n                </div>\r\n                <div className=\"title-right\">\r\n                  <div className=\"head\">\r\n                    <p>HERD</p>\r\n                    <span>Epic</span>\r\n                  </div>\r\n                  <div className=\"head\">\r\n                    <p>SKIN</p>\r\n                    <span>Normal</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <p className=\"view-owner\"> View Owner</p>\r\n              {/* <div className=\"select-fields\">\r\n                <select>\r\n                  <option selected=\"\" value=\"0\">\r\n                    View Owner\r\n                  </option>\r\n                  <option value=\"1\">No Wrapper</option>\r\n                  <option value=\"2\">No JS</option>\r\n                  <option value=\"3\">Nice!</option>\r\n                </select>\r\n              </div> */}\r\n              <div className=\"nft-data\">\r\n                <ul className=\"tags\">\r\n                  <li>\r\n                    <a href=\"/\" className=\"active-tag\">\r\n                      P2E Info\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"/\">Stats</a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"/\">Fury</a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"/\">Passive</a>\r\n                  </li>\r\n                </ul>\r\n\r\n                <div className=\"nft-reward\">\r\n                  <div className=\"icon\">\r\n                    <img src={coinIcon} alt=\"coinIcon\" />\r\n                  </div>\r\n                  <div className=\"rewards\">\r\n                    <p>Basic Battle Rewards:</p>\r\n                    <div className=\"reward-data\">\r\n                      <div className=\"reward\">\r\n                        <span>Win:</span>\r\n                        <span>+6</span>\r\n                      </div>\r\n                      <div className=\"reward\">\r\n                        <span>Draw:</span>\r\n                        <span>+2</span>\r\n                      </div>\r\n                      <div className=\"reward\">\r\n                        <span>Lose:</span>\r\n                        <span>+1</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"nft-stats\">\r\n                  <div className=\"stat\">\r\n                    <img src={Icon} alt=\"icon\" />\r\n                    <p>Win Bonus</p>\r\n                  </div>\r\n                  <p>6.695</p>\r\n                </div>\r\n                <div className=\"nft-stats\">\r\n                  <div className=\"stat\">\r\n                    <img src={SwordIcon} alt=\"icon\" />\r\n                    <p>gTHC Battles</p>\r\n                  </div>\r\n                  <p>70/394</p>\r\n                </div>\r\n                <div className=\"nft-stats\">\r\n                  <div className=\"stat\">\r\n                    <img src={SwordIcon} alt=\"icon\" />\r\n                    <p>Daily gTHC Battles</p>\r\n                  </div>\r\n                  <p>10</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"nft-price\">\r\n                <h1>1,800 THC</h1>\r\n                <p>{nftDetail && nftDetail.price} USD</p>\r\n              </div>\r\n              <div className=\"buy-btn\">\r\n                <a href=\"/\" onClick={buyNFT}>BUY NOW</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NFTdetail;\r\n","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\components\\Header.js",["97","98"],"import React, { useEffect, useState } from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport logo from \"../assets/img/logo.6eaa2fdb.png\";\r\nimport \"./header.css\";\r\n\r\nimport {\r\n\tloadWeb3,\r\n\tconnectWallet,\r\n\tgetCurrentWallet,\r\n} from \"../core/web3\";\r\n\r\nconst Header = ({ setShowModal }) => {\r\n\tconst [navActive, isnavActive] = useState(false);\r\n\tconst [curWallet, setCurWallet] = useState(\"\");\r\n\r\n\tconst onConnectWallet = async () => {\r\n\t\tif (curWallet != \"\") {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tawait loadWeb3();\r\n\t\tlet res = await connectWallet();\r\n\t\tsetCurWallet(res.address);\r\n\t}\r\n\r\n\tconst openModal = (e) => {\r\n\t\tconsole.log(\"hwllo\");\r\n\t\te.preventDefault();\r\n\t\t// setShowModal((prev) => !prev);\r\n\r\n\t\tonConnectWallet();\r\n\t};\r\n\r\n\tconst getWallet = async () => {\r\n\t\tlet res = await getCurrentWallet();\r\n\t\tif (res.success) {\r\n\t\t\tsetCurWallet(res.account);\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetWallet();\r\n\t});\r\n\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t<div className=\"logo\">\r\n\t\t\t\t\t\t<img src={logo} alt=\"logo\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<div className={navActive ? \"links nav-active\" : \"links\"}>\r\n\t\t\t\t\t<ul className=\"navigations\">\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Link to=\"https://ghospers.com/\" activeclassname=\"active\">\r\n\t\t\t\t\t\t\t\tHome\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<NavLink to=\"/\" activeclassname=\"active\">\r\n\t\t\t\t\t\t\t\tOfficial\r\n\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Link to=\"https://staking.ghospers.com/\" activeclassname=\"active\">\r\n\t\t\t\t\t\t\t\tStaking\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t{/* <li>\r\n\t\t\t\t\t\t\t<NavLink to=\"/contact\" activeclassname=\"active\">\r\n\t\t\t\t\t\t\t\tContact Us\r\n\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t</li> */}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<div className=\"nav-btn\">\r\n\t\t\t\t\t\t<a href=\"/\" onClick={openModal}>\r\n\t\t\t\t\t\t\t{curWallet == \"\" ? \"Connect Wallet\" : curWallet.slice(0, 5) + \"...\" + curWallet.slice(-4)}\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<a href=\"/\">Login</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"hamburger\" onClick={() => isnavActive(!navActive)}>\r\n\t\t\t\t\t<div className=\"line1\"></div>\r\n\t\t\t\t\t<div className=\"line2\"></div>\r\n\t\t\t\t\t<div className=\"line3\"></div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\components\\MultiRangeInput.js",[],"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\core\\web3.js",["99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116"],"\r\nimport Web3 from 'web3';\r\n\r\nconst busdAbi = require('./abi/busd.json');\r\nconst ghospAbi = require('./abi/ghosp.json');\r\nconst marketAbi = require('./abi/marketplace.json');\r\nconst minterAbi = require('./abi/minter.json');\r\n\r\n\r\nconst MINTER_ADDRESS = \"0xfA9bB2B3119A7b9d40235F9e92052AB6Fd6DaD12\"\r\nconst MARKETPLACE_ADDRESS = \"0xC4d193F224Ec31c7BDc959D2D1b9Eb9d16E97A78\"\r\nconst GHOSP_ADDRESS = \"0x91c70ba82a8ed676c5a09ce1cd94cc18923e8371\"\r\nconst BUSD_ADDRESS = \"0x8301f2213c0eed49a7e28ae4c3e91722919b8b47\"   // Faucet Token\r\nlet market_contract = null;\r\nlet minter_contract = null;\r\nlet ghosp_contract = null;\r\nlet busd_contract = null;\r\n\r\n\r\nexport const loadWeb3 = async () => {\r\n    if (window.ethereum) {\r\n        window.web3 = new Web3(window.ethereum);\r\n        window.web3.eth.handleRevert = true;\r\n    } else if (window.web3) {\r\n        window.web3 = new Web3(window.web3.currentProvider);\r\n        window.web3.eth.handleRevert = true\r\n    } else {\r\n        window.alert(\r\n            \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n        );\r\n        return;\r\n    }\r\n\r\n    minter_contract = new window.web3.eth.Contract(minterAbi, MINTER_ADDRESS);\r\n    market_contract = new window.web3.eth.Contract(marketAbi, MARKETPLACE_ADDRESS);\r\n    ghosp_contract = new window.web3.eth.Contract(ghospAbi, GHOSP_ADDRESS);\r\n    busd_contract = new window.web3.eth.Contract(busdAbi, BUSD_ADDRESS);\r\n\r\n    window.ethereum.on('chainChanged', function (chainId) {\r\n\r\n    });\r\n};\r\n\r\n\r\nexport const connectWallet = async () => {\r\n    if (window.ethereum) {\r\n        try {\r\n            const addressArray = await window.ethereum.request({\r\n                method: \"eth_requestAccounts\",\r\n            });\r\n            const obj = {\r\n                status: \"Metamask successfuly connected.\",\r\n                address: addressArray[0],\r\n            };\r\n            return obj;\r\n        } catch (err) {\r\n            return {\r\n                address: \"\",\r\n                status: \"Something went wrong: \" + err.message,\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        return {\r\n            address: \"\",\r\n            status: (\r\n                <span>\r\n                    <p>\r\n                        {\" \"}\r\n                        🦊{\" \"}\r\n                        <a target=\"_blank\" rel=\"noreferrer\" href={`https://metamask.io/download.html`}>\r\n                            You must install Metamask, a virtual BSC wallet, in your\r\n                            browser.\r\n                        </a>\r\n                    </p>\r\n                </span>\r\n            ),\r\n        };\r\n    }\r\n};\r\n\r\n\r\nexport const getCurrentWallet = async () => {\r\n    const web3 = window.web3;\r\n    try {\r\n        let accounts = await web3.eth.getAccounts();\r\n        let accountBalance = await web3.eth.getBalance(accounts[0]);\r\n        accountBalance = web3.utils.fromWei(accountBalance);\r\n        return {\r\n            success: true,\r\n            account: accounts[0],\r\n            balance: accountBalance\r\n        }\r\n    } catch (error) {\r\n        return {\r\n            success: false,\r\n            result: \"Something went wrong: \" + error.message\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const buyNFTWithBNB = async (tokenID, amount) => {\r\n\r\n    const wallet = await getCurrentWallet();\r\n    if (wallet.success == false) {\r\n        return false;\r\n    }\r\n\r\n    try {\r\n        let bnAmount = window.web3.utils.toWei(\"\" + amount);\r\n        console.log('ssssssssssss', tokenID, bnAmount);\r\n        let tx = await market_contract.methods.buyNFTWithBNB(tokenID, wallet.account).send({ from: wallet.account, value: bnAmount });\r\n    } catch (error) {\r\n        console.log('buyNFTWithBNB error', error);\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport const buyNFTWithGHSP = async (tokenID) => {\r\n    const wallet = await getCurrentWallet();\r\n    if (wallet.success == false) {\r\n        return false;\r\n    }\r\n\r\n    try {\r\n        let tx = await market_contract.methods.buyNFTWithGHSP(tokenID, wallet.account).send({ from: wallet.account });\r\n    } catch (error) {\r\n        console.log('buyNFTWithGHSP error', error);\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport const buyNFTWithBUSD = async (tokenID) => {\r\n    const wallet = await getCurrentWallet();\r\n    if (wallet.success == false) {\r\n        return false;\r\n    }\r\n\r\n    try {\r\n        let tx = await market_contract.methods.buyNFTWithBUSD(tokenID, wallet.account).send({ from: wallet.account });\r\n    } catch (error) {\r\n        console.log('buyNFTWithBUSD error', error);\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport const removeTokenFromSale = async (tokenID) => {\r\n    const wallet = await getCurrentWallet();\r\n    if (wallet.success == false) {\r\n        return false;\r\n    }\r\n\r\n    try {\r\n        let tx = await market_contract.methods.removeTokenFromSale(tokenID, wallet.account).send({ from: wallet.account });\r\n    } catch (error) {\r\n        console.log('removeTokenFromSale error', error);\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport const putTokenOnSale = async (tokenID, price, saleTokenType) => {\r\n    const wallet = await getCurrentWallet();\r\n    if (wallet.success == false) {\r\n        return false;\r\n    }\r\n\r\n    try {\r\n        await minter_contract.methods.setApprovalForAll(MARKETPLACE_ADDRESS, true).send({ from: wallet.account });\r\n\r\n        let bnPrice = window.web3.utils.toWei(\"\" + price);\r\n        let tx = await market_contract.methods.putTokenOnSale(tokenID, bnPrice, saleTokenType).send({ from: wallet.account });\r\n    } catch (error) {\r\n        console.log('putTokenOnSale error', error);\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport const getSaleItems = async (tokenIds) => {\r\n\r\n    let saleItems = {};\r\n    for (let i = 0; i < tokenIds.length; i++) {\r\n        let item = await market_contract.methods.saleItems(tokenIds[i]).call();\r\n        saleItems[tokenIds[i]] = item;\r\n    }\r\n\r\n    console.log(\"Sale Items : \", saleItems);\r\n\r\n    return saleItems;\r\n}\r\n\r\nexport const createNFT = async (tokenURI) => {\r\n    const wallet = await getCurrentWallet();\r\n    if (wallet.success == false) {\r\n        return 0;\r\n    }\r\n\r\n    console.log('11111111111', wallet);\r\n\r\n    try {\r\n        let tokenID = 0;\r\n        tokenID = await minter_contract.methods.createNFT(tokenURI).send({ from: wallet.account });\r\n        return tokenID;\r\n    } catch (error) {\r\n        console.log('createNFT error', error);\r\n        return 0;\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\n\r\nexport const getCreator = async (tokenID) => {\r\n    const wallet = await getCurrentWallet();\r\n    if (wallet.success == false) {\r\n        return false;\r\n    }\r\n\r\n    try {\r\n        let tx = await minter_contract.methods.getCreator(tokenID).send({ from: wallet.account });\r\n    } catch (error) {\r\n        console.log('getCreator error', error);\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport const getTokenIds = async () => {\r\n    const wallet = await getCurrentWallet();\r\n    if (wallet.success == false) {\r\n        return [];\r\n    }\r\n\r\n    try {\r\n        let tokenIds = await minter_contract.methods.getTokenIds(wallet.account).call();\r\n        return tokenIds;\r\n    } catch (error) {\r\n        console.log('getTokenIds error', error);\r\n        return [];\r\n    }\r\n\r\n    return [];\r\n}","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\utils\\Utils.js",[],"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\components\\loader\\Loader.js",[],"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\profile\\Profile.js",["117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134"],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":19,"column":19,"nodeType":"141","messageId":"142","endLine":19,"endColumn":29},{"ruleId":"139","severity":1,"message":"143","line":21,"column":16,"nodeType":"141","messageId":"142","endLine":21,"endColumn":23},{"ruleId":"139","severity":1,"message":"144","line":28,"column":23,"nodeType":"141","messageId":"142","endLine":28,"endColumn":37},{"ruleId":"139","severity":1,"message":"145","line":34,"column":21,"nodeType":"141","messageId":"142","endLine":34,"endColumn":33},{"ruleId":"139","severity":1,"message":"146","line":89,"column":9,"nodeType":"141","messageId":"142","endLine":89,"endColumn":16},{"ruleId":"147","severity":1,"message":"148","line":174,"column":45,"nodeType":"149","messageId":"150","endLine":174,"endColumn":47},{"ruleId":"147","severity":1,"message":"148","line":176,"column":42,"nodeType":"149","messageId":"150","endLine":176,"endColumn":44},{"ruleId":"139","severity":1,"message":"151","line":4,"column":8,"nodeType":"141","messageId":"142","endLine":4,"endColumn":13},{"ruleId":"139","severity":1,"message":"152","line":5,"column":8,"nodeType":"141","messageId":"142","endLine":5,"endColumn":13},{"ruleId":"139","severity":1,"message":"153","line":15,"column":3,"nodeType":"141","messageId":"142","endLine":15,"endColumn":12},{"ruleId":"139","severity":1,"message":"145","line":36,"column":21,"nodeType":"141","messageId":"142","endLine":36,"endColumn":33},{"ruleId":"139","severity":1,"message":"144","line":43,"column":23,"nodeType":"141","messageId":"142","endLine":43,"endColumn":37},{"ruleId":"139","severity":1,"message":"154","line":97,"column":10,"nodeType":"141","messageId":"142","endLine":97,"endColumn":18},{"ruleId":"139","severity":1,"message":"155","line":101,"column":16,"nodeType":"141","messageId":"142","endLine":101,"endColumn":23},{"ruleId":"139","severity":1,"message":"156","line":107,"column":10,"nodeType":"141","messageId":"142","endLine":107,"endColumn":16},{"ruleId":"139","severity":1,"message":"157","line":107,"column":18,"nodeType":"141","messageId":"142","endLine":107,"endColumn":27},{"ruleId":"139","severity":1,"message":"158","line":113,"column":9,"nodeType":"141","messageId":"142","endLine":113,"endColumn":15},{"ruleId":"147","severity":1,"message":"148","line":118,"column":25,"nodeType":"149","messageId":"150","endLine":118,"endColumn":27},{"ruleId":"147","severity":1,"message":"148","line":120,"column":32,"nodeType":"149","messageId":"150","endLine":120,"endColumn":34},{"ruleId":"139","severity":1,"message":"159","line":150,"column":9,"nodeType":"141","messageId":"142","endLine":150,"endColumn":23},{"ruleId":"160","severity":1,"message":"161","line":168,"column":6,"nodeType":"162","endLine":168,"endColumn":12,"suggestions":"163"},{"ruleId":"164","severity":1,"message":"165","line":206,"column":15,"nodeType":"166","endLine":206,"endColumn":37},{"ruleId":"147","severity":1,"message":"148","line":216,"column":47,"nodeType":"149","messageId":"150","endLine":216,"endColumn":49},{"ruleId":"147","severity":1,"message":"148","line":218,"column":44,"nodeType":"149","messageId":"150","endLine":218,"endColumn":46},{"ruleId":"147","severity":1,"message":"148","line":358,"column":53,"nodeType":"149","messageId":"150","endLine":358,"endColumn":55},{"ruleId":"147","severity":1,"message":"148","line":363,"column":64,"nodeType":"149","messageId":"150","endLine":363,"endColumn":66},{"ruleId":"147","severity":1,"message":"167","line":509,"column":32,"nodeType":"149","messageId":"150","endLine":509,"endColumn":34},{"ruleId":"164","severity":1,"message":"165","line":514,"column":21,"nodeType":"166","endLine":514,"endColumn":24},{"ruleId":"164","severity":1,"message":"165","line":533,"column":21,"nodeType":"166","endLine":533,"endColumn":24},{"ruleId":"139","severity":1,"message":"168","line":4,"column":8,"nodeType":"141","messageId":"142","endLine":4,"endColumn":14},{"ruleId":"147","severity":1,"message":"148","line":42,"column":25,"nodeType":"149","messageId":"150","endLine":42,"endColumn":27},{"ruleId":"147","severity":1,"message":"148","line":44,"column":32,"nodeType":"149","messageId":"150","endLine":44,"endColumn":34},{"ruleId":"147","severity":1,"message":"167","line":17,"column":17,"nodeType":"149","messageId":"150","endLine":17,"endColumn":19},{"ruleId":"147","severity":1,"message":"148","line":77,"column":19,"nodeType":"149","messageId":"150","endLine":77,"endColumn":21},{"ruleId":"139","severity":1,"message":"169","line":16,"column":5,"nodeType":"141","messageId":"142","endLine":16,"endColumn":19},{"ruleId":"139","severity":1,"message":"170","line":17,"column":5,"nodeType":"141","messageId":"142","endLine":17,"endColumn":18},{"ruleId":"147","severity":1,"message":"148","line":106,"column":24,"nodeType":"149","messageId":"150","endLine":106,"endColumn":26},{"ruleId":"139","severity":1,"message":"171","line":113,"column":13,"nodeType":"141","messageId":"142","endLine":113,"endColumn":15},{"ruleId":"147","severity":1,"message":"148","line":124,"column":24,"nodeType":"149","messageId":"150","endLine":124,"endColumn":26},{"ruleId":"139","severity":1,"message":"171","line":129,"column":13,"nodeType":"141","messageId":"142","endLine":129,"endColumn":15},{"ruleId":"147","severity":1,"message":"148","line":140,"column":24,"nodeType":"149","messageId":"150","endLine":140,"endColumn":26},{"ruleId":"139","severity":1,"message":"171","line":145,"column":13,"nodeType":"141","messageId":"142","endLine":145,"endColumn":15},{"ruleId":"147","severity":1,"message":"148","line":156,"column":24,"nodeType":"149","messageId":"150","endLine":156,"endColumn":26},{"ruleId":"139","severity":1,"message":"171","line":161,"column":13,"nodeType":"141","messageId":"142","endLine":161,"endColumn":15},{"ruleId":"147","severity":1,"message":"148","line":172,"column":24,"nodeType":"149","messageId":"150","endLine":172,"endColumn":26},{"ruleId":"139","severity":1,"message":"171","line":180,"column":13,"nodeType":"141","messageId":"142","endLine":180,"endColumn":15},{"ruleId":"147","severity":1,"message":"148","line":204,"column":24,"nodeType":"149","messageId":"150","endLine":204,"endColumn":26},{"ruleId":"172","severity":1,"message":"173","line":219,"column":5,"nodeType":"174","messageId":"175","endLine":219,"endColumn":14},{"ruleId":"147","severity":1,"message":"148","line":225,"column":24,"nodeType":"149","messageId":"150","endLine":225,"endColumn":26},{"ruleId":"139","severity":1,"message":"171","line":230,"column":13,"nodeType":"141","messageId":"142","endLine":230,"endColumn":15},{"ruleId":"147","severity":1,"message":"148","line":241,"column":24,"nodeType":"149","messageId":"150","endLine":241,"endColumn":26},{"ruleId":"172","severity":1,"message":"173","line":253,"column":5,"nodeType":"174","messageId":"175","endLine":253,"endColumn":15},{"ruleId":"139","severity":1,"message":"145","line":13,"column":21,"nodeType":"141","messageId":"142","endLine":13,"endColumn":33},{"ruleId":"139","severity":1,"message":"144","line":20,"column":23,"nodeType":"141","messageId":"142","endLine":20,"endColumn":37},{"ruleId":"139","severity":1,"message":"154","line":71,"column":10,"nodeType":"141","messageId":"142","endLine":71,"endColumn":18},{"ruleId":"139","severity":1,"message":"176","line":71,"column":20,"nodeType":"141","messageId":"142","endLine":71,"endColumn":31},{"ruleId":"139","severity":1,"message":"177","line":72,"column":21,"nodeType":"141","messageId":"142","endLine":72,"endColumn":33},{"ruleId":"139","severity":1,"message":"178","line":74,"column":10,"nodeType":"141","messageId":"142","endLine":74,"endColumn":14},{"ruleId":"139","severity":1,"message":"179","line":74,"column":16,"nodeType":"141","messageId":"142","endLine":74,"endColumn":23},{"ruleId":"139","severity":1,"message":"155","line":75,"column":16,"nodeType":"141","messageId":"142","endLine":75,"endColumn":23},{"ruleId":"139","severity":1,"message":"156","line":81,"column":10,"nodeType":"141","messageId":"142","endLine":81,"endColumn":16},{"ruleId":"139","severity":1,"message":"157","line":81,"column":18,"nodeType":"141","messageId":"142","endLine":81,"endColumn":27},{"ruleId":"139","severity":1,"message":"180","line":87,"column":10,"nodeType":"141","messageId":"142","endLine":87,"endColumn":19},{"ruleId":"139","severity":1,"message":"181","line":88,"column":25,"nodeType":"141","messageId":"142","endLine":88,"endColumn":41},{"ruleId":"160","severity":1,"message":"161","line":93,"column":6,"nodeType":"162","endLine":93,"endColumn":8,"suggestions":"182"},{"ruleId":"147","severity":1,"message":"148","line":152,"column":51,"nodeType":"149","messageId":"150","endLine":152,"endColumn":53},{"ruleId":"147","severity":1,"message":"148","line":157,"column":62,"nodeType":"149","messageId":"150","endLine":157,"endColumn":64},{"ruleId":"164","severity":1,"message":"165","line":223,"column":13,"nodeType":"166","endLine":223,"endColumn":35},{"ruleId":"147","severity":1,"message":"148","line":233,"column":45,"nodeType":"149","messageId":"150","endLine":233,"endColumn":47},{"ruleId":"147","severity":1,"message":"148","line":235,"column":42,"nodeType":"149","messageId":"150","endLine":235,"endColumn":44},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"no-unused-vars","'setTokenId' is assigned a value but never used.","Identifier","unusedVar","'setIpfs' is assigned a value but never used.","'setTraitsArray' is assigned a value but never used.","'setTypeArray' is assigned a value but never used.","'mintNFT' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Card1' is defined but never used.","'Card2' is defined but never used.","'createNFT' is defined but never used.","'tokenIds' is assigned a value but never used.","'setSize' is assigned a value but never used.","'traits' is assigned a value but never used.","'setTraits' is assigned a value but never used.","'buyNFT' is assigned a value but never used.","'updateTokenIds' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadNfts'. Either include it or remove the dependency array.","ArrayExpression",["185"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","Expected '!==' and instead saw '!='.","'NFTimg' is defined but never used.","'ghosp_contract' is assigned a value but never used.","'busd_contract' is assigned a value but never used.","'tx' is assigned a value but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'setTokenIds' is assigned a value but never used.","'setSaleItems' is assigned a value but never used.","'page' is assigned a value but never used.","'setPage' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setWalletAddress' is assigned a value but never used.",["186"],"no-global-assign","no-unsafe-negation",{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},"Update the dependencies array to be: [loadNfts, page]",{"range":"191","text":"192"},"Update the dependencies array to be: [loadNfts]",{"range":"193","text":"194"},[4690,4696],"[loadNfts, page]",[2763,2765],"[loadNfts]"]
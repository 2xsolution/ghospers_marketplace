[{"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\index.js":"1","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\App.js":"2","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\reportWebVitals.js":"3","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\mint\\Mint.js":"4","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\Contact\\Contact.js":"5","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\ConnectWallet\\ConnectWallet.js":"6","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\Home\\Home.js":"7","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\NFTDetail\\NFTdetail.js":"8","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\components\\Header.js":"9","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\components\\MultiRangeInput.js":"10","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\core\\web3.js":"11","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\utils\\Utils.js":"12","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\components\\loader\\Loader.js":"13","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\profile\\Profile.js":"14","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\mint\\IPFSUtils.js":"15","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\profile\\updateModal\\UpdateModal.js":"16","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\components\\accordian\\Accordian.js":"17","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\components\\accordian\\AccordianData.js":"18","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\mint\\addPropertyModal.js\\AddPropertyModal.js":"19"},{"size":603,"mtime":1648115103756,"results":"20","hashOfConfig":"21"},{"size":1283,"mtime":1648298273159,"results":"22","hashOfConfig":"21"},{"size":375,"mtime":1648115103768,"results":"23","hashOfConfig":"21"},{"size":10139,"mtime":1648543299118,"results":"24","hashOfConfig":"21"},{"size":1378,"mtime":1648115103760,"results":"25","hashOfConfig":"21"},{"size":2200,"mtime":1648115103758,"results":"26","hashOfConfig":"21"},{"size":17590,"mtime":1648543005003,"results":"27","hashOfConfig":"21"},{"size":6252,"mtime":1648543104739,"results":"28","hashOfConfig":"21"},{"size":2176,"mtime":1648210876484,"results":"29","hashOfConfig":"21"},{"size":2694,"mtime":1648115103748,"results":"30","hashOfConfig":"21"},{"size":7516,"mtime":1648318533953,"results":"31","hashOfConfig":"21"},{"size":177,"mtime":1648542871095,"results":"32","hashOfConfig":"21"},{"size":238,"mtime":1648133365107,"results":"33","hashOfConfig":"21"},{"size":12226,"mtime":1648543018328,"results":"34","hashOfConfig":"21"},{"size":2034,"mtime":1648210876491,"results":"35","hashOfConfig":"21"},{"size":3632,"mtime":1648304194208,"results":"36","hashOfConfig":"21"},{"size":3477,"mtime":1648538741338,"results":"37","hashOfConfig":"21"},{"size":2113,"mtime":1648453158027,"results":"38","hashOfConfig":"21"},{"size":3046,"mtime":1648532697312,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"17edddb",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\index.js",[],["84","85"],"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\App.js",[],"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\reportWebVitals.js",[],"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\mint\\Mint.js",["86","87","88","89","90","91","92","93","94"],"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\Contact\\Contact.js",[],"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\ConnectWallet\\ConnectWallet.js",[],"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\Home\\Home.js",["95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116"],"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\NFTDetail\\NFTdetail.js",["117","118","119","120"],"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\components\\Header.js",["121","122"],"import React, { useEffect, useState } from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport logo from \"../assets/img/logo.6eaa2fdb.png\";\r\nimport \"./header.css\";\r\n\r\nimport {\r\n\tloadWeb3,\r\n\tconnectWallet,\r\n\tgetCurrentWallet,\r\n} from \"../core/web3\";\r\n\r\nconst Header = ({ setShowModal }) => {\r\n\tconst [navActive, isnavActive] = useState(false);\r\n\tconst [curWallet, setCurWallet] = useState(\"\");\r\n\r\n\tconst onConnectWallet = async () => {\r\n\t\tif (curWallet != \"\") {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tawait loadWeb3();\r\n\t\tlet res = await connectWallet();\r\n\t\tsetCurWallet(res.address);\r\n\t}\r\n\r\n\tconst openModal = (e) => {\r\n\t\tconsole.log(\"hwllo\");\r\n\t\te.preventDefault();\r\n\t\t// setShowModal((prev) => !prev);\r\n\r\n\t\tonConnectWallet();\r\n\t};\r\n\r\n\tconst getWallet = async () => {\r\n\t\tlet res = await getCurrentWallet();\r\n\t\tif (res.success) {\r\n\t\t\tsetCurWallet(res.account);\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetWallet();\r\n\t});\r\n\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t<div className=\"logo\">\r\n\t\t\t\t\t\t<img src={logo} alt=\"logo\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<div className={navActive ? \"links nav-active\" : \"links\"}>\r\n\t\t\t\t\t<ul className=\"navigations\">\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Link to=\"https://ghospers.com/\" activeclassname=\"active\">\r\n\t\t\t\t\t\t\t\tHome\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<NavLink to=\"/\" activeclassname=\"active\">\r\n\t\t\t\t\t\t\t\tOfficial\r\n\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Link to=\"https://staking.ghospers.com/\" activeclassname=\"active\">\r\n\t\t\t\t\t\t\t\tStaking\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t{/* <li>\r\n\t\t\t\t\t\t\t<NavLink to=\"/contact\" activeclassname=\"active\">\r\n\t\t\t\t\t\t\t\tContact Us\r\n\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t</li> */}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<div className=\"nav-btn\">\r\n\t\t\t\t\t\t<a href=\"/\" onClick={openModal}>\r\n\t\t\t\t\t\t\t{curWallet == \"\" ? \"Connect Wallet\" : curWallet.slice(0, 5) + \"...\" + curWallet.slice(-4)}\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<a href=\"/\">Login</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"hamburger\" onClick={() => isnavActive(!navActive)}>\r\n\t\t\t\t\t<div className=\"line1\"></div>\r\n\t\t\t\t\t<div className=\"line2\"></div>\r\n\t\t\t\t\t<div className=\"line3\"></div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\components\\MultiRangeInput.js",[],"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\core\\web3.js",["123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140"],"\r\nimport Web3 from 'web3';\r\n\r\nconst busdAbi = require('./abi/busd.json');\r\nconst ghospAbi = require('./abi/ghosp.json');\r\nconst marketAbi = require('./abi/marketplace.json');\r\nconst minterAbi = require('./abi/minter.json');\r\n\r\n\r\nconst MINTER_ADDRESS = \"0xfA9bB2B3119A7b9d40235F9e92052AB6Fd6DaD12\"\r\nconst MARKETPLACE_ADDRESS = \"0xC4d193F224Ec31c7BDc959D2D1b9Eb9d16E97A78\"\r\nconst GHOSP_ADDRESS = \"0x91c70ba82a8ed676c5a09ce1cd94cc18923e8371\"\r\nconst BUSD_ADDRESS = \"0x8301f2213c0eed49a7e28ae4c3e91722919b8b47\"   // Faucet Token\r\nlet market_contract = null;\r\nlet minter_contract = null;\r\nlet ghosp_contract = null;\r\nlet busd_contract = null;\r\n\r\n\r\nexport const loadWeb3 = async () => {\r\n    if (window.ethereum) {\r\n        window.web3 = new Web3(window.ethereum);\r\n        window.web3.eth.handleRevert = true;\r\n    } else if (window.web3) {\r\n        window.web3 = new Web3(window.web3.currentProvider);\r\n        window.web3.eth.handleRevert = true\r\n    } else {\r\n        window.alert(\r\n            \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n        );\r\n        return;\r\n    }\r\n\r\n    minter_contract = new window.web3.eth.Contract(minterAbi, MINTER_ADDRESS);\r\n    market_contract = new window.web3.eth.Contract(marketAbi, MARKETPLACE_ADDRESS);\r\n    ghosp_contract = new window.web3.eth.Contract(ghospAbi, GHOSP_ADDRESS);\r\n    busd_contract = new window.web3.eth.Contract(busdAbi, BUSD_ADDRESS);\r\n\r\n    window.ethereum.on('chainChanged', function (chainId) {\r\n\r\n    });\r\n};\r\n\r\n\r\nexport const connectWallet = async () => {\r\n    if (window.ethereum) {\r\n        try {\r\n            const addressArray = await window.ethereum.request({\r\n                method: \"eth_requestAccounts\",\r\n            });\r\n            const obj = {\r\n                status: \"Metamask successfuly connected.\",\r\n                address: addressArray[0],\r\n            };\r\n            return obj;\r\n        } catch (err) {\r\n            return {\r\n                address: \"\",\r\n                status: \"Something went wrong: \" + err.message,\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        return {\r\n            address: \"\",\r\n            status: (\r\n                <span>\r\n                    <p>\r\n                        {\" \"}\r\n                        🦊{\" \"}\r\n                        <a target=\"_blank\" rel=\"noreferrer\" href={`https://metamask.io/download.html`}>\r\n                            You must install Metamask, a virtual BSC wallet, in your\r\n                            browser.\r\n                        </a>\r\n                    </p>\r\n                </span>\r\n            ),\r\n        };\r\n    }\r\n};\r\n\r\n\r\nexport const getCurrentWallet = async () => {\r\n    const web3 = window.web3;\r\n    try {\r\n        let accounts = await web3.eth.getAccounts();\r\n        let accountBalance = await web3.eth.getBalance(accounts[0]);\r\n        accountBalance = web3.utils.fromWei(accountBalance);\r\n        return {\r\n            success: true,\r\n            account: accounts[0],\r\n            balance: accountBalance\r\n        }\r\n    } catch (error) {\r\n        return {\r\n            success: false,\r\n            result: \"Something went wrong: \" + error.message\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const buyNFTWithBNB = async (tokenID, amount) => {\r\n\r\n    const wallet = await getCurrentWallet();\r\n    if (wallet.success == false) {\r\n        return false;\r\n    }\r\n\r\n    try {\r\n        let bnAmount = window.web3.utils.toWei(\"\" + amount);\r\n        console.log('ssssssssssss', tokenID, bnAmount);\r\n        let tx = await market_contract.methods.buyNFTWithBNB(tokenID, wallet.account).send({ from: wallet.account, value: bnAmount });\r\n    } catch (error) {\r\n        console.log('buyNFTWithBNB error', error);\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport const buyNFTWithGHSP = async (tokenID) => {\r\n    const wallet = await getCurrentWallet();\r\n    if (wallet.success == false) {\r\n        return false;\r\n    }\r\n\r\n    try {\r\n        let tx = await market_contract.methods.buyNFTWithGHSP(tokenID, wallet.account).send({ from: wallet.account });\r\n    } catch (error) {\r\n        console.log('buyNFTWithGHSP error', error);\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport const buyNFTWithBUSD = async (tokenID) => {\r\n    const wallet = await getCurrentWallet();\r\n    if (wallet.success == false) {\r\n        return false;\r\n    }\r\n\r\n    try {\r\n        let tx = await market_contract.methods.buyNFTWithBUSD(tokenID, wallet.account).send({ from: wallet.account });\r\n    } catch (error) {\r\n        console.log('buyNFTWithBUSD error', error);\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport const removeTokenFromSale = async (tokenID) => {\r\n    const wallet = await getCurrentWallet();\r\n    if (wallet.success == false) {\r\n        return false;\r\n    }\r\n\r\n    try {\r\n        let tx = await market_contract.methods.removeTokenFromSale(tokenID, wallet.account).send({ from: wallet.account });\r\n    } catch (error) {\r\n        console.log('removeTokenFromSale error', error);\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport const putTokenOnSale = async (tokenID, price, saleTokenType) => {\r\n    const wallet = await getCurrentWallet();\r\n    if (wallet.success == false) {\r\n        return false;\r\n    }\r\n\r\n    try {\r\n        await minter_contract.methods.setApprovalForAll(MARKETPLACE_ADDRESS, true).send({ from: wallet.account });\r\n    } catch (error) {\r\n        console.log('setApprovalForAll error', error);\r\n        return false;\r\n    }\r\n\r\n    try {\r\n        let bnPrice = window.web3.utils.toWei(\"\" + price);\r\n        let tx = await market_contract.methods.putTokenOnSale(tokenID, bnPrice, saleTokenType).send({ from: wallet.account });\r\n    } catch (error) {\r\n        console.log('putTokenOnSale error', error);\r\n        return false;\r\n    }\r\n\r\n    console.log('putTokenOnSale ok');\r\n\r\n    return true;\r\n}\r\n\r\nexport const getSaleItems = async (tokenIds) => {\r\n\r\n    let saleItems = {};\r\n    for (let i = 0; i < tokenIds.length; i++) {\r\n        let item = await market_contract.methods.saleItems(tokenIds[i]).call();\r\n        saleItems[tokenIds[i]] = item;\r\n    }\r\n\r\n    console.log(\"Sale Items : \", saleItems);\r\n\r\n    return saleItems;\r\n}\r\n\r\nexport const createNFT = async (tokenURI) => {\r\n    const wallet = await getCurrentWallet();\r\n    if (wallet.success == false) {\r\n        return null;\r\n    }\r\n\r\n    try {\r\n        let tokenID = 0;\r\n        let tx = await minter_contract.methods.createNFT(tokenURI).send({ from: wallet.account });\r\n        tokenID = tx.events.Transfer.returnValues.tokenId;\r\n        return {tokenId: tokenID, wallet: wallet.account};\r\n    } catch (error) {\r\n        console.log('createNFT error', error);\r\n        return null;\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n\r\nexport const getCreator = async (tokenID) => {\r\n    const wallet = await getCurrentWallet();\r\n    if (wallet.success == false) {\r\n        return false;\r\n    }\r\n\r\n    try {\r\n        let tx = await minter_contract.methods.getCreator(tokenID).send({ from: wallet.account });\r\n    } catch (error) {\r\n        console.log('getCreator error', error);\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport const getTokenIds = async () => {\r\n    const wallet = await getCurrentWallet();\r\n    if (wallet.success == false) {\r\n        return [];\r\n    }\r\n\r\n    try {\r\n        let tokenIds = await minter_contract.methods.getTokenIds(wallet.account).call();\r\n        return tokenIds;\r\n    } catch (error) {\r\n        console.log('getTokenIds error', error);\r\n        return [];\r\n    }\r\n\r\n    return [];\r\n}","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\utils\\Utils.js",[],"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\components\\loader\\Loader.js",[],"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\profile\\Profile.js",["141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157"],"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\mint\\IPFSUtils.js",["158"],"import { create, urlSource } from 'ipfs-http-client'\r\nimport axios from 'axios';\r\n//import IPFS from 'nano-ipfs-store'\r\nlet all = require('it-all')\r\n\r\nlet client = create('https://ipfs.infura.io:5001/api/v0');\r\n\r\nconst uploadFileToIPFS = async (files) => {\r\n    console.log(\"enter uploadFileToIPFS\", files);\r\n    let lists = [];\r\n    try {\r\n        for (let i = 0; i < files.length; i++) {\r\n            const added = await client.add(files[i])\r\n            const url = `https://ipfs.infura.io/ipfs/${added.path}`\r\n            console.log(\"[GD], FileName = \", files[i].name, \", Hash: \", added.path)\r\n            lists.push(url)\r\n        }\r\n        return lists\r\n    } catch (err) {\r\n        console.log(\"Error uploading file: \", err)\r\n        return []\r\n    }\r\n}\r\n\r\nconst uploadFolderToIPFS = async (files) => {\r\n    try {\r\n        /*let fileObjectsArray = Array.from(files).map((file) => {\r\n            return {\r\n                path: file.name,\r\n                content: file\r\n            }\r\n        })*/\r\n        const results = await all(\r\n            client.addAll(files, { wrapWithDirectory: true })\r\n        )\r\n        const length = results.length\r\n        const filesHash = results[length - 1].cid._baseCache.get('z')\r\n        const filesUrl = 'https://ipfs.infura.io/ipfs/' + filesHash\r\n        return filesUrl\r\n    } catch (err) {\r\n        console.log(\"[GD], Error uploading file: \", err)\r\n        return \"\"\r\n    }\r\n}\r\n\r\nconst uploadTextToIPFS = async (data) => {\r\n    try {\r\n        let doc = JSON.stringify(data)\r\n        const added = await client.add(doc)\r\n        const filesUrl = 'https://ipfs.infura.io/ipfs/' + added.path;\r\n        return filesUrl\r\n    } catch (err) {\r\n        //console.log(\"Error: \", err)\r\n        return null\r\n    }\r\n}\r\n\r\nconst loadFromIPFS = async (url) => {\r\n    let res = await axios.get(`https://ipfs.infura.io/ipfs/${url}`)\r\n    return res;\r\n}\r\n\r\n\r\nconst IPFSUtils = {\r\n    uploadFileToIPFS,\r\n    uploadFolderToIPFS,\r\n    uploadTextToIPFS,\r\n    loadFromIPFS\r\n}\r\n\r\n\r\nexport default IPFSUtils;","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\profile\\updateModal\\UpdateModal.js",["159","160","161","162"],"import axios from \"axios\";\r\nimport React, { Component, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Modal from \"react-modal\";\r\nimport { BASEURL } from \"../../../utils/Utils\";\r\nimport \"./updateModal.css\";\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n};\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nfunction UpdateModal({ setShowModal, showModal }) {\r\n  function closeModal() {\r\n    setShowModal(false);\r\n  }\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [introduction, setIntroduction] = useState(\"\");\r\n  const [facebook, setFacebook] = useState(\"\");\r\n  const [instagram, setInstagram] = useState(\"\");\r\n  const [walletAddress, setWalletAddress] = useState(\"xyz\");\r\n\r\n  const validateFields = () => {\r\n    if (!name || !introduction || !facebook || !instagram || !walletAddress)\r\n      return false;\r\n    return true;\r\n  };\r\n\r\n  const updateProfile = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateFields()) return;\r\n\r\n    axios\r\n      .put(BASEURL + \"/user/update\", {\r\n        name,\r\n        introduction,\r\n        facebook,\r\n        instagram,\r\n        walletAddress,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        setFacebook(\"\");\r\n        setInstagram(\"\");\r\n        setName(\"\");\r\n        setIntroduction(\"\");\r\n        closeModal();\r\n      })\r\n      .catch((e) => console.log(e));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        isOpen={showModal}\r\n        // onAfterOpen={afterOpenModal}\r\n        onRequestClose={closeModal}\r\n        // style={customStyles}\r\n        contentLabel=\"Example Modal\"\r\n      >\r\n        <div className=\"update-modal-content\">\r\n          <h2>Update Profile</h2>\r\n          <div className=\"inputs-div\">\r\n            <div>\r\n              <label htmlFor=\"\">Name</label>\r\n              <input\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                type=\"text\"\r\n                className=\"mint-input\"\r\n                placeholder=\"John Doe\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"inputs-div\">\r\n            <div>\r\n              <label htmlFor=\"\">Introduction</label>\r\n              <input\r\n                value={introduction}\r\n                onChange={(e) => setIntroduction(e.target.value)}\r\n                type=\"text\"\r\n                className=\"mint-input\"\r\n                placeholder=\"Introduction\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"inputs-div\">\r\n            <div>\r\n              <label htmlFor=\"\">Facebook Link</label>\r\n              <input\r\n                value={facebook}\r\n                onChange={(e) => setFacebook(e.target.value)}\r\n                type=\"text\"\r\n                className=\"mint-input\"\r\n                placeholder=\"facebook.com/username\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"inputs-div\">\r\n            <div>\r\n              <label htmlFor=\"\">Instagram Link</label>\r\n              <input\r\n                value={instagram}\r\n                onChange={(e) => setInstagram(e.target.value)}\r\n                type=\"text\"\r\n                className=\"mint-input\"\r\n                placeholder=\"instagram.com/username\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <button disabled={!validateFields()} onClick={updateProfile}>\r\n            Update Profile\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateModal;\r\n","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\components\\accordian\\Accordian.js",["163","164","165","166"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./accordian.css\";\r\nfunction Accordian({ title, content, setSingleSelectedProperty }) {\r\n  const [contentArray, setContentArray] = useState(content);\r\n  const [searchInput, setsearchInput] = useState(\"\");\r\n  const [resultsArray, setResultsArray] = useState(contentArray);\r\n  const [showContent, setShowContent] = useState(false);\r\n  const [selectedProperties, setSelectedProperties] = useState({\r\n    type: \"\",\r\n    values: [],\r\n  });\r\n\r\n  const onChange = (e) => {\r\n    setsearchInput(e.target.value);\r\n    if (e.target.value == \"\") {\r\n      setResultsArray(contentArray);\r\n    } else {\r\n      var resultArray = contentArray.filter((text) =>\r\n        text.includes(searchInput.toLowerCase())\r\n      );\r\n      setResultsArray(resultArray);\r\n    }\r\n  };\r\n\r\n  const alreadyPresent = (data) => {\r\n    return selectedProperties && selectedProperties.values.includes(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(selectedProperties);\r\n    setSingleSelectedProperty(selectedProperties);\r\n  }, [selectedProperties]);\r\n\r\n  return (\r\n    <div className=\"accordian-div\">\r\n      <div className=\"accordian-header\">\r\n        <h4>{title}</h4>\r\n        {showContent ? (\r\n          <i\r\n            class=\"fa-solid fa-caret-up\"\r\n            onClick={() => setShowContent(false)}\r\n          ></i>\r\n        ) : (\r\n          <i\r\n            class=\"fa-solid fa-caret-down\"\r\n            onClick={() => setShowContent(true)}\r\n          ></i>\r\n        )}\r\n      </div>\r\n      <div className=\"accordian-content\">\r\n        {showContent && (\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"select-search-input\"\r\n              placeholder=\"Search\"\r\n              value={searchInput}\r\n              onChange={onChange}\r\n            />\r\n            <ul>\r\n              <div className=\"checkbox\">\r\n                {resultsArray &&\r\n                  resultsArray.map((data, index) => {\r\n                    return (\r\n                      <label className=\"checkbox-wrap\" key={index}>\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={\r\n                            selectedProperties &&\r\n                            selectedProperties.values.includes(data)\r\n                          }\r\n                          onChange={() => {\r\n                            if (alreadyPresent(data)) {\r\n                              var remainingValues =\r\n                                selectedProperties.values.filter(\r\n                                  (x) => x != data\r\n                                );\r\n                              setSelectedProperties({\r\n                                type: title,\r\n                                values: remainingValues,\r\n                              });\r\n                            } else {\r\n                              setSelectedProperties((prev) => ({\r\n                                type: title,\r\n                                values: [...prev.values, data],\r\n                              }));\r\n                            }\r\n                          }}\r\n                        />\r\n                        <span className=\"checkmark\"></span>\r\n                        {data}\r\n                      </label>\r\n                    );\r\n                  })}\r\n              </div>\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Accordian;\r\n","E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\components\\accordian\\AccordianData.js",[],"E:\\Prince\\freelancing\\yogesh\\react\\ghospers\\ghospers_marketplace\\src\\pages\\mint\\addPropertyModal.js\\AddPropertyModal.js",["167","168","169"],{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":12,"column":3,"nodeType":"176","messageId":"177","endLine":12,"endColumn":19},{"ruleId":"174","severity":1,"message":"178","line":26,"column":10,"nodeType":"176","messageId":"177","endLine":26,"endColumn":17},{"ruleId":"174","severity":1,"message":"179","line":26,"column":19,"nodeType":"176","messageId":"177","endLine":26,"endColumn":29},{"ruleId":"174","severity":1,"message":"180","line":29,"column":16,"nodeType":"176","messageId":"177","endLine":29,"endColumn":23},{"ruleId":"174","severity":1,"message":"181","line":37,"column":23,"nodeType":"176","messageId":"177","endLine":37,"endColumn":37},{"ruleId":"174","severity":1,"message":"182","line":43,"column":21,"nodeType":"176","messageId":"177","endLine":43,"endColumn":33},{"ruleId":"174","severity":1,"message":"183","line":166,"column":9,"nodeType":"176","messageId":"177","endLine":166,"endColumn":16},{"ruleId":"184","severity":1,"message":"185","line":255,"column":45,"nodeType":"186","messageId":"187","endLine":255,"endColumn":47},{"ruleId":"184","severity":1,"message":"185","line":257,"column":42,"nodeType":"186","messageId":"187","endLine":257,"endColumn":44},{"ruleId":"174","severity":1,"message":"188","line":4,"column":8,"nodeType":"176","messageId":"177","endLine":4,"endColumn":13},{"ruleId":"174","severity":1,"message":"189","line":5,"column":8,"nodeType":"176","messageId":"177","endLine":5,"endColumn":13},{"ruleId":"174","severity":1,"message":"190","line":11,"column":10,"nodeType":"176","messageId":"177","endLine":11,"endColumn":14},{"ruleId":"174","severity":1,"message":"191","line":15,"column":3,"nodeType":"176","messageId":"177","endLine":15,"endColumn":17},{"ruleId":"174","severity":1,"message":"182","line":33,"column":21,"nodeType":"176","messageId":"177","endLine":33,"endColumn":33},{"ruleId":"174","severity":1,"message":"181","line":40,"column":23,"nodeType":"176","messageId":"177","endLine":40,"endColumn":37},{"ruleId":"174","severity":1,"message":"192","line":89,"column":10,"nodeType":"176","messageId":"177","endLine":89,"endColumn":26},{"ruleId":"174","severity":1,"message":"193","line":89,"column":28,"nodeType":"176","messageId":"177","endLine":89,"endColumn":47},{"ruleId":"174","severity":1,"message":"194","line":90,"column":10,"nodeType":"176","messageId":"177","endLine":90,"endColumn":18},{"ruleId":"174","severity":1,"message":"195","line":94,"column":16,"nodeType":"176","messageId":"177","endLine":94,"endColumn":23},{"ruleId":"174","severity":1,"message":"196","line":100,"column":10,"nodeType":"176","messageId":"177","endLine":100,"endColumn":16},{"ruleId":"174","severity":1,"message":"197","line":100,"column":18,"nodeType":"176","messageId":"177","endLine":100,"endColumn":27},{"ruleId":"198","severity":1,"message":"199","line":136,"column":6,"nodeType":"200","endLine":136,"endColumn":30,"suggestions":"201"},{"ruleId":"174","severity":1,"message":"202","line":138,"column":9,"nodeType":"176","messageId":"177","endLine":138,"endColumn":23},{"ruleId":"198","severity":1,"message":"203","line":177,"column":6,"nodeType":"200","endLine":177,"endColumn":12,"suggestions":"204"},{"ruleId":"205","severity":1,"message":"206","line":211,"column":15,"nodeType":"207","endLine":211,"endColumn":37},{"ruleId":"184","severity":1,"message":"185","line":221,"column":47,"nodeType":"186","messageId":"187","endLine":221,"endColumn":49},{"ruleId":"184","severity":1,"message":"185","line":223,"column":44,"nodeType":"186","messageId":"187","endLine":223,"endColumn":46},{"ruleId":"184","severity":1,"message":"185","line":366,"column":64,"nodeType":"186","messageId":"187","endLine":366,"endColumn":66},{"ruleId":"184","severity":1,"message":"208","line":524,"column":32,"nodeType":"186","messageId":"187","endLine":524,"endColumn":34},{"ruleId":"205","severity":1,"message":"206","line":529,"column":21,"nodeType":"207","endLine":529,"endColumn":24},{"ruleId":"205","severity":1,"message":"206","line":548,"column":21,"nodeType":"207","endLine":548,"endColumn":24},{"ruleId":"174","severity":1,"message":"209","line":4,"column":8,"nodeType":"176","messageId":"177","endLine":4,"endColumn":14},{"ruleId":"184","severity":1,"message":"185","line":57,"column":25,"nodeType":"186","messageId":"187","endLine":57,"endColumn":27},{"ruleId":"184","severity":1,"message":"185","line":59,"column":32,"nodeType":"186","messageId":"187","endLine":59,"endColumn":34},{"ruleId":"184","severity":1,"message":"185","line":177,"column":43,"nodeType":"186","messageId":"187","endLine":177,"endColumn":45},{"ruleId":"184","severity":1,"message":"208","line":17,"column":17,"nodeType":"186","messageId":"187","endLine":17,"endColumn":19},{"ruleId":"184","severity":1,"message":"185","line":77,"column":19,"nodeType":"186","messageId":"187","endLine":77,"endColumn":21},{"ruleId":"174","severity":1,"message":"210","line":16,"column":5,"nodeType":"176","messageId":"177","endLine":16,"endColumn":19},{"ruleId":"174","severity":1,"message":"211","line":17,"column":5,"nodeType":"176","messageId":"177","endLine":17,"endColumn":18},{"ruleId":"184","severity":1,"message":"185","line":106,"column":24,"nodeType":"186","messageId":"187","endLine":106,"endColumn":26},{"ruleId":"174","severity":1,"message":"212","line":113,"column":13,"nodeType":"176","messageId":"177","endLine":113,"endColumn":15},{"ruleId":"184","severity":1,"message":"185","line":124,"column":24,"nodeType":"186","messageId":"187","endLine":124,"endColumn":26},{"ruleId":"174","severity":1,"message":"212","line":129,"column":13,"nodeType":"176","messageId":"177","endLine":129,"endColumn":15},{"ruleId":"184","severity":1,"message":"185","line":140,"column":24,"nodeType":"186","messageId":"187","endLine":140,"endColumn":26},{"ruleId":"174","severity":1,"message":"212","line":145,"column":13,"nodeType":"176","messageId":"177","endLine":145,"endColumn":15},{"ruleId":"184","severity":1,"message":"185","line":156,"column":24,"nodeType":"186","messageId":"187","endLine":156,"endColumn":26},{"ruleId":"174","severity":1,"message":"212","line":161,"column":13,"nodeType":"176","messageId":"177","endLine":161,"endColumn":15},{"ruleId":"184","severity":1,"message":"185","line":172,"column":24,"nodeType":"186","messageId":"187","endLine":172,"endColumn":26},{"ruleId":"174","severity":1,"message":"212","line":185,"column":13,"nodeType":"176","messageId":"177","endLine":185,"endColumn":15},{"ruleId":"184","severity":1,"message":"185","line":211,"column":24,"nodeType":"186","messageId":"187","endLine":211,"endColumn":26},{"ruleId":"213","severity":1,"message":"214","line":225,"column":5,"nodeType":"215","messageId":"216","endLine":225,"endColumn":17},{"ruleId":"184","severity":1,"message":"185","line":231,"column":24,"nodeType":"186","messageId":"187","endLine":231,"endColumn":26},{"ruleId":"174","severity":1,"message":"212","line":236,"column":13,"nodeType":"176","messageId":"177","endLine":236,"endColumn":15},{"ruleId":"184","severity":1,"message":"185","line":247,"column":24,"nodeType":"186","messageId":"187","endLine":247,"endColumn":26},{"ruleId":"213","severity":1,"message":"214","line":259,"column":5,"nodeType":"215","messageId":"216","endLine":259,"endColumn":15},{"ruleId":"174","severity":1,"message":"182","line":15,"column":21,"nodeType":"176","messageId":"177","endLine":15,"endColumn":33},{"ruleId":"174","severity":1,"message":"181","line":22,"column":23,"nodeType":"176","messageId":"177","endLine":22,"endColumn":37},{"ruleId":"174","severity":1,"message":"194","line":76,"column":10,"nodeType":"176","messageId":"177","endLine":76,"endColumn":18},{"ruleId":"174","severity":1,"message":"217","line":76,"column":20,"nodeType":"176","messageId":"177","endLine":76,"endColumn":31},{"ruleId":"174","severity":1,"message":"218","line":77,"column":21,"nodeType":"176","messageId":"177","endLine":77,"endColumn":33},{"ruleId":"174","severity":1,"message":"219","line":79,"column":10,"nodeType":"176","messageId":"177","endLine":79,"endColumn":14},{"ruleId":"174","severity":1,"message":"220","line":79,"column":16,"nodeType":"176","messageId":"177","endLine":79,"endColumn":23},{"ruleId":"174","severity":1,"message":"195","line":80,"column":16,"nodeType":"176","messageId":"177","endLine":80,"endColumn":23},{"ruleId":"174","severity":1,"message":"196","line":86,"column":10,"nodeType":"176","messageId":"177","endLine":86,"endColumn":16},{"ruleId":"174","severity":1,"message":"197","line":86,"column":18,"nodeType":"176","messageId":"177","endLine":86,"endColumn":27},{"ruleId":"174","severity":1,"message":"221","line":93,"column":25,"nodeType":"176","messageId":"177","endLine":93,"endColumn":41},{"ruleId":"198","severity":1,"message":"203","line":98,"column":6,"nodeType":"200","endLine":98,"endColumn":8,"suggestions":"222"},{"ruleId":"184","severity":1,"message":"185","line":175,"column":51,"nodeType":"186","messageId":"187","endLine":175,"endColumn":53},{"ruleId":"184","severity":1,"message":"185","line":180,"column":62,"nodeType":"186","messageId":"187","endLine":180,"endColumn":64},{"ruleId":"205","severity":1,"message":"206","line":251,"column":13,"nodeType":"207","endLine":251,"endColumn":35},{"ruleId":"184","severity":1,"message":"185","line":261,"column":45,"nodeType":"186","messageId":"187","endLine":261,"endColumn":47},{"ruleId":"184","severity":1,"message":"185","line":263,"column":42,"nodeType":"186","messageId":"187","endLine":263,"endColumn":44},{"ruleId":"174","severity":1,"message":"223","line":1,"column":18,"nodeType":"176","messageId":"177","endLine":1,"endColumn":27},{"ruleId":"174","severity":1,"message":"224","line":2,"column":17,"nodeType":"176","messageId":"177","endLine":2,"endColumn":26},{"ruleId":"174","severity":1,"message":"225","line":3,"column":8,"nodeType":"176","messageId":"177","endLine":3,"endColumn":16},{"ruleId":"174","severity":1,"message":"226","line":8,"column":7,"nodeType":"176","messageId":"177","endLine":8,"endColumn":19},{"ruleId":"174","severity":1,"message":"221","line":30,"column":25,"nodeType":"176","messageId":"177","endLine":30,"endColumn":41},{"ruleId":"174","severity":1,"message":"227","line":4,"column":24,"nodeType":"176","messageId":"177","endLine":4,"endColumn":39},{"ruleId":"184","severity":1,"message":"185","line":15,"column":24,"nodeType":"186","messageId":"187","endLine":15,"endColumn":26},{"ruleId":"198","severity":1,"message":"228","line":32,"column":6,"nodeType":"200","endLine":32,"endColumn":26,"suggestions":"229"},{"ruleId":"184","severity":1,"message":"208","line":76,"column":44,"nodeType":"186","messageId":"187","endLine":76,"endColumn":46},{"ruleId":"174","severity":1,"message":"224","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"174","severity":1,"message":"230","line":3,"column":10,"nodeType":"176","messageId":"177","endLine":3,"endColumn":17},{"ruleId":"184","severity":1,"message":"208","line":30,"column":21,"nodeType":"186","messageId":"187","endLine":30,"endColumn":23},"no-native-reassign",["231"],"no-negated-in-lhs",["232"],"no-unused-vars","'getCurrentWallet' is defined but never used.","Identifier","unusedVar","'tokenId' is assigned a value but never used.","'setTokenId' is assigned a value but never used.","'setIpfs' is assigned a value but never used.","'setTraitsArray' is assigned a value but never used.","'setTypeArray' is assigned a value but never used.","'mintNFT' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Card1' is defined but never used.","'Card2' is defined but never used.","'Data' is defined but never used.","'putTokenOnSale' is defined but never used.","'sampleNFTTokenID' is assigned a value but never used.","'setSampleNFTTokenID' is assigned a value but never used.","'tokenIds' is assigned a value but never used.","'setSize' is assigned a value but never used.","'traits' is assigned a value but never used.","'setTraits' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectedProperties'. Either include it or remove the dependency array.","ArrayExpression",["233"],"'updateTokenIds' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadNfts'. Either include it or remove the dependency array.",["234"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","Expected '!==' and instead saw '!='.","'NFTimg' is defined but never used.","'ghosp_contract' is assigned a value but never used.","'busd_contract' is assigned a value but never used.","'tx' is assigned a value but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'setTokenIds' is assigned a value but never used.","'setSaleItems' is assigned a value but never used.","'page' is assigned a value but never used.","'setPage' is assigned a value but never used.","'setWalletAddress' is assigned a value but never used.",["235"],"'urlSource' is defined but never used.","'Component' is defined but never used.","'ReactDOM' is defined but never used.","'customStyles' is assigned a value but never used.","'setContentArray' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setSingleSelectedProperty'. Either include it or remove the dependency array. If 'setSingleSelectedProperty' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["236"],"'BASEURL' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},"Update the dependencies array to be: [selectedProperties, singleSelectedProperty]",{"range":"245","text":"246"},"Update the dependencies array to be: [loadNfts, page]",{"range":"247","text":"248"},"Update the dependencies array to be: [loadNfts]",{"range":"249","text":"250"},"Update the dependencies array to be: [selectedProperties, setSingleSelectedProperty]",{"range":"251","text":"252"},[4125,4149],"[selectedProperties, singleSelectedProperty]",[5029,5035],"[loadNfts, page]",[2977,2979],"[loadNfts]",[1054,1074],"[selectedProperties, setSingleSelectedProperty]"]
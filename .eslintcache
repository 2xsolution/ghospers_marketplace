[{"C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\index.js":"1","C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\reportWebVitals.js":"2","C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\App.js":"3","C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\pages\\Contact\\Contact.js":"4","C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\pages\\ConnectWallet\\ConnectWallet.js":"5","C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\pages\\profile\\Profile.js":"6","C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\pages\\mint\\Mint.js":"7","C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\pages\\NFTDetail\\NFTdetail.js":"8","C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\pages\\Home\\Home.js":"9","C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\pages\\mint\\IPFSUtils.js":"10","C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\utils\\Utils.js":"11","C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\components\\loader\\Loader.js":"12","C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\pages\\profile\\updateModal\\UpdateModal.js":"13","C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\components\\accordian\\Accordian.js":"14","C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\components\\Header.js":"15","C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\pages\\mint\\LoaderModal.js":"16","C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\components\\MultiRangeInput.js":"17","C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\core\\web3.js":"18","C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\pages\\mint\\addPropertyModal.js\\AddPropertyModal.js":"19","C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\components\\loaderModal\\LoaderModal.js":"20"},{"size":747,"mtime":1648591313457,"results":"21","hashOfConfig":"22"},{"size":375,"mtime":1647847469215,"results":"23","hashOfConfig":"22"},{"size":2010,"mtime":1649189948915,"results":"24","hashOfConfig":"22"},{"size":1378,"mtime":1647847469200,"results":"25","hashOfConfig":"22"},{"size":2606,"mtime":1649267182951,"results":"26","hashOfConfig":"22"},{"size":21532,"mtime":1649360843253,"results":"27","hashOfConfig":"22"},{"size":9579,"mtime":1649189948954,"results":"28","hashOfConfig":"22"},{"size":15401,"mtime":1649362356778,"results":"29","hashOfConfig":"22"},{"size":15423,"mtime":1649358186747,"results":"30","hashOfConfig":"22"},{"size":2034,"mtime":1648162177260,"results":"31","hashOfConfig":"22"},{"size":341,"mtime":1649269284845,"results":"32","hashOfConfig":"22"},{"size":242,"mtime":1649267182930,"results":"33","hashOfConfig":"22"},{"size":4905,"mtime":1648819216245,"results":"34","hashOfConfig":"22"},{"size":3506,"mtime":1649267182918,"results":"35","hashOfConfig":"22"},{"size":3507,"mtime":1649267182906,"results":"36","hashOfConfig":"22"},{"size":548,"mtime":1649189948952,"results":"37","hashOfConfig":"22"},{"size":2939,"mtime":1648928746840,"results":"38","hashOfConfig":"22"},{"size":9139,"mtime":1649361711180,"results":"39","hashOfConfig":"22"},{"size":3630,"mtime":1648928746854,"results":"40","hashOfConfig":"22"},{"size":433,"mtime":1649267182939,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"yvdn4i",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\index.js",[],["87","88"],"C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\reportWebVitals.js",[],"C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\App.js",[],"C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\pages\\Contact\\Contact.js",[],"C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\pages\\ConnectWallet\\ConnectWallet.js",[],"C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\pages\\profile\\Profile.js",["89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108"],"C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\pages\\mint\\Mint.js",["109","110","111","112","113","114","115","116"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./mint.css\";\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\nimport IPFSUtils from \"./IPFSUtils\";\r\nimport axios from \"axios\";\r\nimport { BASEURL, Error, Success } from \"../../utils/Utils\";\r\n\r\nimport {\r\n  loadWeb3,\r\n  connectWallet,\r\n  createNFT,\r\n  getCurrentWallet,\r\n} from \"../../core/web3\";\r\nimport Header from \"../../components/Header\";\r\nimport AddPropertyModal from \"./addPropertyModal.js/AddPropertyModal\";\r\nimport LoaderModal from \"./LoaderModal\";\r\nimport { NotificationManager } from \"react-notifications\";\r\n\r\nfunction Mint({ setShowModal }) {\r\n  const fileTypes = [\"JPEG\", \"PNG\", \"GIF\", \"JPG\"];\r\n\r\n  const handleChange = (file) => {\r\n    setImage(file);\r\n  };\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [tokenId, setTokenId] = useState(\"xyz\");\r\n  const [showPropertyModal, setShowPropertyModal] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [ipfs, setIpfs] = useState(\"test\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [currency, setCurrency] = useState(\"ghsp\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [selectedType, setSelectedType] = useState(\"\");\r\n  const [level, setLevel] = useState(\"\");\r\n  const [properties, setProperties] = useState(null);\r\n  // const [traitsArray, setTraitsArray] = useState([\r\n  //   \"tank\",\r\n  //   \"marksman\",\r\n  //   \"assassin\",\r\n  // ]);\r\n\r\n  const [typeArray, setTypeArray] = useState([\r\n    \"common\",\r\n    \"rare\",\r\n    \"epic\",\r\n    \"legendary\",\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const initWeb3 = async () => {\r\n      await loadWeb3();\r\n      await connectWallet();\r\n    };\r\n\r\n    initWeb3();\r\n  }, []);\r\n\r\n  const saveNft = async (e) => {\r\n    setIsLoading(true);\r\n    // NotificationManager.info(\"Please wait for a minutes.\");\r\n    IPFSUtils.uploadFileToIPFS([image]).then((lists) => {\r\n      if (lists.length > 0) {\r\n        const content_uri1 = {\r\n          name: title,\r\n          symbol: title,\r\n          image: lists[0],\r\n          properties: {\r\n            files: [{ uri: \"image.png\", type: \"image/png\" }],\r\n            category: \"image\",\r\n          },\r\n        };\r\n\r\n        IPFSUtils.uploadTextToIPFS(content_uri1).then((path) => {\r\n          try {\r\n            createNFT(path).then((res) => {\r\n              console.log(\r\n                \"********** minted token id ***********\",\r\n                res?.tokenId\r\n              );\r\n              console.log(res);\r\n              if (res && res.tokenId && res.wallet) {\r\n                var formData = new FormData();\r\n                formData.append(\"title\", title);\r\n                formData.append(\"description\", description);\r\n                formData.append(\"price\", price);\r\n                formData.append(\"nftImage\", image);\r\n                formData.append(\"currency\", currency);\r\n                formData.append(\"walletAddress\", res.wallet);\r\n                formData.append(\"type\", selectedType);\r\n                formData.append(\"tokenId\", res.tokenId);\r\n                formData.append(\"ipfs\", ipfs);\r\n                formData.append(\"properties\", JSON.stringify(properties));\r\n                formData.append(\"level\", level);\r\n\r\n                console.log(...formData);\r\n\r\n                axios\r\n                  .post(BASEURL + \"/nft/save\", formData)\r\n                  .then((response) => {\r\n                    console.log(response);\r\n                    setCurrency(\"ghsp\");\r\n                    setTitle(\"\");\r\n                    setDescription(\"\");\r\n                    setPrice(\"\");\r\n                    setSelectedType(null);\r\n                    setImage(\"\");\r\n                    setProperties(null);\r\n                    setLevel(\"\");\r\n                    setIsLoading(false);\r\n                    NotificationManager.success(\"Nft Created Successfully\");\r\n                    // window.location.reload();\r\n                  })\r\n                  .catch((e) => {\r\n                    console.log(e.response.data.message);\r\n                    NotificationManager.error(\"Error Writing to DB\");\r\n                    NotificationManager.error(e.response.data.message);\r\n                    console.log(e);\r\n                    setIsLoading(false);\r\n                    // window.location.reload();\r\n                  });\r\n              } else {\r\n                setIsLoading(false);\r\n                NotificationManager.error(\"Not Created Token ID from contract\");\r\n              }\r\n            });\r\n          } catch (error) {\r\n            setIsLoading(false);\r\n            NotificationManager.error(\"Transaction Error\");\r\n          }\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const validateFields = () => {\r\n    if (!title || !price || !level || !selectedType || !image) return false;\r\n    return true;\r\n  };\r\n\r\n  const mintNFT = async (event) => {\r\n    // const tokenID = await createNFT(\"\");\r\n    // console.log('minted token ID : ', tokenID);\r\n    // if (tokenID) {\r\n    // \tsetSampleNFTTokenID(tokenID);\r\n    // \tupdateTokenIds();\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header setShowModal={setShowModal} />\r\n      <div className=\"mint-container\">\r\n        {isLoading && <LoaderModal />}\r\n        <div className=\"file-div\">\r\n          <p>PNG, GIF, WEBP, MP4 or MP3. Max 100mb.</p>\r\n          <FileUploader\r\n            multiple={false}\r\n            handleChange={handleChange}\r\n            name=\"nftImage\"\r\n            classes=\"drag-zone\"\r\n            types={fileTypes}\r\n          />\r\n\r\n          {image && (\r\n            <>\r\n              <p className=\"preview-text\">Image Preview</p>\r\n              <img\r\n                className=\"preview-img\"\r\n                src={URL.createObjectURL(image)}\r\n                alt=\"\"\r\n              />\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className=\"inputs-div\">\r\n          <div>\r\n            <label htmlFor=\"\">Title</label>\r\n            <input\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              type=\"text\"\r\n              className=\"mint-input\"\r\n              placeholder=\"example: gaming art design\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"\">Description (Optional)</label>\r\n            <input\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              type=\"text\"\r\n              className=\"mint-input\"\r\n              placeholder=\"example: gaming art design\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"\">Price</label>\r\n            <div className=\"price-flex\">\r\n              <input\r\n                onKeyDown={(evt) => evt.key === \"e\" && evt.preventDefault()}\r\n                value={price}\r\n                onChange={(e) => {\r\n                  if (e.target.value < 0) {\r\n                    setPrice(0);\r\n                  } else if (e.target.value > 100000000) {\r\n                    setPrice(100000000);\r\n                  } else setPrice(e.target.value);\r\n                }}\r\n                type=\"number\"\r\n                min={0}\r\n                max=\"10\"\r\n                className=\"mint-input\"\r\n                placeholder=\"0.0\"\r\n              />\r\n              <select\r\n                onChange={(e) => setCurrency(e.target.value)}\r\n                value={currency}\r\n              >\r\n                <option selected value=\"ghsp\">\r\n                  GHSP\r\n                </option>\r\n                <option value=\"bnb\">BNB</option>\r\n                <option value=\"busd\">BUSD</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"\">Level</label>\r\n            <input\r\n              value={level}\r\n              max=\"20\"\r\n              min=\"0\"\r\n              onKeyDown={(evt) => evt.key === \"e\" && evt.preventDefault()}\r\n              onChange={(e) => {\r\n                if (e.target.value < 0) {\r\n                  setLevel(0);\r\n                } else if (e.target.value > 20) {\r\n                  setLevel(20);\r\n                } else setLevel(e.target.value);\r\n              }}\r\n              type=\"number\"\r\n              className=\"mint-input\"\r\n              placeholder=\"Level\"\r\n            />\r\n          </div>\r\n          <button onClick={() => setShowPropertyModal(true)}>\r\n            Add Properties\r\n          </button>\r\n          <div className=\"checkbox\">\r\n            <label htmlFor=\"\">Type</label>\r\n            <div className=\"mint-types\">\r\n              {typeArray.map((t) => {\r\n                return (\r\n                  <label key={t} className=\"checkbox-wrap mint-wrap\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={selectedType === t}\r\n                      onChange={() => {\r\n                        if (selectedType === t) {\r\n                          setSelectedType(null);\r\n                        } else setSelectedType(t);\r\n                      }}\r\n                    />\r\n                    <span className=\"checkmark\"></span>\r\n                    {t}\r\n                  </label>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n          <button onClick={saveNft} disabled={!validateFields()}>\r\n            Create Item\r\n          </button>\r\n        </div>\r\n        <AddPropertyModal\r\n          setProperties={setProperties}\r\n          properties={properties}\r\n          showModal={showPropertyModal}\r\n          setShowModal={setShowPropertyModal}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Mint;\r\n","C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\pages\\NFTDetail\\NFTdetail.js",["117","118","119","120","121","122","123","124","125","126","127","128"],"C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\pages\\Home\\Home.js",["129","130","131","132","133","134","135","136","137","138","139","140"],"C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\pages\\mint\\IPFSUtils.js",["141"],"import { create, urlSource } from 'ipfs-http-client'\r\nimport axios from 'axios';\r\n//import IPFS from 'nano-ipfs-store'\r\nlet all = require('it-all')\r\n\r\nlet client = create('https://ipfs.infura.io:5001/api/v0');\r\n\r\nconst uploadFileToIPFS = async (files) => {\r\n    console.log(\"enter uploadFileToIPFS\", files);\r\n    let lists = [];\r\n    try {\r\n        for (let i = 0; i < files.length; i++) {\r\n            const added = await client.add(files[i])\r\n            const url = `https://ipfs.infura.io/ipfs/${added.path}`\r\n            console.log(\"[GD], FileName = \", files[i].name, \", Hash: \", added.path)\r\n            lists.push(url)\r\n        }\r\n        return lists\r\n    } catch (err) {\r\n        console.log(\"Error uploading file: \", err)\r\n        return []\r\n    }\r\n}\r\n\r\nconst uploadFolderToIPFS = async (files) => {\r\n    try {\r\n        /*let fileObjectsArray = Array.from(files).map((file) => {\r\n            return {\r\n                path: file.name,\r\n                content: file\r\n            }\r\n        })*/\r\n        const results = await all(\r\n            client.addAll(files, { wrapWithDirectory: true })\r\n        )\r\n        const length = results.length\r\n        const filesHash = results[length - 1].cid._baseCache.get('z')\r\n        const filesUrl = 'https://ipfs.infura.io/ipfs/' + filesHash\r\n        return filesUrl\r\n    } catch (err) {\r\n        console.log(\"[GD], Error uploading file: \", err)\r\n        return \"\"\r\n    }\r\n}\r\n\r\nconst uploadTextToIPFS = async (data) => {\r\n    try {\r\n        let doc = JSON.stringify(data)\r\n        const added = await client.add(doc)\r\n        const filesUrl = 'https://ipfs.infura.io/ipfs/' + added.path;\r\n        return filesUrl\r\n    } catch (err) {\r\n        //console.log(\"Error: \", err)\r\n        return null\r\n    }\r\n}\r\n\r\nconst loadFromIPFS = async (url) => {\r\n    let res = await axios.get(`https://ipfs.infura.io/ipfs/${url}`)\r\n    return res;\r\n}\r\n\r\n\r\nconst IPFSUtils = {\r\n    uploadFileToIPFS,\r\n    uploadFolderToIPFS,\r\n    uploadTextToIPFS,\r\n    loadFromIPFS\r\n}\r\n\r\n\r\nexport default IPFSUtils;","C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\utils\\Utils.js",[],"C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\components\\loader\\Loader.js",[],"C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\pages\\profile\\updateModal\\UpdateModal.js",[],"C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\components\\accordian\\Accordian.js",["142"],"C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\components\\Header.js",["143","144","145","146"],"C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\pages\\mint\\LoaderModal.js",["147","148"],"import React, { Component, useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport Loader from \"../../components/loader/Loader\";\r\nModal.setAppElement(\"#root\");\r\n\r\nfunction LoaderModal() {\r\n  return (\r\n    <div className=\"\">\r\n      <Modal isOpen={true} contentLabel=\"Example Modal\">\r\n        <div style={{ width: \"400px\", margin: \"auto\" }}>\r\n          {/* <h2 style={{ textAlign: \"center\", marginTop: \"40px\" }}>Loading.. </h2> */}\r\n          <Loader />\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoaderModal;\r\n","C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\components\\MultiRangeInput.js",[],"C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\core\\web3.js",["149","150","151","152","153"],"C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\pages\\mint\\addPropertyModal.js\\AddPropertyModal.js",["154","155","156","157"],"import React, { Component, useEffect, useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { BASEURL } from \"../../../utils/Utils\";\r\nimport \"./addPropertyModal.css\";\r\nModal.setAppElement(\"#root\");\r\n\r\nfunction AddPropertyModal({\r\n  setShowModal,\r\n  showModal,\r\n  setProperties,\r\n  properties,\r\n}) {\r\n  console.log(showModal);\r\n  function closeModal() {\r\n    setShowModal(false);\r\n  }\r\n\r\n  const [rows, setRows] = useState([\r\n    {\r\n      type: \"\",\r\n      value: \"\",\r\n    },\r\n  ]);\r\n\r\n  const onChange = (e, index) => {\r\n    setRows((prev) =>\r\n      Object.values({\r\n        ...prev,\r\n        [index]: { ...prev[index], [e.target.name]: e.target.value },\r\n      })\r\n    );\r\n  };\r\n\r\n  const removeRow = (index) => {\r\n    console.log(index);\r\n    if (rows.length !== 1) {\r\n      console.log(rows);\r\n      console.log(rows[index]);\r\n      var rowsTemp = [...rows];\r\n      console.log(rowsTemp);\r\n      rowsTemp.splice(index, 1);\r\n      console.log(rowsTemp);\r\n      setRows(rowsTemp);\r\n    }\r\n  };\r\n\r\n  const AddRows = () => {\r\n    var rowsTemp = rows.filter((r) => r.type != \"\" && r.value != \"\");\r\n    setProperties(rowsTemp);\r\n    setShowModal(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(properties);\r\n    if (!properties) {\r\n      setRows([\r\n        {\r\n          type: \"\",\r\n          value: \"\",\r\n        },\r\n      ]);\r\n    }\r\n  }, [properties]);\r\n\r\n  return (\r\n    <div className=\"scrollable-modal\">\r\n      <Modal\r\n        isOpen={showModal}\r\n        shouldCloseOnOverlayClick={false}\r\n        // onAfterOpen={afterOpenModal}\r\n        onRequestClose={closeModal}\r\n        // style={customStyles}\r\n        // className=\"scrollable-modal\"\r\n        contentLabel=\"Example Modal\"\r\n      >\r\n        <div className=\"properties-modal-content\">\r\n          <h2>Add Properties </h2>\r\n          <div className=\"property-rows\">\r\n            {rows &&\r\n              rows.map((row, index) => {\r\n                return (\r\n                  <div key={index} className=\"inputs-div\">\r\n                    <div>\r\n                      <label htmlFor=\"\">Type</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"type\"\r\n                        value={row.type}\r\n                        onChange={(e) => onChange(e, index)}\r\n                        className=\"mint-input\"\r\n                        placeholder=\"Hair\"\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <label htmlFor=\"\">Value</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"value\"\r\n                        value={row.value}\r\n                        onChange={(e) => onChange(e, index)}\r\n                        className=\"mint-input\"\r\n                        placeholder=\"Blonde\"\r\n                      />\r\n                    </div>\r\n                    <button\r\n                      onClick={() => removeRow(index)}\r\n                      className=\"remove-btn\"\r\n                    >\r\n                      Remove\r\n                    </button>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n          <button\r\n            className=\"add-btn\"\r\n            onClick={() => {\r\n              setRows((prev) => [\r\n                ...prev,\r\n                {\r\n                  type: \"\",\r\n                  value: \"\",\r\n                },\r\n              ]);\r\n            }}\r\n          >\r\n            Add\r\n          </button>\r\n\r\n          <button onClick={AddRows}>Save</button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddPropertyModal;\r\n","C:\\Users\\yoges\\Desktop\\work\\ghospers_marketplace\\src\\components\\loaderModal\\LoaderModal.js",[],{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":9,"column":8,"nodeType":"164","messageId":"165","endLine":9,"endColumn":18},{"ruleId":"162","severity":1,"message":"166","line":25,"column":21,"nodeType":"164","messageId":"165","endLine":25,"endColumn":33},{"ruleId":"162","severity":1,"message":"167","line":78,"column":10,"nodeType":"164","messageId":"165","endLine":78,"endColumn":18},{"ruleId":"162","severity":1,"message":"168","line":78,"column":20,"nodeType":"164","messageId":"165","endLine":78,"endColumn":31},{"ruleId":"162","severity":1,"message":"169","line":79,"column":21,"nodeType":"164","messageId":"165","endLine":79,"endColumn":33},{"ruleId":"162","severity":1,"message":"170","line":82,"column":16,"nodeType":"164","messageId":"165","endLine":82,"endColumn":23},{"ruleId":"171","severity":1,"message":"172","line":105,"column":6,"nodeType":"173","endLine":116,"endColumn":4,"suggestions":"174"},{"ruleId":"171","severity":1,"message":"175","line":142,"column":6,"nodeType":"173","endLine":142,"endColumn":30,"suggestions":"176"},{"ruleId":"171","severity":1,"message":"177","line":165,"column":6,"nodeType":"173","endLine":165,"endColumn":21,"suggestions":"178"},{"ruleId":"179","severity":1,"message":"180","line":257,"column":23,"nodeType":"181","messageId":"182","endLine":257,"endColumn":25},{"ruleId":"179","severity":1,"message":"180","line":259,"column":30,"nodeType":"181","messageId":"182","endLine":259,"endColumn":32},{"ruleId":"183","severity":1,"message":"184","line":295,"column":13,"nodeType":"185","endLine":295,"endColumn":61},{"ruleId":"179","severity":1,"message":"180","line":309,"column":49,"nodeType":"181","messageId":"182","endLine":309,"endColumn":51},{"ruleId":"186","severity":1,"message":"187","line":323,"column":21,"nodeType":"185","messageId":"188","endLine":326,"endColumn":22,"fix":"189"},{"ruleId":"186","severity":1,"message":"187","line":331,"column":21,"nodeType":"185","messageId":"188","endLine":334,"endColumn":22,"fix":"190"},{"ruleId":"179","severity":1,"message":"180","line":394,"column":57,"nodeType":"181","messageId":"182","endLine":394,"endColumn":59},{"ruleId":"179","severity":1,"message":"191","line":459,"column":36,"nodeType":"181","messageId":"182","endLine":459,"endColumn":38},{"ruleId":"183","severity":1,"message":"184","line":465,"column":25,"nodeType":"185","endLine":465,"endColumn":28},{"ruleId":"183","severity":1,"message":"184","line":487,"column":25,"nodeType":"185","endLine":487,"endColumn":28},{"ruleId":"183","severity":1,"message":"184","line":511,"column":17,"nodeType":"185","endLine":511,"endColumn":39},{"ruleId":"162","severity":1,"message":"192","line":6,"column":19,"nodeType":"164","messageId":"165","endLine":6,"endColumn":24},{"ruleId":"162","severity":1,"message":"193","line":6,"column":26,"nodeType":"164","messageId":"165","endLine":6,"endColumn":33},{"ruleId":"162","severity":1,"message":"194","line":12,"column":3,"nodeType":"164","messageId":"165","endLine":12,"endColumn":19},{"ruleId":"162","severity":1,"message":"195","line":28,"column":10,"nodeType":"164","messageId":"165","endLine":28,"endColumn":17},{"ruleId":"162","severity":1,"message":"196","line":28,"column":19,"nodeType":"164","messageId":"165","endLine":28,"endColumn":29},{"ruleId":"162","severity":1,"message":"197","line":31,"column":16,"nodeType":"164","messageId":"165","endLine":31,"endColumn":23},{"ruleId":"162","severity":1,"message":"166","line":44,"column":21,"nodeType":"164","messageId":"165","endLine":44,"endColumn":33},{"ruleId":"162","severity":1,"message":"198","line":142,"column":9,"nodeType":"164","messageId":"165","endLine":142,"endColumn":16},{"ruleId":"179","severity":1,"message":"180","line":77,"column":30,"nodeType":"181","messageId":"182","endLine":77,"endColumn":32},{"ruleId":"179","severity":1,"message":"180","line":79,"column":37,"nodeType":"181","messageId":"182","endLine":79,"endColumn":39},{"ruleId":"179","severity":1,"message":"180","line":237,"column":28,"nodeType":"181","messageId":"182","endLine":237,"endColumn":30},{"ruleId":"179","severity":1,"message":"180","line":239,"column":35,"nodeType":"181","messageId":"182","endLine":239,"endColumn":37},{"ruleId":"179","severity":1,"message":"180","line":390,"column":45,"nodeType":"181","messageId":"182","endLine":390,"endColumn":47},{"ruleId":"179","severity":1,"message":"180","line":392,"column":48,"nodeType":"181","messageId":"182","endLine":392,"endColumn":50},{"ruleId":"179","severity":1,"message":"180","line":394,"column":50,"nodeType":"181","messageId":"182","endLine":394,"endColumn":52},{"ruleId":"179","severity":1,"message":"180","line":413,"column":45,"nodeType":"181","messageId":"182","endLine":413,"endColumn":47},{"ruleId":"179","severity":1,"message":"180","line":415,"column":48,"nodeType":"181","messageId":"182","endLine":415,"endColumn":50},{"ruleId":"179","severity":1,"message":"180","line":417,"column":50,"nodeType":"181","messageId":"182","endLine":417,"endColumn":52},{"ruleId":"183","severity":1,"message":"184","line":434,"column":21,"nodeType":"185","endLine":444,"endColumn":22},{"ruleId":"183","severity":1,"message":"184","line":450,"column":21,"nodeType":"185","endLine":454,"endColumn":22},{"ruleId":"162","severity":1,"message":"199","line":66,"column":9,"nodeType":"164","messageId":"165","endLine":66,"endColumn":15},{"ruleId":"162","severity":1,"message":"170","line":84,"column":16,"nodeType":"164","messageId":"165","endLine":84,"endColumn":23},{"ruleId":"171","severity":1,"message":"175","line":124,"column":6,"nodeType":"173","endLine":124,"endColumn":30,"suggestions":"200"},{"ruleId":"162","severity":1,"message":"201","line":126,"column":9,"nodeType":"164","messageId":"165","endLine":126,"endColumn":23},{"ruleId":"162","severity":1,"message":"198","line":167,"column":9,"nodeType":"164","messageId":"165","endLine":167,"endColumn":16},{"ruleId":"171","severity":1,"message":"172","line":174,"column":6,"nodeType":"173","endLine":184,"endColumn":4,"suggestions":"202"},{"ruleId":"183","severity":1,"message":"184","line":202,"column":11,"nodeType":"185","endLine":202,"endColumn":59},{"ruleId":"183","severity":1,"message":"184","line":210,"column":15,"nodeType":"185","endLine":210,"endColumn":37},{"ruleId":"179","severity":1,"message":"180","line":355,"column":68,"nodeType":"181","messageId":"182","endLine":355,"endColumn":70},{"ruleId":"179","severity":1,"message":"191","line":416,"column":38,"nodeType":"181","messageId":"182","endLine":416,"endColumn":40},{"ruleId":"183","severity":1,"message":"184","line":422,"column":27,"nodeType":"185","endLine":422,"endColumn":30},{"ruleId":"183","severity":1,"message":"184","line":444,"column":27,"nodeType":"185","endLine":444,"endColumn":30},{"ruleId":"162","severity":1,"message":"203","line":1,"column":18,"nodeType":"164","messageId":"165","endLine":1,"endColumn":27},{"ruleId":"171","severity":1,"message":"204","line":31,"column":6,"nodeType":"173","endLine":31,"endColumn":26,"suggestions":"205"},{"ruleId":"171","severity":1,"message":"206","line":47,"column":6,"nodeType":"173","endLine":47,"endColumn":17,"suggestions":"207"},{"ruleId":"186","severity":1,"message":"187","line":81,"column":15,"nodeType":"185","messageId":"188","endLine":85,"endColumn":16,"fix":"208"},{"ruleId":"186","severity":1,"message":"187","line":95,"column":15,"nodeType":"185","messageId":"188","endLine":99,"endColumn":16,"fix":"209"},{"ruleId":"183","severity":1,"message":"184","line":110,"column":13,"nodeType":"185","endLine":110,"endColumn":36},{"ruleId":"162","severity":1,"message":"210","line":1,"column":17,"nodeType":"164","messageId":"165","endLine":1,"endColumn":26},{"ruleId":"162","severity":1,"message":"211","line":1,"column":28,"nodeType":"164","messageId":"165","endLine":1,"endColumn":36},{"ruleId":"179","severity":1,"message":"191","line":23,"column":17,"nodeType":"181","messageId":"182","endLine":23,"endColumn":19},{"ruleId":"212","severity":1,"message":"213","line":152,"column":5,"nodeType":"214","messageId":"215","endLine":152,"endColumn":17},{"ruleId":"212","severity":1,"message":"213","line":180,"column":5,"nodeType":"214","messageId":"215","endLine":180,"endColumn":17},{"ruleId":"212","severity":1,"message":"213","line":207,"column":5,"nodeType":"214","messageId":"215","endLine":207,"endColumn":17},{"ruleId":"212","severity":1,"message":"213","line":224,"column":5,"nodeType":"214","messageId":"215","endLine":224,"endColumn":17},{"ruleId":"162","severity":1,"message":"210","line":1,"column":17,"nodeType":"164","messageId":"165","endLine":1,"endColumn":26},{"ruleId":"162","severity":1,"message":"216","line":3,"column":10,"nodeType":"164","messageId":"165","endLine":3,"endColumn":17},{"ruleId":"179","severity":1,"message":"191","line":48,"column":46,"nodeType":"181","messageId":"182","endLine":48,"endColumn":48},{"ruleId":"179","severity":1,"message":"191","line":48,"column":63,"nodeType":"181","messageId":"182","endLine":48,"endColumn":65},"no-native-reassign",["217"],"no-negated-in-lhs",["218"],"no-unused-vars","'ProfileImg' is defined but never used.","Identifier","unusedVar","'setTypeArray' is assigned a value but never used.","'tokenIds' is assigned a value but never used.","'setTokenIds' is assigned a value but never used.","'setSaleItems' is assigned a value but never used.","'setSize' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadNfts'. Either include it or remove the dependency array.","ArrayExpression",["219"],"React Hook useEffect has a missing dependency: 'selectedProperties'. Either include it or remove the dependency array.",["220"],"React Hook useEffect has missing dependencies: 'address' and 'loadUserDetails'. Either include them or remove the dependency array.",["221"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"222","text":"223"},{"range":"224","text":"223"},"Expected '!==' and instead saw '!='.","'Error' is defined but never used.","'Success' is defined but never used.","'getCurrentWallet' is defined but never used.","'tokenId' is assigned a value but never used.","'setTokenId' is assigned a value but never used.","'setIpfs' is assigned a value but never used.","'mintNFT' is assigned a value but never used.","'buyNft' is assigned a value but never used.",["225"],"'updateTokenIds' is assigned a value but never used.",["226"],"'urlSource' is defined but never used.","React Hook useEffect has a missing dependency: 'setSingleSelectedProperty'. Either include it or remove the dependency array. If 'setSingleSelectedProperty' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["227"],"React Hook useEffect has a missing dependency: 'saveUser'. Either include it or remove the dependency array.",["228"],{"range":"229","text":"223"},{"range":"230","text":"223"},"'Component' is defined but never used.","'useState' is defined but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'BASEURL' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},[9271,9271]," rel=\"noreferrer\"",[9606,9606],{"desc":"233","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},[2261,2261],[2653,2653],"Update the dependencies array to be: [min, max, page, size, minlevel, currency, selectedType, maxlevel, walletAddress, selectedProperties, loadNfts]",{"range":"244","text":"245"},"Update the dependencies array to be: [selectedProperties, singleSelectedProperty]",{"range":"246","text":"247"},"Update the dependencies array to be: [address, loadUserDetails, walletAddress]",{"range":"248","text":"249"},{"range":"250","text":"247"},"Update the dependencies array to be: [min, max, page, size, minlevel, currency, selectedType, maxlevel, selectedProperties, loadNfts]",{"range":"251","text":"252"},"Update the dependencies array to be: [selectedProperties, setSingleSelectedProperty]",{"range":"253","text":"254"},"Update the dependencies array to be: [curWallet, saveUser]",{"range":"255","text":"256"},[3325,3482],"[min, max, page, size, minlevel, currency, selectedType, maxlevel, walletAddress, selectedProperties, loadNfts]",[4177,4201],"[selectedProperties, singleSelectedProperty]",[4687,4702],"[address, loadUserDetails, walletAddress]",[3881,3905],[5015,5152],"[min, max, page, size, minlevel, currency, selectedType, maxlevel, selectedProperties, loadNfts]",[1000,1020],"[selectedProperties, setSingleSelectedProperty]",[1353,1364],"[curWallet, saveUser]"]
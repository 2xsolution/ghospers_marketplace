[{"D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\index.js":"1","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\App.js":"2","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\reportWebVitals.js":"3","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\ConnectWallet\\ConnectWallet.js":"4","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\Contact\\Contact.js":"5","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\mint\\Mint.js":"6","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\NFTDetail\\NFTdetail.js":"7","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\Home\\Home.js":"8","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\components\\Header.js":"9","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\components\\MultiRangeInput.js":"10","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\core\\web3.js":"11","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\mint\\IPFSUtils.js":"12"},{"size":603,"mtime":1647857396226,"results":"13","hashOfConfig":"14"},{"size":1078,"mtime":1647857396210,"results":"15","hashOfConfig":"14"},{"size":375,"mtime":1647857396230,"results":"16","hashOfConfig":"14"},{"size":2200,"mtime":1647857396227,"results":"17","hashOfConfig":"14"},{"size":1378,"mtime":1647857396228,"results":"18","hashOfConfig":"14"},{"size":2712,"mtime":1647895248858,"results":"19","hashOfConfig":"14"},{"size":3467,"mtime":1647857396229,"results":"20","hashOfConfig":"14"},{"size":10015,"mtime":1647891977378,"results":"21","hashOfConfig":"14"},{"size":1564,"mtime":1647857396224,"results":"22","hashOfConfig":"14"},{"size":2694,"mtime":1647857396225,"results":"23","hashOfConfig":"14"},{"size":7238,"mtime":1647883263458,"results":"24","hashOfConfig":"14"},{"size":2034,"mtime":1647894973122,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"18zr5ed",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},"D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\index.js",[],["54","55"],"D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\App.js",[],"D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\reportWebVitals.js",[],"D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\ConnectWallet\\ConnectWallet.js",[],"D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\Contact\\Contact.js",[],"D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\mint\\Mint.js",[],"D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\NFTDetail\\NFTdetail.js",[],"D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\Home\\Home.js",["56","57","58","59","60","61"],"import React, { useEffect, useState } from \"react\";\r\nimport Header from \"../../components/Header\";\r\nimport MultiRangeInput from \"../../components/MultiRangeInput\";\r\nimport Card1 from \"../../assets/img/card1.png\";\r\nimport Card2 from \"../../assets/img/card2.png\";\r\nimport LeftIcon from \"../../assets/img/lefticon.png\";\r\nimport RightIcon from \"../../assets/img/righticon.png\";\r\nimport \"./home.css\";\r\n\r\nimport {\r\n\tloadWeb3, connectWallet, createNFT,\r\n\tbuyNFTWithBNB, buyNFTWithBUSD, buyNFTWithGHSP,\r\n\tputTokenOnSale, getTokenIds, getSaleItems\r\n} from \"../../core/web3\";\r\n\r\nconst Home = ({ setShowModal }) => {\r\n\tconst [sidebar, setSidebar] = useState(false);\r\n\tconst openSidebar = (e) => {\r\n\t\tconsole.log(\"sidebar\");\r\n\t\te.preventDefault();\r\n\t\tsetSidebar((prev) => !prev);\r\n\t};\r\n\r\n\tconst [sampleNFTTokenID, setSampleNFTTokenID] = useState(null);\r\n\tconst [tokenIds, setTokenIds] = useState([]);\r\n\tconst [saleItems, setSaleItems] = useState([]);\r\n\r\n\tconst buyNFT = async (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tif (sampleNFTTokenID) {\r\n\t\t\tconst saleTokenType = 2; // GHSP, BUSD, BNB\r\n\t\t\tif (saleTokenType == 0) {\r\n\t\t\t\tbuyNFTWithGHSP(sampleNFTTokenID);\r\n\t\t\t} else if (saleTokenType == 1) {\r\n\t\t\t\tbuyNFTWithBUSD(sampleNFTTokenID);\r\n\t\t\t} else {\r\n\t\t\t\tbuyNFTWithBNB(sampleNFTTokenID, 0.1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst sellNFT = async (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconsole.log('selling token ID : ', sampleNFTTokenID);\r\n\r\n\t\tconst saleTokenType = 2; // GHSP, BUSD, BNB\r\n\r\n\t\tif (sampleNFTTokenID) {\r\n\t\t\tputTokenOnSale(sampleNFTTokenID, 0.1, saleTokenType);\r\n\t\t}\r\n\t}\r\n\r\n\tconst mintNFT = async (event) => {\r\n\t\t// event.preventDefault();\r\n\r\n\t\t// const tokenID = await createNFT(\"\");\r\n\t\t// console.log('minted token ID : ', tokenID);\r\n\t\t// if (tokenID) {\r\n\t\t// \tsetSampleNFTTokenID(tokenID);\r\n\t\t// \tupdateTokenIds();\r\n\t\t// }\r\n\t}\r\n\r\n\tconst updateTokenIds = async () => {\r\n\t\tlet res = await getTokenIds();\r\n\t\tsetTokenIds(res);\r\n\t\tconsole.log(\"======= getTokenIds ========== \", res);\r\n\r\n\t\tres = await getSaleItems(res);\r\n\t\tsetSaleItems(res);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tloadWeb3();\r\n\t\tconnectWallet();\r\n\t\tupdateTokenIds();\r\n\t}, []);\r\n\r\n\tconst onClickItem = async (tokenID) => {\r\n\t\tsetSampleNFTTokenID(tokenID);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Header setShowModal={setShowModal} />\r\n\t\t\t<section className=\"root\">\r\n\t\t\t\t<div className=\"fitermob\">\r\n\t\t\t\t\t<a href=\"/\" className=\"filter-btn\" onClick={openSidebar}>\r\n\t\t\t\t\t\tFilter\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className={sidebar ? \"sidebar sidebar-active\" : \"sidebar\"}>\r\n\t\t\t\t\t\t<div className=\"filter\">\r\n\t\t\t\t\t\t\t<h4>FILTERS</h4>\r\n\t\t\t\t\t\t\t<a href=\"/\">CLEAR ALL</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"hero\">\r\n\t\t\t\t\t\t\t<h4>GHOSPHERS</h4>\r\n\t\t\t\t\t\t\t<p>No Ghosper selected</p>\r\n\t\t\t\t\t\t\t<a href=\"/\">Choose Ghospers</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"hero\">\r\n\t\t\t\t\t\t\t<h4>GHOSPHERS</h4>\r\n\t\t\t\t\t\t\t<div className=\"checkbox\">\r\n\t\t\t\t\t\t\t\t<label className=\"checkbox-wrap\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" />\r\n\t\t\t\t\t\t\t\t\t<span className=\"checkmark\"></span>Common\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t<label className=\"checkbox-wrap\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" />\r\n\t\t\t\t\t\t\t\t\t<span className=\"checkmark\"></span>Rare\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t<label className=\"checkbox-wrap\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" />\r\n\t\t\t\t\t\t\t\t\t<span className=\"checkmark\"></span>Epic\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t<label className=\"checkbox-wrap\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" />\r\n\t\t\t\t\t\t\t\t\t<span className=\"checkmark\"></span>Legendary\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"hero\">\r\n\t\t\t\t\t\t\t<h4>PRICE</h4>\r\n\t\t\t\t\t\t\t<div className=\"price\">\r\n\t\t\t\t\t\t\t\t<div className=\"price-inpt\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" placeholder=\"Min\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<span></span>\r\n\t\t\t\t\t\t\t\t<div className=\"price-inpt\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" placeholder=\"Max\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"hero\">\r\n\t\t\t\t\t\t\t<h4>LEVEL</h4>\r\n\t\t\t\t\t\t\t<div className=\"levels\">\r\n\t\t\t\t\t\t\t\t<MultiRangeInput\r\n\t\t\t\t\t\t\t\t\tmin={0}\r\n\t\t\t\t\t\t\t\t\tmax={100}\r\n\t\t\t\t\t\t\t\t\tonChange={({ min, max }) =>\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(`min = ${min}, max = ${max}`)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"hero\">\r\n\t\t\t\t\t\t\t<h4>TRAITS</h4>\r\n\t\t\t\t\t\t\t<div className=\"checkbox\">\r\n\t\t\t\t\t\t\t\t<label className=\"checkbox-wrap\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" />\r\n\t\t\t\t\t\t\t\t\t<span className=\"checkmark\"></span>Tank\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t<label className=\"checkbox-wrap\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" />\r\n\t\t\t\t\t\t\t\t\t<span className=\"checkmark\"></span>Marksman\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t<label className=\"checkbox-wrap\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" />\r\n\t\t\t\t\t\t\t\t\t<span className=\"checkmark\"></span>Assassin\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{/* <div className=\"hero skin\">\r\n\t\t\t\t\t\t\t<h4>SKINS</h4>\r\n\t\t\t\t\t\t\t<p>No skin selected</p>\r\n\t\t\t\t\t\t\t<a href=\"/\">Choose Skin</a>\r\n\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{ marginLeft: '60px' }}>\r\n\t\t\t\t\t\t<div style={{ display: 'flex', marginBottom: '20px' }}>\r\n\t\t\t\t\t\t\t<div className=\"nav-btn\">\r\n\t\t\t\t\t\t\t\t<a href=\"/\" onClick={buyNFT}>Buy</a>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"nav-btn\">\r\n\t\t\t\t\t\t\t\t<a href=\"/\" onClick={sellNFT}>Sell</a>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"nav-btn\">\r\n\t\t\t\t\t\t\t\t<a href=\"/mint\" onClick={mintNFT}>Mint</a>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"nft-collections\">\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\ttokenIds.map((elem, i) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"card\" key={elem} onClick={() => onClickItem(elem)}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-img\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img src={Card1} alt=\"Card1\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-title\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h4>TokenID ({elem}) {Number(sampleNFTTokenID) == Number(elem) ? <span>&#10003;</span> : \"\"} {saleItems[elem]  && saleItems[elem].onSale == true ? \"OnSale\" : \"\"}</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>The Baby</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"custom-btn\">Click</button>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-price\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>gTHC</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>21/219</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>Price</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>900 THC</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<small>$19 USD</small>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t{/* <div className=\"card\">\r\n\t\t\t\t\t\t\t\t<div className=\"card-img\">\r\n\t\t\t\t\t\t\t\t\t<img src={Card1} alt=\"Card1\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-title\">\r\n\t\t\t\t\t\t\t\t\t<h4>CULIEN</h4>\r\n\t\t\t\t\t\t\t\t\t<span>The Baby</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-price\">\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<span>gTHC</span>\r\n\t\t\t\t\t\t\t\t\t\t<p>21/219</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<span>Price</span>\r\n\t\t\t\t\t\t\t\t\t\t<p>900 THC</p>\r\n\t\t\t\t\t\t\t\t\t\t<small>$19 USD</small>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t<div className=\"card-img bg-blue\">\r\n\t\t\t\t\t\t\t\t\t<img src={Card2} alt=\"Card2\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-title\">\r\n\t\t\t\t\t\t\t\t\t<h4>Lorem ipsum sit</h4>\r\n\t\t\t\t\t\t\t\t\t<span>The Baby</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-price\">\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<span>gTHC</span>\r\n\t\t\t\t\t\t\t\t\t\t<p>21/219</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<span>Price</span>\r\n\t\t\t\t\t\t\t\t\t\t<p>900 THC</p>\r\n\t\t\t\t\t\t\t\t\t\t<small>$19 USD</small>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t<div className=\"card-img bg-red\">\r\n\t\t\t\t\t\t\t\t\t<img src={Card1} alt=\"Card3\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-title\">\r\n\t\t\t\t\t\t\t\t\t<h4>Lorem ipsum sit</h4>\r\n\t\t\t\t\t\t\t\t\t<span>The Baby</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-price\">\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<span>gTHC</span>\r\n\t\t\t\t\t\t\t\t\t\t<p>21/219</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<span>Price</span>\r\n\t\t\t\t\t\t\t\t\t\t<p>900 THC</p>\r\n\t\t\t\t\t\t\t\t\t\t<small>$19 USD</small>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t<div className=\"card-img bg-blue\">\r\n\t\t\t\t\t\t\t\t\t<img src={Card2} alt=\"Card3\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-title\">\r\n\t\t\t\t\t\t\t\t\t<h4>Lorem ipsum sit</h4>\r\n\t\t\t\t\t\t\t\t\t<span>The Baby</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-price\">\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<span>gTHC</span>\r\n\t\t\t\t\t\t\t\t\t\t<p>21/219</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<span>Price</span>\r\n\t\t\t\t\t\t\t\t\t\t<p>900 THC</p>\r\n\t\t\t\t\t\t\t\t\t\t<small>$19 USD</small>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t<div className=\"card-img bg-red\">\r\n\t\t\t\t\t\t\t\t\t<img src={Card1} alt=\"Card3\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-title\">\r\n\t\t\t\t\t\t\t\t\t<h4>Lorem ipsum sit</h4>\r\n\t\t\t\t\t\t\t\t\t<span>The Baby</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-price\">\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<span>gTHC</span>\r\n\t\t\t\t\t\t\t\t\t\t<p>21/219</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<span>Price</span>\r\n\t\t\t\t\t\t\t\t\t\t<p>900 THC</p>\r\n\t\t\t\t\t\t\t\t\t\t<small>$19 USD</small>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t<div className=\"card-img bg-blue\">\r\n\t\t\t\t\t\t\t\t\t<img src={Card2} alt=\"Card3\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-title\">\r\n\t\t\t\t\t\t\t\t\t<h4>Lorem ipsum sit</h4>\r\n\t\t\t\t\t\t\t\t\t<span>The Baby</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-price\">\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<span>gTHC</span>\r\n\t\t\t\t\t\t\t\t\t\t<p>21/219</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<span>Price</span>\r\n\t\t\t\t\t\t\t\t\t\t<p>900 THC</p>\r\n\t\t\t\t\t\t\t\t\t\t<small>$19 USD</small>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t<div className=\"pagination-wrap\">\r\n\t\t\t\t\t\t\t\t<div className=\"pagination\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"icon\">\r\n\t\t\t\t\t\t\t\t\t\t<a href=\"/\">\r\n\t\t\t\t\t\t\t\t\t\t\t<img src={LeftIcon} alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"number\">\r\n\t\t\t\t\t\t\t\t\t\t<span>25</span>\r\n\t\t\t\t\t\t\t\t\t\tof 120\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"icon\">\r\n\t\t\t\t\t\t\t\t\t\t<a href=\"/\">\r\n\t\t\t\t\t\t\t\t\t\t\t<img src={RightIcon} alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\components\\Header.js",[],"D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\components\\MultiRangeInput.js",[],"D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\core\\web3.js",["62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79"],"\r\nimport Web3 from 'web3';\r\n\r\nconst busdAbi = require('./abi/busd.json');\r\nconst ghospAbi = require('./abi/ghosp.json');\r\nconst marketAbi = require('./abi/marketplace.json');\r\nconst minterAbi = require('./abi/minter.json');\r\n\r\n\r\nconst MINTER_ADDRESS = \"0xfA9bB2B3119A7b9d40235F9e92052AB6Fd6DaD12\"\r\nconst MARKETPLACE_ADDRESS = \"0xC4d193F224Ec31c7BDc959D2D1b9Eb9d16E97A78\"\r\nconst GHOSP_ADDRESS = \"0x91c70ba82a8ed676c5a09ce1cd94cc18923e8371\"\r\nconst BUSD_ADDRESS = \"0x8301f2213c0eed49a7e28ae4c3e91722919b8b47\"   // Faucet Token\r\nlet market_contract = null;\r\nlet minter_contract = null;\r\nlet ghosp_contract = null;\r\nlet busd_contract = null;\r\n\r\n\r\nexport const loadWeb3 = async () => {\r\n    if (window.ethereum) {\r\n        window.web3 = new Web3(window.ethereum);\r\n        window.web3.eth.handleRevert = true;\r\n    } else if (window.web3) {\r\n        window.web3 = new Web3(window.web3.currentProvider);\r\n        window.web3.eth.handleRevert = true\r\n    } else {\r\n        window.alert(\r\n            \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n        );\r\n        return;\r\n    }\r\n\r\n    minter_contract = new window.web3.eth.Contract(minterAbi, MINTER_ADDRESS);\r\n    market_contract = new window.web3.eth.Contract(marketAbi, MARKETPLACE_ADDRESS);\r\n    ghosp_contract = new window.web3.eth.Contract(ghospAbi, GHOSP_ADDRESS);\r\n    busd_contract = new window.web3.eth.Contract(busdAbi, BUSD_ADDRESS);\r\n\r\n    window.ethereum.on('chainChanged', function (chainId) {\r\n\r\n    });\r\n};\r\n\r\n\r\nexport const connectWallet = async () => {\r\n    if (window.ethereum) {\r\n        try {\r\n            const addressArray = await window.ethereum.request({\r\n                method: \"eth_requestAccounts\",\r\n            });\r\n            const obj = {\r\n                status: \"Metamask successfuly connected.\",\r\n                address: addressArray[0],\r\n            };\r\n            return obj;\r\n        } catch (err) {\r\n            return {\r\n                address: \"\",\r\n                status: \"Something went wrong: \" + err.message,\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        return {\r\n            address: \"\",\r\n            status: (\r\n                <span>\r\n                    <p>\r\n                        {\" \"}\r\n                        🦊{\" \"}\r\n                        <a target=\"_blank\" rel=\"noreferrer\" href={`https://metamask.io/download.html`}>\r\n                            You must install Metamask, a virtual BSC wallet, in your\r\n                            browser.\r\n                        </a>\r\n                    </p>\r\n                </span>\r\n            ),\r\n        };\r\n    }\r\n};\r\n\r\n\r\nexport const getCurrentWallet = async () => {\r\n    const web3 = window.web3;\r\n    try {\r\n        let accounts = await web3.eth.getAccounts();\r\n        let accountBalance = await web3.eth.getBalance(accounts[0]);\r\n        accountBalance = web3.utils.fromWei(accountBalance);\r\n        return {\r\n            success: true,\r\n            account: accounts[0],\r\n            balance: accountBalance\r\n        }\r\n    } catch (error) {\r\n        return {\r\n            success: false,\r\n            result: \"Something went wrong: \" + error.message\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const buyNFTWithBNB = async (tokenID, amount) => {\r\n\r\n    const wallet = await getCurrentWallet();\r\n    if (wallet.success == false) {\r\n        return false;\r\n    }\r\n\r\n    try {\r\n        let bnAmount = window.web3.utils.toWei(\"\" + amount);\r\n        let tx = await market_contract.methods.buyNFTWithBNB(tokenID, wallet.account).send({ from: wallet.account, value: bnAmount });\r\n    } catch (error) {\r\n        console.log('buyNFTWithBNB error', error);\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport const buyNFTWithGHSP = async (tokenID) => {\r\n    const wallet = await getCurrentWallet();\r\n    if (wallet.success == false) {\r\n        return false;\r\n    }\r\n\r\n    try {\r\n        let tx = await market_contract.methods.buyNFTWithGHSP(tokenID, wallet.account).send({ from: wallet.account });\r\n    } catch (error) {\r\n        console.log('buyNFTWithGHSP error', error);\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport const buyNFTWithBUSD = async (tokenID) => {\r\n    const wallet = await getCurrentWallet();\r\n    if (wallet.success == false) {\r\n        return false;\r\n    }\r\n\r\n    try {\r\n        let tx = await market_contract.methods.buyNFTWithBUSD(tokenID, wallet.account).send({ from: wallet.account });\r\n    } catch (error) {\r\n        console.log('buyNFTWithBUSD error', error);\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport const removeTokenFromSale = async (tokenID) => {\r\n    const wallet = await getCurrentWallet();\r\n    if (wallet.success == false) {\r\n        return false;\r\n    }\r\n\r\n    try {\r\n        let tx = await market_contract.methods.removeTokenFromSale(tokenID, wallet.account).send({ from: wallet.account });\r\n    } catch (error) {\r\n        console.log('removeTokenFromSale error', error);\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport const putTokenOnSale = async (tokenID, price, saleTokenType) => {\r\n    const wallet = await getCurrentWallet();\r\n    if (wallet.success == false) {\r\n        return false;\r\n    }\r\n\r\n    try {\r\n        await minter_contract.methods.setApprovalForAll(MARKETPLACE_ADDRESS, true).send({ from: wallet.account });\r\n\r\n        let bnPrice = window.web3.utils.toWei(\"\" + price);\r\n        let tx = await market_contract.methods.putTokenOnSale(tokenID, bnPrice, saleTokenType).send({ from: wallet.account });\r\n    } catch (error) {\r\n        console.log('putTokenOnSale error', error);\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport const getSaleItems = async (tokenIds) => {\r\n\r\n    let saleItems = {};\r\n    for (let i = 0; i < tokenIds.length; i++) {\r\n        let item = await market_contract.methods.saleItems(tokenIds[i]).call();\r\n        saleItems[tokenIds[i]] = item;\r\n    }\r\n\r\n    console.log(\"Sale Items : \", saleItems);\r\n\r\n    return saleItems;\r\n}\r\n\r\nexport const createNFT = async (tokenURI) => {\r\n    const wallet = await getCurrentWallet();\r\n    if (wallet.success == false) {\r\n        return 0;\r\n    }\r\n\r\n    console.log('11111111111', wallet);\r\n\r\n    try {\r\n        let tokenID = 0;\r\n        tokenID = await minter_contract.methods.createNFT(tokenURI).send({ from: wallet.account });\r\n        return tokenID;\r\n    } catch (error) {\r\n        console.log('createNFT error', error);\r\n        return 0;\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\n\r\nexport const getCreator = async (tokenID) => {\r\n    const wallet = await getCurrentWallet();\r\n    if (wallet.success == false) {\r\n        return false;\r\n    }\r\n\r\n    try {\r\n        let tx = await minter_contract.methods.getCreator(tokenID).send({ from: wallet.account });\r\n    } catch (error) {\r\n        console.log('getCreator error', error);\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport const getTokenIds = async () => {\r\n    const wallet = await getCurrentWallet();\r\n    if (wallet.success == false) {\r\n        return [];\r\n    }\r\n\r\n    try {\r\n        let tokenIds = await minter_contract.methods.getTokenIds(wallet.account).call();\r\n        return tokenIds;\r\n    } catch (error) {\r\n        console.log('getTokenIds error', error);\r\n        return [];\r\n    }\r\n\r\n    return [];\r\n}","D:\\Dev\\Projects\\Yogesh\\bsc-marketplace\\ghospers_marketplace\\src\\pages\\mint\\IPFSUtils.js",["80"],"import { create, urlSource } from 'ipfs-http-client'\r\nimport axios from 'axios';\r\n//import IPFS from 'nano-ipfs-store'\r\nlet all = require('it-all')\r\n\r\nlet client = create('https://ipfs.infura.io:5001/api/v0');\r\n\r\nconst uploadFileToIPFS = async (files) => {\r\n    console.log(\"enter uploadFileToIPFS\", files);\r\n    let lists = [];\r\n    try {\r\n        for (let i = 0; i < files.length; i++) {\r\n            const added = await client.add(files[i])\r\n            const url = `https://ipfs.infura.io/ipfs/${added.path}`\r\n            console.log(\"[GD], FileName = \", files[i].name, \", Hash: \", added.path)\r\n            lists.push(url)\r\n        }\r\n        return lists\r\n    } catch (err) {\r\n        console.log(\"Error uploading file: \", err)\r\n        return []\r\n    }\r\n}\r\n\r\nconst uploadFolderToIPFS = async (files) => {\r\n    try {\r\n        /*let fileObjectsArray = Array.from(files).map((file) => {\r\n            return {\r\n                path: file.name,\r\n                content: file\r\n            }\r\n        })*/\r\n        const results = await all(\r\n            client.addAll(files, { wrapWithDirectory: true })\r\n        )\r\n        const length = results.length\r\n        const filesHash = results[length - 1].cid._baseCache.get('z')\r\n        const filesUrl = 'https://ipfs.infura.io/ipfs/' + filesHash\r\n        return filesUrl\r\n    } catch (err) {\r\n        console.log(\"[GD], Error uploading file: \", err)\r\n        return \"\"\r\n    }\r\n}\r\n\r\nconst uploadTextToIPFS = async (data) => {\r\n    try {\r\n        let doc = JSON.stringify(data)\r\n        const added = await client.add(doc)\r\n        const filesUrl = 'https://ipfs.infura.io/ipfs/' + added.path;\r\n        return filesUrl\r\n    } catch (err) {\r\n        //console.log(\"Error: \", err)\r\n        return null\r\n    }\r\n}\r\n\r\nconst loadFromIPFS = async (url) => {\r\n    let res = await axios.get(`https://ipfs.infura.io/ipfs/${url}`)\r\n    return res;\r\n}\r\n\r\n\r\nconst IPFSUtils = {\r\n    uploadFileToIPFS,\r\n    uploadFolderToIPFS,\r\n    uploadTextToIPFS,\r\n    loadFromIPFS\r\n}\r\n\r\n\r\nexport default IPFSUtils;",{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":5,"column":8,"nodeType":"87","messageId":"88","endLine":5,"endColumn":13},{"ruleId":"85","severity":1,"message":"89","line":11,"column":27,"nodeType":"87","messageId":"88","endLine":11,"endColumn":36},{"ruleId":"90","severity":1,"message":"91","line":33,"column":22,"nodeType":"92","messageId":"93","endLine":33,"endColumn":24},{"ruleId":"90","severity":1,"message":"91","line":35,"column":29,"nodeType":"92","messageId":"93","endLine":35,"endColumn":31},{"ruleId":"90","severity":1,"message":"91","line":194,"column":60,"nodeType":"92","messageId":"93","endLine":194,"endColumn":62},{"ruleId":"90","severity":1,"message":"91","line":194,"column":150,"nodeType":"92","messageId":"93","endLine":194,"endColumn":152},{"ruleId":"85","severity":1,"message":"94","line":16,"column":5,"nodeType":"87","messageId":"88","endLine":16,"endColumn":19},{"ruleId":"85","severity":1,"message":"95","line":17,"column":5,"nodeType":"87","messageId":"88","endLine":17,"endColumn":18},{"ruleId":"90","severity":1,"message":"91","line":106,"column":24,"nodeType":"92","messageId":"93","endLine":106,"endColumn":26},{"ruleId":"85","severity":1,"message":"96","line":112,"column":13,"nodeType":"87","messageId":"88","endLine":112,"endColumn":15},{"ruleId":"90","severity":1,"message":"91","line":123,"column":24,"nodeType":"92","messageId":"93","endLine":123,"endColumn":26},{"ruleId":"85","severity":1,"message":"96","line":128,"column":13,"nodeType":"87","messageId":"88","endLine":128,"endColumn":15},{"ruleId":"90","severity":1,"message":"91","line":139,"column":24,"nodeType":"92","messageId":"93","endLine":139,"endColumn":26},{"ruleId":"85","severity":1,"message":"96","line":144,"column":13,"nodeType":"87","messageId":"88","endLine":144,"endColumn":15},{"ruleId":"90","severity":1,"message":"91","line":155,"column":24,"nodeType":"92","messageId":"93","endLine":155,"endColumn":26},{"ruleId":"85","severity":1,"message":"96","line":160,"column":13,"nodeType":"87","messageId":"88","endLine":160,"endColumn":15},{"ruleId":"90","severity":1,"message":"91","line":171,"column":24,"nodeType":"92","messageId":"93","endLine":171,"endColumn":26},{"ruleId":"85","severity":1,"message":"96","line":179,"column":13,"nodeType":"87","messageId":"88","endLine":179,"endColumn":15},{"ruleId":"90","severity":1,"message":"91","line":203,"column":24,"nodeType":"92","messageId":"93","endLine":203,"endColumn":26},{"ruleId":"97","severity":1,"message":"98","line":218,"column":5,"nodeType":"99","messageId":"100","endLine":218,"endColumn":14},{"ruleId":"90","severity":1,"message":"91","line":224,"column":24,"nodeType":"92","messageId":"93","endLine":224,"endColumn":26},{"ruleId":"85","severity":1,"message":"96","line":229,"column":13,"nodeType":"87","messageId":"88","endLine":229,"endColumn":15},{"ruleId":"90","severity":1,"message":"91","line":240,"column":24,"nodeType":"92","messageId":"93","endLine":240,"endColumn":26},{"ruleId":"97","severity":1,"message":"98","line":252,"column":5,"nodeType":"99","messageId":"100","endLine":252,"endColumn":15},{"ruleId":"85","severity":1,"message":"101","line":1,"column":18,"nodeType":"87","messageId":"88","endLine":1,"endColumn":27},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'Card2' is defined but never used.","Identifier","unusedVar","'createNFT' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ghosp_contract' is assigned a value but never used.","'busd_contract' is assigned a value but never used.","'tx' is assigned a value but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'urlSource' is defined but never used.","no-global-assign","no-unsafe-negation"]